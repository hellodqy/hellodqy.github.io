<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小岛面积</title>
      <link href="/post/1ee68337.html"/>
      <url>/post/1ee68337.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）"><a href="#题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）" class="headerlink" title="题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）"></a>题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）</h4><p> <strong><strong>上述方阵表示的海域满足下面两个要求：</strong><br> <strong>1、小岛只有一个</strong><br> 2、用1表示的海岸线肯定可以封闭成一个小岛，但有可能是凸的，也有可能是凹的，所以在判断时：对于方阵中的任意一个元素0，如果其位于同一行上的两个1之间，并且位于同一列上的两个1之间，则该元素肯定在1围起来的区域中。不符合该规定的其它情况不考虑。</strong><br> 样例：<br> 输入：<br> 6<br> 0 0 0 1 0 0<br> 0 0 1 0 1 0<br> 0 1 0 0 0 1<br> 1 0 0 0 1 0<br> 1 0 1 0 1 0<br> 1 1 0 1 1 1<br> 输出：<br> 9</p><p> <strong>思路：边界上的0一定不被1包围，将其值改为2，与2有接触的0被感染成2，不断感染，最后幸存的0是被1包围的</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sea[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; sea[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)     <span class="comment">// 矩阵最大为9x9, 最多的情况是中间的0不被包含，则需要侵蚀5次</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (sea[i][j] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span> || i == n - <span class="number">1</span> || j == <span class="number">0</span> || j == n - <span class="number">1</span>)</span><br><span class="line">                        sea[i][j] = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (sea[i][j - <span class="number">1</span>] == <span class="number">2</span> || sea[i - <span class="number">1</span>][j] == <span class="number">2</span> || sea[i][j + <span class="number">1</span>] == <span class="number">2</span> || sea[i + <span class="number">1</span>][j] == <span class="number">2</span>)</span><br><span class="line">                        sea[i][j] = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!sea[i][j])</span><br><span class="line">                sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yura&#39;s Smile</title>
      <link href="/post/c020e7d8.html"/>
      <url>/post/c020e7d8.html</url>
      
        <content type="html"><![CDATA[<p>After holding one team contest, boy Yura got very tired and wanted to change his life and move to Japan. In honor of such a change, Yura changed his name to something nice.</p><p>Fascinated by this idea he already thought up a name s consisting only of characters “_” and “^”. But there’s a problem — Yura likes smiley faces “^_^” and “^^”. Therefore any character of the name must be a part of at least one such smiley. Note that only the <strong>consecutive</strong> characters of the name can be a smiley face.</p><p>More formally, consider all occurrences of the strings “^_^” and “^^” in the string s. Then all such occurrences must cover the whole string s, possibly with intersections. For example, in the string “^^__^_^^__^” the characters at positions 3,4,9,10 and 11 are not contained inside any smileys, and the other characters at positions 1,2,5,6,7 and 8 are contained inside smileys.</p><p>In one operation Jura can insert one of the characters “_” and “^” into his name s (you can insert it at any position in the string). He asks you to tell him the minimum number of operations you need to do to make the name fit Yura’s criteria.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Each test consists of multiple test cases. The first line contains a single integer t(1≤t≤100) —the number of test cases. The description of test cases follows.</p><p>The first and only line of each test case contains a single string s (1≤|s|≤100), consisting of characters “_” and “^”,  — the name to change.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output a single integer — the minimum number of characters you need to add to the name to make it fit for Yura. If you don’t need to change anything in the name, print 0.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>第一次做英文编程题，看得有点懵，大概是在说，输入多行字符串，每个字符串由^或下划线组成，要求每个字符串的每个字符都能和相邻的字符组成^^或^_^，问需要添加的 ^ 和下划线的最小数目是多少</p><p>我的思路是，遍历字符串，搜索下划线，找到就观察其相邻两边是否有 ^ ，两边都有就直接删除掉这个下划线；只有一个就计数加一，并删除这个下划线；一个都没有就计数加二，删除该下划线并在该位置插入一个 ^；只有一个字符的字符串单独处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> n, pos, res[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">getline</span>(cin, str);<span class="comment">// 把前面cin遗留的结束符处理掉</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">getline</span>(cin, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str == <span class="string">&quot;^&quot;</span>)</span><br><span class="line">res[i]++;</span><br><span class="line"><span class="keyword">while</span> ((pos = str.<span class="built_in">find</span>(<span class="string">&#x27;_&#x27;</span>)) != string::npos)<span class="comment">// 字符串中没有&#x27;_&#x27;时停止</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == pos)<span class="comment">// &#x27;_&#x27;在第一个位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str.<span class="built_in">size</span>() - <span class="number">1</span> == pos)<span class="comment">// &#x27;_&#x27;在最后一个位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">// &#x27;_&#x27;在中间</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> != str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">res[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">cout &lt;&lt; res[i] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twikoo评论设置邮箱提醒</title>
      <link href="/post/e988d7ce.html"/>
      <url>/post/e988d7ce.html</url>
      
        <content type="html"><![CDATA[<p>安装Twikoo请搜索文章：添加Twikoo实现博客在线评论</p><p>安装完成后可以对Twikoo进行以下配置：</p><h2 id="设置邮箱提醒"><a href="#设置邮箱提醒" class="headerlink" title="设置邮箱提醒"></a>设置邮箱提醒</h2><p>设置邮箱提醒可以在有小伙伴给你的文章评论时向你发送邮件让你及时知道</p><ol><li><p>开通POP3&#x2F;SMTP服务(以QQ邮箱为例，其他邮箱类比)</p><p>在电脑端打开QQ邮箱并点击最上方的设置</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqS3t.png"></p><p>点击帐户</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mb4hR.png"></p><p>下拉找到POP3&#x2F;SMTP服务并点击开启服务，按指示验证即可</p><h3 id="注意：验证完毕以后会出现授权码，记得保存一会要用"><a href="#注意：验证完毕以后会出现授权码，记得保存一会要用" class="headerlink" title="注意：验证完毕以后会出现授权码，记得保存一会要用"></a>注意：验证完毕以后会出现授权码，记得保存一会要用</h3><p><img src="https://s1.ax1x.com/2023/04/27/p9MbhN9.png"></p></li></ol><p>​如果不小心忘记保存授权码可以重新生成并保存</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqQDU.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqMuT.png"></p><h2 id="配置邮件通知服务"><a href="#配置邮件通知服务" class="headerlink" title="配置邮件通知服务"></a>配置邮件通知服务</h2><p>随便打开一篇文章，拉到底部，登录Twikoo管理面板</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mq5Vg.png"></p><p>下拉找到邮件通知选项</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqIaQ.png"></p><h3 id="可以参考我的配置，没填的就是用的默认"><a href="#可以参考我的配置，没填的就是用的默认" class="headerlink" title="可以参考我的配置，没填的就是用的默认"></a>可以参考我的配置，没填的就是用的默认</h3><h4 id="SMTP-PASS填刚刚生成的授权码"><a href="#SMTP-PASS填刚刚生成的授权码" class="headerlink" title="SMTP_PASS填刚刚生成的授权码"></a>SMTP_PASS填刚刚生成的授权码</h4><p><img src="https://s1.ax1x.com/2023/04/27/p9MqhqS.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mqfr8.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqWKf.png"></p><p>填写完成以后点击邮件通知测试，收到来自Twikoo的邮件就说明配置正确</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqIaQ.png"></p><p>到评论区发送一条评论就可以在邮箱收到提醒啦</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MbfAJ.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加Twikoo实现博客在线评论——2023最新版</title>
      <link href="/post/d0d1b7a9.html"/>
      <url>/post/d0d1b7a9.html</url>
      
        <content type="html"><![CDATA[<h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><h3 id="注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程"><a href="#注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程" class="headerlink" title="注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程"></a>注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程</h3><p><img src="https://s1.ax1x.com/2023/04/25/p9uLFRP.png" alt="云函数运行成功"></p><p>部署方式：<a href="https://www.bilibili.com/video/BV1Fh411e7ZH">https://www.bilibili.com/video/BV1Fh411e7ZH</a></p><p>参考Twikoo文档：<a href="https://twikoo.js.org/">https://twikoo.js.org/</a></p><p>视频中下一步要求我们点击DOMAINS链接，但是这个链接已经被墙了，无法访问到，我们需要更改DOMAINS</p><h2 id="申请个人域名"><a href="#申请个人域名" class="headerlink" title="申请个人域名"></a>申请个人域名</h2><p>阿里云、腾讯云、华为云都可以，我在阿里云申请的</p><ol><li>主页搜索域名注册，在搜索记录里点击域名注册</li></ol><p><img src="https://s1.ax1x.com/2023/04/26/p9KUQSS.png"></p><ol start="2"><li>自定义想要的域名</li></ol><p><img src="https://s1.ax1x.com/2023/04/26/p9KUVeA.png"></p><ol start="3"><li><p>购买域名</p><h3 id="域名不需要备案，因为我们只是需要一个二级域名"><a href="#域名不需要备案，因为我们只是需要一个二级域名" class="headerlink" title="域名不需要备案，因为我们只是需要一个二级域名"></a><img src="https://s1.ax1x.com/2023/04/26/p9KU9JK.png">域名不需要备案，因为我们只是需要一个二级域名</h3></li></ol><h2 id="生成二级域名"><a href="#生成二级域名" class="headerlink" title="生成二级域名"></a>生成二级域名</h2><ol><li><h3 id="在阿里云控制台添加子域名解析记录"><a href="#在阿里云控制台添加子域名解析记录" class="headerlink" title="在阿里云控制台添加子域名解析记录"></a>在阿里云控制台添加子域名解析记录</h3><p>首页打开控制台</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Ka81O.png"></p><p>点击图片中的云解析</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KanB9.png"></p><p>点击你购买的域名</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KamnJ.png"></p><p>点击添加记录</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>记录类型选择CNAME</p><p>主机记录随便写，我填的是blog</p><p>记录值设置为你的网站域名，例如我的是：hellodqy.github.io</p><p>点击确认</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaVcF.png"></p><p>现在已经生成了一个二级域名，但是这个域名并不能打开任何网页，因为它没有与Github Page绑定，本教程不需要绑定！想绑定的话直接去Github的仓库找到CNAME文件，没有的话就自己创建一个，将自己的二级域名添加到文件第一行（内容必须为一行）,此时在地址栏输入自己的子域名就可以跳转到 Github Page 页面了</p></li></ol><h2 id="更改DOMAINS"><a href="#更改DOMAINS" class="headerlink" title="更改DOMAINS"></a>更改DOMAINS</h2><p>打开Vercel</p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLyLD.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLgdH.png"></p><p>将刚刚申请的二级域名填进去，点击Save</p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLcee.png"></p><p>然后会出现报错：要求我们到DNS Provider去添加记录</p><p>回到这个界面，先删除记录值为你的网站域名的那条记录，再次添加记录</p><h3 id="注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件"><a href="#注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件" class="headerlink" title="注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件"></a>注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件</h3><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>按照报错提示填：类型：CNAME；主机记录：刚刚填的是什么，现在就填什么，比如刚刚申请二级域名我填的是blog，现在就填blog</p><p>主要是记录值要改，填报错提示中的value值，点击确认</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaVcF.png"></p><p>回到Vercel的这个界面，点击上方的Deployments选项</p><p><img src="https://img.gejiba.com/images/873afe2505fe5c550618ee4e2d1cfb66.png"></p><p>找到current记录，点击三个点，点击Redeploy</p><p><img src="https://img.gejiba.com/images/45749a7cc312c2bac96e66ff25d95fe5.png"></p><p><img src="https://img.gejiba.com/images/a5da36952e4d76027bfa9e0896b66c1f.png"></p><p>看到DOMAINS是你设置的二级域名就修改正确了</p><p><img src="https://img.gejiba.com/images/723d9c021a5fa74ccea440f4e068b8fc.png"></p><p>过几分钟，点击查看新的DOMAINS网页中出现云函数运行成功即可，如图：</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Kd1Vs.png"></p><h2 id="获取Vercel的环境ID-enVId"><a href="#获取Vercel的环境ID-enVId" class="headerlink" title="获取Vercel的环境ID(enVId)"></a>获取Vercel的环境ID(enVId)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:// + DOMAINS(就是你设置的二级域名)</span><br></pre></td></tr></table></figure><h2 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h2><p>修改主题配置文件_config.butterfly.yml，搜索twikoo，你只需要把获取到Vercel的环境 ID (envId) 填写到配置上去就行，其他不改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">  envId:</span><br><span class="line">  region:</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br></pre></td></tr></table></figure><p>然后搜索comments，设置评论应用为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comments:</span><br><span class="line">  use: twikoo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：最新评论只会在刷新时才会去读取，并不会实时变化</span><br><span class="line">由于 API 有 访问次数限制，为了避免调用太多，主题默认存取期限为 10 分鐘。也就是説，调用后资料会存在 localStorage 里，10 分鐘内刷新网站只会去 localStorage 读取资料。 10 分鐘期限一过，刷新页面时才会去调取 API 读取新的数据。（ 3.6.0 新增了 storage 配置，可自行配置缓存时间）</span><br></pre></td></tr></table></figure><p>在侧边栏显示最新评论板块</p><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Aside widget - Newest Comments</span><br><span class="line">newest_comments:</span><br><span class="line">  enable: true</span><br><span class="line">  sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  limit: 6</span><br><span class="line">  storage: 10 # unit: mins, save data to localStorage</span><br><span class="line">  avatar: true</span><br></pre></td></tr></table></figure><h2 id="登录Twikoo管理面板："><a href="#登录Twikoo管理面板：" class="headerlink" title="登录Twikoo管理面板："></a>登录Twikoo管理面板：</h2><p>先把刚刚的所有修改保存并部署到本地</p><p>打开网站随便一篇文章翻到页面底部，点击设置并注册管理员密码</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KUksH.png"></p><p>评论设置完毕，测试一下吧~</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KUCRO.png" alt="测试成功"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo集成Algolia实现网站搜索引擎</title>
      <link href="/post/fe591630.html"/>
      <url>/post/fe591630.html</url>
      
        <content type="html"><![CDATA[<p>尝试一晚终于找到一个可行的办法</p><h2 id="创建-Alogolia-Index"><a href="#创建-Alogolia-Index" class="headerlink" title="创建 Alogolia Index"></a>创建 Alogolia Index</h2><p>首先登陆进入 <a href="https://www.algolia.com/users/sign_in">Algolia 官网</a>，我们可以使用 GitHub 或 Google 帐号登录。</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5A4U.png"></p><p>创建一个Index，随便取一个名字</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5CBq.png"></p><p>配置API Key</p><p>接下来我们需要配置 Algolia——API Keys 到我们自己的 hexo 站点中，关联两者，使得 Algolia 能够搜集我们 hexo 站点的数据通过 API 发送给 Aloglia</p><p>回到首页打开API Keys，其中的 <code>Application ID</code> 、<code>Search-Only API Key</code>、<code>Admin API KEY</code>信息将会被用到</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5FEV.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5PH0.png"></p><p>首先我们需要修改Blog根目录下的 _config.yml：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: &#x27;你的Applicaiton ID&#x27;</span><br><span class="line">  apiKey: &#x27;你的Search-Only API Key&#x27;</span><br><span class="line">  indexName: &#x27;创建的索引名称&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5kNT.png" alt="只用写上面给的三行即可"></p><p>然后我们需要配置一个名称为 <code>HEXO_ALGOLIA_INDEXING_KEY</code>，内容为 Alogolia 网页中 <code>Admin API KEY</code> 的环境变量，在Blog根目录下进行Git Bash并输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=你的Admin API KEY</span><br></pre></td></tr></table></figure><h2 id="通过-Hexo-Aloglia-获取站点数据"><a href="#通过-Hexo-Aloglia-获取站点数据" class="headerlink" title="通过 Hexo Aloglia 获取站点数据"></a>通过 Hexo Aloglia 获取站点数据</h2><p>前面我们创建了 Index，但是此时为空，不包含任何数据。我们需要安装 <code>Hexo Aloglia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Aloglia</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>安装完成后，在 hexo 站点根目录下执行下列命令来搜集数据更新到我们刚创建的 Index 中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5VCF.png"></p><p>如上图所示则代表成功将 hexo 站点中的数据发送到了 Alogolia 的 Index 中，我们可以在网页中看到所有的数据</p><h2 id="主题集成Algolia："><a href="#主题集成Algolia：" class="headerlink" title="主题集成Algolia："></a>主题集成Algolia：</h2><p>更改<strong>主题配置文件</strong>的_config.yml(注意是主题配置文件的_config.yml，我的是Blog&#x2F;themes&#x2F;butterfly目录下的，不是Blog根目录的_config.yml)，找到 Algolia Search 配置部分(文件当中有，直接搜索)，将<code>enable</code> 改为<code>true</code> 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Algolia search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n555T.png"></p><h2 id="修改搜索目录"><a href="#修改搜索目录" class="headerlink" title="修改搜索目录"></a>修改搜索目录</h2><p>之前一直没改站点URL，昨晚折腾到一点过也没搞好，今早遇到大佬指点才解决</p><p>如果你能搜索到对应文章但是点击搜索记录却是这样的页面</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nvoid.png"></p><p>那应该是你的站点URL没有修改，打开Blog根目录下的_config.yml，将Url里面的网址修改为你的域名</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nxCzq.png"></p><h2 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="注意：每次对网站内容修改以后都需要更新Algolia"><a href="#注意：每次对网站内容修改以后都需要更新Algolia" class="headerlink" title="注意：每次对网站内容修改以后都需要更新Algolia"></a>注意：每次对网站内容修改以后都需要更新Algolia</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客美化</title>
      <link href="/post/8f1335fc.html"/>
      <url>/post/8f1335fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="Butterfly-主题安装"><a href="#Butterfly-主题安装" class="headerlink" title="Butterfly 主题安装"></a>Butterfly 主题安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>这里面如果报错，如下图所示</p><p><img src="https://static001.geekbang.org/infoq/4b/4bd9fe08801a3332cf5552216b631149.png"></p><p>执行下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>Blog根目录下找到_config.yml文件</p><p>搜索找到theme，将landscape改为butterfly</p><p><img src="https://static001.geekbang.org/infoq/b0/b08a6de31ecdfcc74ccb0037f23094b3.png"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h2><p>可设置主页中展示的网站副标题或者自己喜欢的座右铭</p><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source 調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span><br><span class="line">  # source: 2  調用一句網（簡體） http://yijuzhan.com/</span><br><span class="line">  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  # source: 3</span><br><span class="line">  # 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 我双手合十的愿望里永远有你。</span><br><span class="line">    - 穿越人海，只为与你相拥。</span><br><span class="line">    - 手握日月摘 ♥ 悦。</span><br></pre></td></tr></table></figure><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><p>修改主题配置文件_config.butterfly.yml，搜索aside</p><p>带有card_前缀的是显示在网页右边的那一竖列的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># aside (側邊欄)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  display:</span><br><span class="line">    archive: true</span><br><span class="line">    tag: true</span><br><span class="line">    category: true</span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      enable: true</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: Follow Me</span><br><span class="line">      link: https://github.com/hellodqy</span><br><span class="line">  card_announcement:</span><br><span class="line">    enable: true</span><br><span class="line">    content: DQY &amp; WY</span><br><span class="line">  card_recent_post:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 5 # if set 0 will show all</span><br><span class="line">    sort: date # date or updated</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_categories:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    expand: none # none/true/false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_tags:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 40 # if set 0 will show all</span><br><span class="line">    color: false</span><br><span class="line">    orderby: random # Order of tags, random/name/length</span><br><span class="line">    order: 1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_archives:</span><br><span class="line">    enable: true</span><br><span class="line">    type: monthly # yearly or monthly</span><br><span class="line">    format: MMMM YYYY # eg: YYYY年MM月</span><br><span class="line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_webinfo:</span><br><span class="line">    enable: true</span><br><span class="line">    post_count: true</span><br><span class="line">    last_push_date: true</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br></pre></td></tr></table></figure><h2 id="首页文章数目"><a href="#首页文章数目" class="headerlink" title="首页文章数目"></a>首页文章数目</h2><p>首页显示的文章数目在Blog根目录下的系统配置文件修改，打开_config.yml搜索index_generator</p><p>per_page可以修改显示的文章数目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 5</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure><h2 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a>访问人数</h2><p>修改主题配置文件_config.butterfly.yml，搜索busuanzi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: true</span><br><span class="line">  page_pv: true</span><br></pre></td></tr></table></figure><h2 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h2><p>修改主题配置文件_config.butterfly.yml，搜索runtimeshow</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  publish_date: 6/7/2018 00:00:00  </span><br><span class="line">  ##网页开通时间</span><br><span class="line">  #格式: 月/日/年 时间</span><br><span class="line">  #也可以写成 年/月/日 时间</span><br></pre></td></tr></table></figure><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><p>进入Blog根目录并执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount —save or yarn add hexo-wordcount</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.butterfly.yml，搜索wordcount</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><p><img src="https://haiyong.site/img/butterfly/22041102.png"></p><h2 id="公告两个小人"><a href="#公告两个小人" class="headerlink" title="公告两个小人"></a>公告两个小人</h2><p>在 <code>Blog/themes/Butterfly/layout/includes/widget/card_announcement.pug</code> 下添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> .xpand(style=&#x27;height:200px;&#x27;)</span><br><span class="line">  canvas.illo(width=&#x27;800&#x27; height=&#x27;800&#x27; style=&#x27;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople1.js&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/zdog.dist.js&#x27;)</span><br><span class="line">script#rendered-js(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople.js&#x27;)</span><br><span class="line">style.</span><br><span class="line">  .card-widget.card-announcement &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">  canvas &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  cursor: move;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>缩进参考：</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mvr9J.png"></p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><p>修改主题配置文件_config.butterfly.yml，去掉前面的井号就是启用该选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fas fa-home</span><br><span class="line">  归档: /archives/ || fas fa-archive</span><br><span class="line">  摸鱼||fas fa-fish:</span><br><span class="line">    游戏: /moyu/ || fas fa-gamepad</span><br><span class="line">    工具: /tools/ || fas fa-tools</span><br><span class="line">  蓝桥: /lanqiao/ || fas fa-folder-open</span><br><span class="line">  标签: /tags/ || fas fa-tags</span><br><span class="line">  # 分类: /categories/ ||</span><br><span class="line">  # List||fas fa-list:</span><br><span class="line">  #   Music: /music/ || fas fa-music</span><br><span class="line">  #   Movie: /movies/ || fas fa-video</span><br><span class="line">  友人帐: /link/ || fas fa-link</span><br><span class="line">  关于我: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><h2 id="关键页面生成"><a href="#关键页面生成" class="headerlink" title="关键页面生成"></a>关键页面生成</h2><p>博客有一些关键页面需要手动生成。</p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>进入Blog根目录cmd执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>打开 <code>source/tags/index.md</code> 文件，修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-03-11 12:53:45</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p>进入Blog根目录cmd执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>打开source&#x2F;categories&#x2F;index.md文件，修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2022-03-11 12:56:06</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="背景图片参考"><a href="#背景图片参考" class="headerlink" title="背景图片参考"></a>背景图片参考</h2><ol><li><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li><a href="https://wall.alphacoders.com/">https://wall.alphacoders.com/</a></li><li><a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a></li></ol><p>网站美化：<a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><h2 id="背景图设置"><a href="#背景图设置" class="headerlink" title="背景图设置"></a>背景图设置</h2><h3 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h3><table><thead><tr><th>配置</th><th>含义</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子页面 的 默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面 的 默认 top_img</td></tr><tr><td>category_per_img</td><td>category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>修改主题配置文件_config.butterfly.yml</p><p>ctrl+f直接搜索index_img</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index_img: 图片链接(例如: https://s1.ax1x.com/2023/04/25/p9uqhKU.jpg)</span><br></pre></td></tr></table></figure><p><code>tag_per_img</code> 和 <code>category_per_img</code> 是 3.2.0 新增的内容，可对 tag 和 category 进行单独的配置</p><p>并不推荐为每个 tag 和每个 category 都配置不同的顶部图，因为配置太多会拖慢生成速度</p><h3 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h3><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># footer是否显示图片背景(与 top_img一致)</span><br><span class="line">footer_bg: true</span><br></pre></td></tr></table></figure><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>打开<strong>主题配置文件</strong>的_config.yml搜索background，修改background后面的链接即可</p><h3 id="注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’"><a href="#注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’" class="headerlink" title="注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’"></a>注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’</h3><p><img src="https://s1.ax1x.com/2023/04/25/p9uSCrV.png"></p><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><p>修改主题配置文件_config.butterfly.yml，搜索activate-power-mode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Typewriter Effect (打字效果)</span><br><span class="line"># https://github.com/disjukr/activate-power-mode</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # open particle animation (冒光特效)</span><br><span class="line">  shake: true #  open shake (抖動特效)</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>修改主题配置文件_config.butterfly.yml</p><ol><li><p>烟花，搜索fireworks</p><p>zIndex：-1表示烟火效果在底部；9999表示效果在前面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fireworks:</span><br><span class="line">  enable: true</span><br><span class="line">  zIndex: 9999 # -1 or 9999</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure></li><li><p>爱心，搜索click_heart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 点击出現爱心</span><br><span class="line">click_heart:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure></li><li><p>搜索ClickShowText</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 点击出现文字，文字可自行修改</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: false</span><br><span class="line">  text:</span><br><span class="line">    - I</span><br><span class="line">    - LOVE</span><br><span class="line">    - YOU</span><br><span class="line">  fontSize: 15px</span><br><span class="line">  random: false # 文字随机显示</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure></li></ol><h2 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h2><p>修改主题配置文件_config.butterfly.yml，搜索reward</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Sponsor/reward</span><br><span class="line">reward:</span><br><span class="line">  enable: true</span><br><span class="line">  QR_code:</span><br><span class="line">     - img: /img/wechat.jpg</span><br><span class="line">       link:</span><br><span class="line">       text: 微信</span><br><span class="line">     - img: /img/alipay.jpg</span><br><span class="line">       link:</span><br><span class="line">       text: 支付宝</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客撰写与发布</title>
      <link href="/post/c2ec21ed.html"/>
      <url>/post/c2ec21ed.html</url>
      
        <content type="html"><![CDATA[<h2 id="Typora下载与配置"><a href="#Typora下载与配置" class="headerlink" title="Typora下载与配置"></a>Typora下载与配置</h2><p>下载与破解教程：<a href="https://www.cnblogs.com/guoxuanhan/p/16841068.html">Typora 1.4.8 – 2022最新Typora破解激活教程！你的Markdown编辑器！ - 郭炫韩Coding - 博客园 (cnblogs.com)</a></p><h2 id="文件夹介绍"><a href="#文件夹介绍" class="headerlink" title="文件夹介绍"></a>文件夹介绍</h2><ul><li><code>_config.yml</code>：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</li><li><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</li><li><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</li><li><code>source</code>：非常重要。所有的个人文件都在里面！</li><li><code>themes</code>：主题文件夹，可以从<a href="https://hexo.io/themes/">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</li></ul><p><img src="https://static001.geekbang.org/infoq/3f/3f7b8b410726691082019f2ab603976b.png"></p><h2 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;新建博客文章名&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="文章标题与封面"><a href="#文章标题与封面" class="headerlink" title="文章标题与封面"></a>文章标题与封面</h2><p><img src="https://s1.ax1x.com/2023/04/25/p9uidUK.png"></p><h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><ol><li>清理静态缓存</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><ol start="2"><li>生成</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="3"><li>本地部署</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>​部署以后打开一个浏览器，在网址栏输入localhost:4000&#x2F;即可看到网站更新</p><ol start="4"><li>部署到Github</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/post/405e7e90.html"/>
      <url>/post/405e7e90.html</url>
      
        <content type="html"><![CDATA[<p>啊~磕磕绊绊终于搭好了，分享一下我的搭建过程和遇到的问题与解决方案：</p><h3 id="安装并配置Node-js"><a href="#安装并配置Node-js" class="headerlink" title="安装并配置Node.js"></a>安装并配置Node.js</h3><p>注意：</p><ol><li>没有需求千万不要安装cnpm！(参考文章第五步有一个按需安装cnpm)</li><li>cmd全程使用管理员模式打开</li></ol><p>参考文章：<a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">https://blog.csdn.net/weixin_52799373/article/details/123840137</a></p><p>cmd管理员模式下执行下述命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="安装并配置Git"><a href="#安装并配置Git" class="headerlink" title="安装并配置Git"></a>安装并配置Git</h3><p>这个没什么坑，照着教程做就好</p><p>Git教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p><img src="https://pic1.zhimg.com/80/v2-010e684d021680e94f0142adc3e014b8_720w.webp"></p><p>呐，这里一定要注意，仓库名称一定得是你的Github用户名.github.io</p><p>例如：你的Github用户名叫做helloworld，那么仓库名称就应该设置为helloworld.github.io</p><p>另外，访问权限得设置成Public，设成Private不得行！</p><p><img src="https://pic2.zhimg.com/80/v2-d6fa95cce4e455153187135c8ee12359_720w.webp"></p><h3 id="生成Github-SSH-Token"><a href="#生成Github-SSH-Token" class="headerlink" title="生成Github  SSH  Token"></a>生成Github  SSH  Token</h3><p>注意：生成的Token记得复制并保存下来</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113125nl1vidmmpo01dmf5.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113129xg4oz4bezohzub97.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113132ift2tkwxfyedt0y7.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113134q8838l6vv776lyv7.png"></p><p>Expiration是这个Token的使用期限，我偷懒就爱选择No expiration(永不过期)</p><p>权限全勾上就好</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113136honfjanazvs9ji1y.png"></p><h3 id="使用SSH-Token"><a href="#使用SSH-Token" class="headerlink" title="使用SSH  Token"></a>使用SSH  Token</h3><ol><li><p>删除远程仓库地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove origin</span><br></pre></td></tr></table></figure></li><li><p>检查是否删除成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>没有输出证明删除成功</p></li><li><p>链接远程仓库</p><p>注意：不要直接复制，SSH密钥粘贴刚刚保存的Token，用户名和仓库名记得替换成你自己的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://SSH密钥@github.com/用户名/仓库名.git</span><br></pre></td></tr></table></figure><p>完成后再次输入第二步的命令，看到fetch和pull的网址里面出现有生成SSH Token就设置成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li></ol><h3 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH  Keys"></a>生成SSH  Keys</h3><p>执行下述命令，提示选择y&#x2F;n就输入y，没有就一路回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>找到密钥位置并复制</p><p><img src="https://static001.geekbang.org/infoq/a2/a29aec8d949a8152bad17e1649316bbc.png"></p><p>测试ssh是否绑定成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果问你yes&#x2F;no直接yes</p><p><img src="https://static001.geekbang.org/infoq/82/827db6ee904638d62a4f5249fe110bdf.png" alt="img"></p><h3 id="本地访问博客"><a href="#本地访问博客" class="headerlink" title="本地访问博客"></a>本地访问博客</h3><ol><li><p>创建一个Blog文件夹并启用Git Bash Here</p><p><img src="https://static001.geekbang.org/infoq/b0/b06a27bee58606277ea46f413b34ed14.png"></p></li><li><p>初始化hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这里折腾了好久，一直显示command not found，重装了好几次node.jx，分析应该是前面安装了cnpm导致hexo的存储位置被改掉了</p><p>解决：前面加一个npx就好了，还是不行的话就自行百度谷歌吧</p><p>这里使用npx hexo … 的话，以后所有hexo命令都需要加上npx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/dd/ddf2ca2f77a32aaff0c8f17b44bbe99b.png"></p></li><li><p>生成本地的hexo页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/25/259acb6b590338700c8f61ffcc531593.png"></p></li><li><p>访问</p><p>浏览器输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/5f/5fde531819308103720a5c098f342092.png"></p></li></ol><p>​ctrl+c关闭服务器</p><h3 id="上传Blog到Github"><a href="#上传Blog到Github" class="headerlink" title="上传Blog到Github"></a>上传Blog到Github</h3><p>修改-config.yml文件</p><p><img src="https://static001.geekbang.org/infoq/76/76aa4fb226389c10209b17cd97f1b7d8.png"></p><p>打开该文件并修改内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你的github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/eb/eb043db3b67fa17c51096553f05cc055.png"></p><h3 id="安装hexo-deployer-git-自动部署发布工具"><a href="#安装hexo-deployer-git-自动部署发布工具" class="headerlink" title="安装hexo-deployer-git 自动部署发布工具"></a>安装hexo-deployer-git 自动部署发布工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/a9/a94aa787c8627d7bc2d95fc3aabe211d.png"></p><p>生成页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/ec/ec4dc5e76906c62036e61f4d083ebaad.png"></p><p>本地文件上传到Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>注意：中间会出现登录界面，复制前面生成的SSH Token粘贴进去就好</p><p><img src="https://static001.geekbang.org/infoq/1b/1ba83adbf958f9ed0ad0129bd843f785.png" alt="上传成功"></p><p>注意：网络报错多次尝试就好</p><p><img src="https://static001.geekbang.org/infoq/5e/5e33beb4a80df251722f550b7ca0de88.png"></p><h3 id="访问Github博客"><a href="#访问Github博客" class="headerlink" title="访问Github博客"></a>访问Github博客</h3><p>浏览器网址输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://用户名.github.io/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/aa/aa2f760148fbcbf6c3ce0b43cbe3433c.png"></p><p>这一步折腾最久，做好的html网页传到Github后，用户名.github.io打不开，报错404，如图</p><p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Vbx2WxHa_5pDuXsBgAqjPgHaEC?w=319&h=143&c=7&r=0&o=5&dpr=1.3&pid=1.7"></p><p>解决：一开始试了很多网上的办法，比如点击页面中间的read the full documention然后跟着里面的步骤操作，没有效果，但是检查了很多遍仓库配置都没有问题，后来发现只是workflow一直没有启动，刷新一下仓库配置就可以了</p><ol><li>打开.github.io仓库并点击Setiings</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171456ke8m5i5wjjhw5qmd.png"></p><ol start="2"><li>点击右侧菜单的Pages并重新选择Source和Branch，我当时配置是对的就没有改，但是保持原来的配置只是重新选择并保存一下可以刷新配置，邮箱就收到workflow启用的邮件了~</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171450vvfwzk3i3233vssw.png"></p><h3 id="博客搭建完毕"><a href="#博客搭建完毕" class="headerlink" title="博客搭建完毕~"></a>博客搭建完毕~</h3><p><img src="https://static001.geekbang.org/infoq/0a/0a397f64a129a210ccbebdff832de7af.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
