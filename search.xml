<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>打赏功能添加银币图标和音效</title>
      <link href="/post/1138de43.html"/>
      <url>/post/1138de43.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>转载自：<a href="https://anzhiy.cn/posts/sdxhu.html">安知鱼butterfly重装日记</a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>打赏会有投币特效和┗|｀O′|┛ 嗷~~的一声~</p><p><img src="https://s1.ax1x.com/2023/05/22/p9IsECD.png"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-修改-Blogroot-themes-butterfly-languages-zh-CN-yml"><a href="#1-修改-Blogroot-themes-butterfly-languages-zh-CN-yml" class="headerlink" title="1. 修改[Blogroot]\themes\butterfly\languages\zh-CN.yml"></a>1. 修改<code>[Blogroot]\themes\butterfly\languages\zh-CN.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">date_suffix:</span></span><br><span class="line">  <span class="attr">just:</span> <span class="string">刚刚</span></span><br><span class="line">  <span class="attr">min:</span> <span class="string">分钟前</span></span><br><span class="line">  <span class="attr">hour:</span> <span class="string">小时前</span></span><br><span class="line">  <span class="attr">day:</span> <span class="string">天前</span></span><br><span class="line">  <span class="attr">month:</span> <span class="string">个月前</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">donate:</span> <span class="string">打赏</span></span><br><span class="line"><span class="string">+</span> <span class="attr">donate:</span> <span class="string">不给糖果就捣蛋</span></span><br><span class="line"><span class="attr">share:</span> <span class="string">分享</span></span><br></pre></td></tr></table></figure><h3 id="2-修改-Blogroot-themes-butterfly-layout-includes-post-reward-pug-整体替换为以下内容"><a href="#2-修改-Blogroot-themes-butterfly-layout-includes-post-reward-pug-整体替换为以下内容" class="headerlink" title="2. 修改[Blogroot]\themes\butterfly\layout\includes\post\reward.pug,整体替换为以下内容"></a>2. 修改<code>[Blogroot]\themes\butterfly\layout\includes\post\reward.pug</code>,整体替换为以下内容</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">link(rel=&#x27;stylesheet&#x27;</span> <span class="string">href=url_for(theme.CDN.option.coin_css)</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;)</span></span><br><span class="line"><span class="string">.post-reward</span></span><br><span class="line">  <span class="string">button.tip-button.reward-button</span></span><br><span class="line">    <span class="string">span.tip-button__text=</span> <span class="string">_p(&#x27;donate&#x27;)</span></span><br><span class="line">    <span class="string">.coin-wrapper</span></span><br><span class="line">      <span class="string">.coin</span></span><br><span class="line">        <span class="string">.coin__middle</span></span><br><span class="line">        <span class="string">.coin__back</span></span><br><span class="line">        <span class="string">.coin__front</span></span><br><span class="line">    <span class="string">.reward-main</span></span><br><span class="line">      <span class="string">ul.reward-all</span></span><br><span class="line">        <span class="string">each</span> <span class="string">item</span> <span class="string">in</span> <span class="string">theme.reward.QR_code</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">var</span> <span class="string">clickTo</span> <span class="string">=</span> <span class="string">(item.itemlist||item).link</span> <span class="string">?</span> <span class="string">(item.itemlist||item).link</span> <span class="string">:</span> <span class="string">(item.itemlist||item).img</span></span><br><span class="line">          <span class="string">li.reward-item</span></span><br><span class="line">            <span class="string">a(href=clickTo</span> <span class="string">target=&#x27;_blank&#x27;)</span></span><br><span class="line">              <span class="string">img.post-qr-code-img(src=url_for((item.itemlist||item).img)</span> <span class="string">alt=(item.itemlist||item).text)</span></span><br><span class="line">            <span class="string">.post-qr-code-desc=(item.itemlist||item).text</span></span><br><span class="line"><span class="string">if</span> <span class="string">theme.reward.coinAudio</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">var</span> <span class="string">coinAudio</span> <span class="string">=</span> <span class="string">theme.reward.coinAudio</span> <span class="string">?</span> <span class="string">url_for(theme.reward.coinAudio)</span> <span class="string">:</span> <span class="string">&#x27;https://cdn.cbd.int/akilar-candyassets@1.0.36/audio/coin.mp3&#x27;</span></span><br><span class="line">  <span class="string">audio#coinAudio(src=coinAudio)</span></span><br><span class="line"><span class="string">script(defer</span> <span class="string">src=url_for(theme.CDN.option.coin_js))</span></span><br></pre></td></tr></table></figure><h3 id="3-新建-Blogroot-source-css-coin-coin-css"><a href="#3-新建-Blogroot-source-css-coin-coin-css" class="headerlink" title="3. 新建[Blogroot]source\css\coin\coin.css"></a>3. 新建<code>[Blogroot]source\css\coin\coin.css</code></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tip-button</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.25rem</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2.6rem</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">4rem</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">50ms</span> ease-in-out;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  -webkit-tap-highlight-<span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">4deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.clicked</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">150ms</span> ease-in-out <span class="number">1</span> shake;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.clicked</span> <span class="selector-class">.tip-button__text</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">100ms</span> linear <span class="number">200ms</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.clicked</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0.5rem</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">background</span>: $button-hover-color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.clicked</span> <span class="selector-class">.coin</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: margin-bottom <span class="number">1s</span> linear <span class="number">200ms</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.shrink-landing</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">200ms</span> ease-in;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.coin-landed</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-class">.coin-landed</span> <span class="selector-class">.coin-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">35%</span> <span class="number">97%</span>, <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">0.4</span>) <span class="number">0.04rem</span>, transparent <span class="number">0.04rem</span>), <span class="built_in">radial-gradient</span>(</span><br><span class="line">      circle at <span class="number">45%</span> <span class="number">92%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">0.4</span>) <span class="number">0.04rem</span>,</span><br><span class="line">      transparent <span class="number">0.02rem</span></span><br><span class="line">    ), <span class="built_in">radial-gradient</span>(circle at <span class="number">55%</span> <span class="number">98%</span>, <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">0.4</span>) <span class="number">0.04rem</span>, transparent <span class="number">0.04rem</span>), <span class="built_in">radial-gradient</span>(circle at</span><br><span class="line">        <span class="number">65%</span> <span class="number">96%</span>, <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">50</span>, <span class="number">0.4</span>) <span class="number">0.06rem</span>, transparent <span class="number">0.06rem</span>);</span><br><span class="line">  <span class="attribute">background-position</span>: center bottom;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>) <span class="built_in">translateY</span>(-<span class="number">10px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button__text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">1.8rem</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">100ms</span> linear <span class="number">500ms</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.25rem</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">  <span class="attribute">transition</span>: height <span class="number">250ms</span> ease-in-out <span class="number">400ms</span>, width <span class="number">250ms</span> ease-in-out <span class="number">300ms</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip-button</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;ヾ(≧O≦)〃嗷~&quot;</span>; <span class="comment">/*点击后显示的内容*/</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">110%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">200ms</span> <span class="built_in">cubic-bezier</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>, <span class="number">1.43</span>);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.coin-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">18rem</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">transform</span>: none;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">200ms</span> linear <span class="number">100ms</span>, transform <span class="number">300ms</span> ease-out;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.coin</span> &#123;</span><br><span class="line">  <span class="attr">--front-y-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--back-y-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--coin-y-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--coin-x-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--coin-scale-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--coin-rotation-multiplier</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">--shine-opacity-multiplier</span>: <span class="number">0.4</span>;</span><br><span class="line">  <span class="attr">--shine-bg-multiplier</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--coin-y-multiplier) * <span class="number">1rem</span> - <span class="number">3.5rem</span>);</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">3.5rem</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">3.05rem</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--coin-x-multiplier) * <span class="number">34%</span> + <span class="number">16%</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">50%</span>) <span class="built_in">scale</span>(<span class="built_in">calc</span>(<span class="number">0.4</span> + <span class="built_in">var</span>(--coin-scale-multiplier))) <span class="built_in">rotate</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(</span><br><span class="line">            --coin-rotation-multiplier</span><br><span class="line">          ) * -<span class="number">1deg</span>));</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">100ms</span> linear <span class="number">200ms</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">3.5rem</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__front</span>,</span><br><span class="line"><span class="selector-class">.coin__middle</span>,</span><br><span class="line"><span class="selector-class">.coin__back</span>,</span><br><span class="line"><span class="selector-class">.coin</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.coin__front</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.coin__back</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__front</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">50%</span> <span class="number">50%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">115</span>, <span class="number">124</span>, <span class="number">153</span>, <span class="number">0.4</span>) <span class="number">54%</span>, <span class="number">#c2cadf</span> <span class="number">54%</span>),</span><br><span class="line">    <span class="built_in">linear-gradient</span>(<span class="number">210deg</span>, <span class="number">#8590b3</span> <span class="number">32%</span>, transparent <span class="number">32%</span>), <span class="built_in">linear-gradient</span>(<span class="number">150deg</span>, <span class="number">#8590b3</span> <span class="number">32%</span>, transparent <span class="number">32%</span>),</span><br><span class="line">    <span class="built_in">linear-gradient</span>(to right, <span class="number">#8590b3</span> <span class="number">22%</span>, transparent <span class="number">22%</span>, transparent <span class="number">78%</span>, <span class="number">#8590b3</span> <span class="number">78%</span>), <span class="built_in">linear-gradient</span>(</span><br><span class="line">      to bottom,</span><br><span class="line">      <span class="number">#fcfaf9</span> <span class="number">44%</span>,</span><br><span class="line">      transparent <span class="number">44%</span>,</span><br><span class="line">      transparent <span class="number">65%</span>,</span><br><span class="line">      <span class="number">#fcfaf9</span> <span class="number">65%</span>,</span><br><span class="line">      <span class="number">#fcfaf9</span> <span class="number">71%</span>,</span><br><span class="line">      <span class="number">#8590b3</span> <span class="number">71%</span></span><br><span class="line">    ), <span class="built_in">linear-gradient</span>(to right, transparent <span class="number">28%</span>, <span class="number">#fcfaf9</span> <span class="number">28%</span>, <span class="number">#fcfaf9</span> <span class="number">34%</span>, <span class="number">#8590b3</span> <span class="number">34%</span>, <span class="number">#8590b3</span> <span class="number">40%</span>, <span class="number">#fcfaf9</span> <span class="number">40%</span>, <span class="number">#fcfaf9</span></span><br><span class="line">        <span class="number">47%</span>, <span class="number">#8590b3</span> <span class="number">47%</span>, <span class="number">#8590b3</span> <span class="number">53%</span>, <span class="number">#fcfaf9</span> <span class="number">53%</span>, <span class="number">#fcfaf9</span> <span class="number">60%</span>, <span class="number">#8590b3</span> <span class="number">60%</span>, <span class="number">#8590b3</span> <span class="number">66%</span>, <span class="number">#fcfaf9</span> <span class="number">66%</span>, <span class="number">#fcfaf9</span> <span class="number">72%</span>, transparent</span><br><span class="line">        <span class="number">72%</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8590b3</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(--front-y-multiplier) * <span class="number">0.3181818182rem</span> / <span class="number">2</span>)) <span class="built_in">scaleY</span>(<span class="built_in">var</span>(--front-scale-multiplier));</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__front</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">var</span>(--front-y-multiplier);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__middle</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#737c99</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(--middle-y-multiplier) * <span class="number">0.3181818182rem</span> / <span class="number">2</span>)) <span class="built_in">scaleY</span>(<span class="built_in">var</span>(--middle-scale-multiplier));</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__back</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">50%</span> <span class="number">50%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">115</span>, <span class="number">124</span>, <span class="number">153</span>, <span class="number">0.4</span>) <span class="number">54%</span>, <span class="number">#c2cadf</span> <span class="number">54%</span>),</span><br><span class="line">    <span class="built_in">radial-gradient</span>(circle at <span class="number">50%</span> <span class="number">40%</span>, <span class="number">#fcfaf9</span> <span class="number">23%</span>, transparent <span class="number">23%</span>), <span class="built_in">radial-gradient</span>(circle at <span class="number">50%</span> <span class="number">100%</span>, <span class="number">#fcfaf9</span> <span class="number">35%</span>, transparent</span><br><span class="line">        <span class="number">35%</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#8590b3</span>;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(--back-y-multiplier) * <span class="number">0.3181818182rem</span> / <span class="number">2</span>)) <span class="built_in">scaleY</span>(<span class="built_in">var</span>(--back-scale-multiplier));</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin__back</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">var</span>(--back-y-multiplier);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">25%</span> <span class="number">65%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>) <span class="number">90%</span>), <span class="built_in">linear-gradient</span>(<span class="number">55deg</span>, transparent</span><br><span class="line">        <span class="built_in">calc</span>(<span class="built_in">var</span>(--shine-bg-multiplier) + <span class="number">0%</span>), <span class="number">#e9f4ff</span> <span class="built_in">calc</span>(<span class="built_in">var</span>(--shine-bg-multiplier) + <span class="number">0%</span>), transparent <span class="built_in">calc</span>(<span class="built_in">var</span>(</span><br><span class="line">              --shine-bg-multiplier</span><br><span class="line">            ) + <span class="number">50%</span>));</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">var</span>(--shine-opacity-multiplier);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(--middle-y-multiplier) * <span class="number">0.3181818182rem</span> / -<span class="number">2</span>)) <span class="built_in">scaleY</span>(<span class="built_in">var</span>(--middle-scale-multiplier))</span><br><span class="line">    <span class="built_in">rotate</span>(<span class="built_in">calc</span>(<span class="built_in">var</span>(--coin-rotation-multiplier) * <span class="number">1deg</span>));</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.coin</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#737c99</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0.3181818182rem</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> shake &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">4deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">66%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">4deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-新建-Blogroot-source-js-coin-coin-js"><a href="#4-新建-Blogroot-source-js-coin-coin-js" class="headerlink" title="4.  新建[Blogroot]\source\js\coin\coin.js"></a>4.  新建<code>[Blogroot]\source\js\coin\coin.js</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tipButtons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.tip-button&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">coinAudio</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> coinAudio = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;coinAudio&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (coinAudio) &#123;</span><br><span class="line">    coinAudio.<span class="title function_">play</span>(); <span class="comment">//有音频时播放</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Loop through all buttons (allows for multiple buttons on page)</span></span><br><span class="line">tipButtons.<span class="title function_">forEach</span>(<span class="function"><span class="params">button</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> coin = button.<span class="title function_">querySelector</span>(<span class="string">&quot;.coin&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// The larger the number, the slower the animation</span></span><br><span class="line">  coin.<span class="property">maxMoveLoopCount</span> = <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">  button.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/Android|webOS|BlackBerry/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//媒体选择</span></span><br><span class="line">    <span class="keyword">if</span> (button.<span class="property">clicked</span>) <span class="keyword">return</span>;</span><br><span class="line">    button.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;clicked&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Wait to start flipping th coin because of the button tilt animation</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Randomize the flipping speeds just for fun</span></span><br><span class="line">      coin.<span class="property">sideRotationCount</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>) * <span class="number">90</span>;</span><br><span class="line">      coin.<span class="property">maxFlipAngle</span> = (<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">4</span>) + <span class="number">3</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">      button.<span class="property">clicked</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="title function_">flipCoin</span>();</span><br><span class="line">      <span class="title function_">coinAudio</span>();</span><br><span class="line">    &#125;, <span class="number">50</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">flipCoin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    coin.<span class="property">moveLoopCount</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="title function_">flipCoinLoop</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">resetCoin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-x-multiplier&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-scale-multiplier&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-rotation-multiplier&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--shine-opacity-multiplier&quot;</span>, <span class="number">0.4</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--shine-bg-multiplier&quot;</span>, <span class="string">&quot;50%&quot;</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;opacity&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// Delay to give the reset animation some time before you can click again</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      button.<span class="property">clicked</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;, <span class="number">300</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">flipCoinLoop</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    coin.<span class="property">moveLoopCount</span>++;</span><br><span class="line">    <span class="keyword">var</span> percentageCompleted = coin.<span class="property">moveLoopCount</span> / coin.<span class="property">maxMoveLoopCount</span>;</span><br><span class="line">    coin.<span class="property">angle</span> = -coin.<span class="property">maxFlipAngle</span> * <span class="title class_">Math</span>.<span class="title function_">pow</span>(percentageCompleted - <span class="number">1</span>, <span class="number">2</span>) + coin.<span class="property">maxFlipAngle</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Calculate the scale and position of the coin moving through the air</span></span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-y-multiplier&quot;</span>, -<span class="number">11</span> * <span class="title class_">Math</span>.<span class="title function_">pow</span>(percentageCompleted * <span class="number">2</span> - <span class="number">1</span>, <span class="number">4</span>) + <span class="number">11</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-x-multiplier&quot;</span>, percentageCompleted);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-scale-multiplier&quot;</span>, percentageCompleted * <span class="number">0.6</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--coin-rotation-multiplier&quot;</span>, percentageCompleted * coin.<span class="property">sideRotationCount</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Calculate the scale and position values for the different coin faces</span></span><br><span class="line">    <span class="comment">// The math uses sin/cos wave functions to similate the circular motion of 3D spin</span></span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--front-scale-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="title class_">Math</span>.<span class="title function_">cos</span>(coin.<span class="property">angle</span>), <span class="number">0</span>));</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--front-y-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">sin</span>(coin.<span class="property">angle</span>));</span><br><span class="line"></span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--middle-scale-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="title class_">Math</span>.<span class="title function_">cos</span>(coin.<span class="property">angle</span>), <span class="number">0</span>));</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--middle-y-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">cos</span>((coin.<span class="property">angle</span> + <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>) % <span class="title class_">Math</span>.<span class="property">PI</span>));</span><br><span class="line"></span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--back-scale-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="title class_">Math</span>.<span class="title function_">cos</span>(coin.<span class="property">angle</span> - <span class="title class_">Math</span>.<span class="property">PI</span>), <span class="number">0</span>));</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--back-y-multiplier&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">sin</span>(coin.<span class="property">angle</span> - <span class="title class_">Math</span>.<span class="property">PI</span>));</span><br><span class="line"></span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--shine-opacity-multiplier&quot;</span>, <span class="number">4</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>((coin.<span class="property">angle</span> + <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>) % <span class="title class_">Math</span>.<span class="property">PI</span>) - <span class="number">3.2</span>);</span><br><span class="line">    coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--shine-bg-multiplier&quot;</span>, -<span class="number">40</span> * (<span class="title class_">Math</span>.<span class="title function_">cos</span>((coin.<span class="property">angle</span> + <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>) % <span class="title class_">Math</span>.<span class="property">PI</span>) - <span class="number">0.5</span>) + <span class="string">&quot;%&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Repeat animation loop</span></span><br><span class="line">    <span class="keyword">if</span> (coin.<span class="property">moveLoopCount</span> &lt; coin.<span class="property">maxMoveLoopCount</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (coin.<span class="property">moveLoopCount</span> === coin.<span class="property">maxMoveLoopCount</span> - <span class="number">6</span>) button.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;shrink-landing&quot;</span>);</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">requestAnimationFrame</span>(flipCoinLoop);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      button.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;coin-landed&quot;</span>);</span><br><span class="line">      coin.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;opacity&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        button.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;clicked&quot;</span>, <span class="string">&quot;shrink-landing&quot;</span>, <span class="string">&quot;coin-landed&quot;</span>);</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">resetCoin</span>();</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line">      &#125;, <span class="number">1500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="5-修改-config-butterfly-yml-添加音频文件配置项，添加-CDN-配置项："><a href="#5-修改-config-butterfly-yml-添加音频文件配置项，添加-CDN-配置项：" class="headerlink" title="5. 修改_config.butterfly.yml,添加音频文件配置项，添加 CDN 配置项："></a>5. 修改<code>_config.butterfly.yml</code>,添加音频文件配置项，添加 CDN 配置项：</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Sponsor/reward</span></span><br><span class="line">  <span class="attr">reward:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">+</span>   <span class="attr">coinAudio:</span> <span class="string">https://cdn.cbd.int/akilar-candyassets@1.0.36/audio/aowu.m4a</span></span><br><span class="line">    <span class="attr">QR_code:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/qrcode-weichat.png</span></span><br><span class="line">        <span class="attr">link:</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">wechat</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/qrcode-alipay.png</span></span><br><span class="line">        <span class="attr">link:</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">alipay</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="comment"># main</span></span><br><span class="line">    <span class="attr">main_css:</span> <span class="string">/css/index.css</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://cdn.cbd.int/jquery@latest/dist/jquery.min.js</span></span><br><span class="line">    <span class="attr">main:</span> <span class="string">/js/main.js</span></span><br><span class="line">    <span class="string">utils:/js/utils.js</span></span><br><span class="line">    <span class="attr">option:</span></span><br><span class="line"><span class="string">+</span>     <span class="comment"># 打赏按钮投币效果</span></span><br><span class="line"><span class="string">+</span>     <span class="attr">coin_js:</span> <span class="string">/js/coin/coin.js</span></span><br><span class="line"><span class="string">+</span>     <span class="attr">coin_css:</span> <span class="string">/css/coin/coin.css</span></span><br></pre></td></tr></table></figure><h3 id="6-修改-Blogroot-themes-butterfly-source-css-layout-reward-styl，整体替换为以下内容"><a href="#6-修改-Blogroot-themes-butterfly-source-css-layout-reward-styl，整体替换为以下内容" class="headerlink" title="6. 修改[Blogroot]\themes\butterfly\source\css\_layout\reward.styl，整体替换为以下内容"></a>6. 修改<code>[Blogroot]\themes\butterfly\source\css\_layout\reward.styl</code>，整体替换为以下内容</h3><p><strong>注意：如果打赏图片有两张的话，请将下列代码中的.reward-main模块中的width改为200%</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-reward</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  margin-top: <span class="number">4rem</span></span><br><span class="line">  width: <span class="number">100%</span></span><br><span class="line">  text-align: center</span><br><span class="line"></span><br><span class="line">  .reward-button</span><br><span class="line">    display: inline-block</span><br><span class="line">    padding: .<span class="number">2rem</span> <span class="number">1.2rem</span></span><br><span class="line">    background: <span class="built_in">var</span>(--btn-bg)</span><br><span class="line">    color: <span class="built_in">var</span>(--btn-color)</span><br><span class="line">    cursor: pointer</span><br><span class="line">    transition: all .<span class="number">4s</span></span><br><span class="line"></span><br><span class="line">    &amp;:hover</span><br><span class="line">      box-shadow: inset <span class="number">15em</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--btn-hover-color)</span><br><span class="line"></span><br><span class="line">      .reward-main</span><br><span class="line">        display: block</span><br><span class="line"></span><br><span class="line">    .reward-main</span><br><span class="line">      position: absolute</span><br><span class="line">      bottom: <span class="number">40px</span></span><br><span class="line">      left: -<span class="number">25%</span></span><br><span class="line">      z-index: <span class="number">100</span></span><br><span class="line">      display: none</span><br><span class="line">      padding: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span></span><br><span class="line">      width: <span class="number">150%</span></span><br><span class="line"></span><br><span class="line">      .reward-all</span><br><span class="line">        display: inline-block</span><br><span class="line">        margin: <span class="number">0</span></span><br><span class="line">        padding: <span class="number">1rem</span> .<span class="number">5rem</span></span><br><span class="line">        border-radius: <span class="number">4px</span></span><br><span class="line">        background: <span class="built_in">var</span>(--reward-pop)</span><br><span class="line"></span><br><span class="line">        &amp;:before</span><br><span class="line">          position: absolute</span><br><span class="line">          bottom: -<span class="number">10px</span></span><br><span class="line">          left: <span class="number">0</span></span><br><span class="line">          width: <span class="number">100%</span></span><br><span class="line">          height: <span class="number">20px</span></span><br><span class="line">          content: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        &amp;:after</span><br><span class="line">          position: absolute</span><br><span class="line">          right: <span class="number">0</span></span><br><span class="line">          bottom: <span class="number">2px</span></span><br><span class="line">          left: <span class="number">0</span></span><br><span class="line">          margin: <span class="number">0</span> auto</span><br><span class="line">          width: <span class="number">0</span></span><br><span class="line">          height: <span class="number">0</span></span><br><span class="line">          border-top: <span class="number">13px</span> solid <span class="built_in">var</span>(--reward-pop)</span><br><span class="line">          border-right: <span class="number">13px</span> solid transparent</span><br><span class="line">          border-left: <span class="number">13px</span> solid transparent</span><br><span class="line">          content: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        .reward-item</span><br><span class="line">          display: inline-block</span><br><span class="line">          padding: <span class="number">0</span> <span class="number">8px</span></span><br><span class="line">          list-style-type: none</span><br><span class="line">          vertical-align: top</span><br><span class="line"></span><br><span class="line">          img</span><br><span class="line">            width: <span class="number">130px</span></span><br><span class="line">            height: <span class="number">130px</span></span><br><span class="line"></span><br><span class="line">          .post-qr-code-desc</span><br><span class="line">            padding-top: .<span class="number">4rem</span></span><br><span class="line">            width: <span class="number">130px</span></span><br><span class="line">            color: $reward-pop-up-color</span><br></pre></td></tr></table></figure><h3 id="7-hexo三连"><a href="#7-hexo三连" class="headerlink" title="7. hexo三连"></a>7. hexo三连</h3>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寝室谁最高</title>
      <link href="/post/257e828a.html"/>
      <url>/post/257e828a.html</url>
      
        <content type="html"><![CDATA[<p>【问题描述】</p><p>学校选拔篮球队员，每间宿舍最多有 4 个人。现给出宿舍列表，请找出每个宿舍最高的同学。定义一个学生类 Student，有身高 height，体重 weight 等。</p><p>【输入格式】</p><p>首先输入一个整型数 <em>n</em> （1≤<em>n</em>≤106），表示有 <em>n</em> 位同学。</p><p>紧跟着 <em>n</em> 行输入，每一行格式为：宿舍号 name height weight。<br>宿舍号的区间为 [0, 999999]， name 由字母组成，长度小于 16，height，weight 为正整数。</p><p>【输出格式】</p><p>按宿舍号从小到大排序，输出每间宿舍身高最高的同学信息。题目保证每间宿舍只有一位身高最高的同学。</p><p>注意宿舍号不足 6 位的，要按 6 位补齐前导 0。</p><p>【输入样例】</p><p>7</p><p>000000 Tom 175 120</p><p>000001 Jack 180 130</p><p>000001 Hale 160 140</p><p>000000 Marry 160 120</p><p>000000 Jerry 165 110</p><p>000003 ETAF 183 145</p><p>000001 Mickey 170 115</p><p>【输出样例】</p><p>000000 Tom 175 120</p><p>000001 Jack 180 130</p><p>000003 ETAF 183 145</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string room;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line"><span class="type">int</span> weight;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">6</span>) &lt;&lt; room &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; height &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; weight &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(Student stu1, Student stu2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (stu1.room != stu2.room)</span><br><span class="line"><span class="keyword">return</span> stu1.room &lt; stu2.room;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> stu1.height &gt; stu2.height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(vector&lt;Student&gt; stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : stu)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i.room != temp)</span><br><span class="line">&#123;</span><br><span class="line">temp = i.room;</span><br><span class="line">i.<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">Student temp;</span><br><span class="line">vector&lt;Student&gt; student;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; temp.room &gt;&gt; temp.name &gt;&gt; temp.height &gt;&gt; temp.weight;</span><br><span class="line">student.<span class="built_in">push_back</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 优先按照宿舍号排序，宿舍号相同按照身高排序</span></span><br><span class="line"><span class="built_in">sort</span>(student.<span class="built_in">begin</span>(), student.<span class="built_in">end</span>(), cmp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挑选出寝室中最高的同学进行打印</span></span><br><span class="line"><span class="built_in">print</span>(student);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相邻数对</title>
      <link href="/post/75b498b8.html"/>
      <url>/post/75b498b8.html</url>
      
        <content type="html"><![CDATA[<h3 id="【问题描述】"><a href="#【问题描述】" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><p> 给定n个不同的整数，问这些数中有多少对整数，它们的值正好相差1。 </p><h3 id="【输入形式】"><a href="#【输入形式】" class="headerlink" title="【输入形式】"></a>【输入形式】</h3><p>  输入的第一行包含一个整数n，表示给定整数的个数。<br>  第二行包含所给定的n个整数。</p><h3 id="【输出形式】"><a href="#【输出形式】" class="headerlink" title="【输出形式】"></a>【输出形式】</h3><p>  输出一个整数，表示值正好相差1的数对的个数。</p><h3 id="【样例输入】"><a href="#【样例输入】" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><p>　6<br>　10 2 6 3 7 8 </p><h3 id="【样例输出】"><a href="#【样例输出】" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><p>　3 </p><h3 id="【样例说明】"><a href="#【样例说明】" class="headerlink" title="【样例说明】"></a>【样例说明】</h3><p>　值正好相差1的数对包括(2, 3), (6, 7), (7, 8)。</p><h3 id="【评分标准】"><a href="#【评分标准】" class="headerlink" title="【评分标准】"></a>【评分标准】</h3><p>　　<strong>评测用例规模与约定</strong><br>　　1&lt;&#x3D;n&lt;&#x3D;1000，给定的整数为不超过10000的非负整数</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pair</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> Pair&amp; rhs)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> (a == rhs.a) &amp;&amp; (b == rhs.b);</span><br><span class="line">&#125;<span class="comment">// 必须有，虽然不知道我哪里用到了两个Pair类对象进行相等比较，但是缺少对==的重载就会报错</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; num;</span><br><span class="line"><span class="type">int</span> n, temp;</span><br><span class="line"><span class="type">int</span> small, big;<span class="comment">// 存放比当前数字小1和大1的数字</span></span><br><span class="line">vector&lt;Pair&gt; res;<span class="comment">// 存放相邻整数对</span></span><br><span class="line">Pair temp_;    <span class="comment">// 临时变量</span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line">num.<span class="built_in">push_back</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : num)</span><br><span class="line">&#123;</span><br><span class="line">small = i - <span class="number">1</span>;</span><br><span class="line">big = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">count</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), small))<span class="comment">// 存在比i小1的数字</span></span><br><span class="line">&#123;</span><br><span class="line">temp_.a = small;</span><br><span class="line">temp_.b = i;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">count</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>(), temp_))<span class="comment">// 并且res中不存在该相邻整数对</span></span><br><span class="line">res.<span class="built_in">push_back</span>(temp_);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">count</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), big))<span class="comment">// 存在比i大1的数字</span></span><br><span class="line">&#123;</span><br><span class="line">temp_.a = i;</span><br><span class="line">temp_.b = big;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">count</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>(), temp_))<span class="comment">// 并且res中不存在该相邻整数对</span></span><br><span class="line">res.<span class="built_in">push_back</span>(temp_);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; res.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>==:不定义该运算符可接收的类型的转换</title>
      <link href="/post/f18a017c.html"/>
      <url>/post/f18a017c.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ERROR：C2676 二进制“&#x3D;&#x3D;”:“Pair”不定义该运算符或到预定义运算符可接收的类型的转换</p><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>这个报错大意就是说，编译器不知道Pair类的对象之间该如何判断是否相等</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Pair</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在类里面增加对&quot;==&quot;的重载函数即可</span></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> Pair &amp;rhs)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> (a == rhs.a) &amp;&amp; (b == rhs.b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 常见报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++常见报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vector判断与查找特定元素</title>
      <link href="/post/d8a4edf7.html"/>
      <url>/post/d8a4edf7.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://blog.csdn.net/guotianqing/article/details/105832070">c++判断vector中是否存在特定元素的方法</a></p><p>vector并未提供确定某一元素是否存在或查找特定元素，但是STL算法提供了以下函数方便我们计算</p><h2 id="函数与示例"><a href="#函数与示例" class="headerlink" title="函数与示例"></a>函数与示例</h2><p><strong>注：示例均包含下列头文件并使用std命名空间</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure><h3 id="1-any-of"><a href="#1-any-of" class="headerlink" title="1. any_of"></a>1. any_of</h3><p><strong>应用</strong>：判断容器中是否存在满足期望的特定元素</p><p><strong>参数</strong>：any_of包含三个参数，第一第二分别是容器的起始位置和结束位置，第三个参数为条件表达式</p><p><strong>返回值</strong>：bool，1-&gt;存在满足期望的元素；0-&gt;不存在满足期望的元素</p><p><strong>注意</strong>：any_of的第三个参数无法传入单个具体值，只能编写期望的条件表达式</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; num = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">any_of</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), [] (<span class="type">int</span> i) &#123;<span class="keyword">return</span> i &gt; <span class="number">1</span>;&#125;))<span class="comment">// 判断容器中是否存在大于1的元素</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;number exists&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="2-binary-search"><a href="#2-binary-search" class="headerlink" title="2. binary_search"></a>2. binary_search</h3><p><strong>应用</strong>：对于<strong>从小到大</strong>排列的容器判断指定元素是否存在</p><p><strong>参数</strong>：binary_search包含三个参数，第一第二分别是容器的起始位置和结束位置，第三个参数为指定元素</p><p><strong>返回值</strong>：bool，1-&gt;指定元素存在；0-&gt;指定元素不存在</p><p><strong>注意</strong>：使用该函数前必须保证容器中的元素<strong>从小到大</strong>进行排列</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; num = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>());<span class="comment">// 从小到大排列num</span></span><br><span class="line">i = <span class="built_in">binary_search</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">4</span>);<span class="comment">// 判断容器中是否存在4</span></span><br><span class="line">cout &lt;&lt; i;<span class="comment">// 1-&gt;4存在；0-&gt;4不存在</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());<span class="comment">// 从大到小排列num</span></span><br><span class="line">i = <span class="built_in">binary_search</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">4</span>);<span class="comment">// 判断容器中是否存在4</span></span><br><span class="line">cout &lt;&lt; i;<span class="comment">// 1-&gt;4存在；0-&gt;4不存在</span></span><br></pre></td></tr></table></figure><p>注：对于sort函数不熟悉可以查看<a href="https://www.dqywy.top/post/3216d44c.html">c++ sort函数</a></p><h3 id="3-std-count"><a href="#3-std-count" class="headerlink" title="3. std::count"></a>3. std::count</h3><p><strong>应用</strong>：计算指定元素的个数</p><p><strong>参数</strong>：std::count包含三个参数，第一第二分别是容器的起始位置和结束位置，第三个参数为指定元素</p><p><strong>返回值</strong>：指定元素的个数，不存在则返回0</p><p><strong>注意</strong>：要么使用std命名空间，要么使用<code>std::count</code></p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; num = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>&#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;4的个数为: &quot;</span> &lt;&lt; <span class="built_in">count</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">4</span>) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">count</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">8</span>))</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;number not exists! &quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="4-std-find"><a href="#4-std-find" class="headerlink" title="4. std::find"></a>4. std::find</h3><p><strong>应用</strong>：判断指定元素是否存在</p><p><strong>参数</strong>：std::find包含三个参数，第一第二分别是容器的起始位置和结束位置，第三个参数为指定元素</p><p><strong>返回值</strong>：指定元素的迭代器，如果不存在返回容器最后一个元素的<strong>下一个位置</strong>的迭代器(即num.end())</p><p><strong>注意</strong>：如果查找的元素不存在返回的是容器名.end()，如果查找元素不存在的话不可以打印*迭代器，否则会导致程序崩溃</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; num = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator i, j;</span><br><span class="line">i = <span class="built_in">find</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span> (i == num.<span class="built_in">end</span>())</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;number not exists! &quot;</span> &lt;&lt; endl;</span><br><span class="line">j = <span class="built_in">find</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h3 id="5-std-find-if"><a href="#5-std-find-if" class="headerlink" title="5. std::find_if"></a>5. std::find_if</h3><p><strong>应用</strong>：获取满足条件的元素集合的第一个元素的迭代器</p><p><strong>参数</strong>：std::find包含三个参数，第一第二分别是容器的起始位置和结束位置，第三个参数为条件表达式</p><p><strong>返回值</strong>：满足条件的元素集合的第一个元素的迭代器，如果不存在满足条件的元素则返回容器最后一个元素的<strong>下一个位置</strong>的迭代器(即num.end())</p><p><strong>注意</strong>：如果查找的元素不存在返回的是容器名.end()，如果查找元素不存在的话不可以打印*迭代器，否则会导致程序崩溃</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; num = &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span> &#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator i;</span><br><span class="line">i = <span class="built_in">find_if</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>(), [](<span class="type">int</span> j) &#123;<span class="keyword">return</span> j &gt; <span class="number">3</span> <span class="keyword">and</span> j &lt; <span class="number">5</span>;&#125;);</span><br><span class="line">cout &lt;&lt; *i;</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>对于从小到大排好序的vector，使用binary_search</li><li>仅判断是否存在某元素，使用find</li><li>需要某元素总个数时，使用count</li><li>支持复杂条件的查找时，使用any_of判断元素是否存在，使用find_if获取满足条件的元素集合的第一个元素的迭代器</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> c++实用函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见Web漏洞总结</title>
      <link href="/post/64098964.html"/>
      <url>/post/64098964.html</url>
      
        <content type="html"><![CDATA[<h1 id="常见的Web应用的漏洞总结（原理、危害、防御）"><a href="#常见的Web应用的漏洞总结（原理、危害、防御）" class="headerlink" title="常见的Web应用的漏洞总结（原理、危害、防御）"></a>常见的Web应用的漏洞总结（原理、危害、防御）</h1><p>转载自：<a href="https://blog.csdn.net/strive_____/article/details/100716849">常见的Web应用的漏洞总结（原理、危害、防御）</a></p><p>一、 <a href="https://so.csdn.net/so/search?q=SQL%E6%B3%A8%E5%85%A5&spm=1001.2101.3001.7020">SQL注入</a>(SQL Inject)[OWASP TOP1 2017]：<br>1.原理：<br>SQL注入就是把SQL命令插入到Web表单然后提交到所在页面请求（查询字符串），从而达到欺骗服务器执行恶意的SQL命令。<br>它是利用现在已有的应用程序，将<a href="https://so.csdn.net/so/search?q=SQL%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020">SQL语句</a>插入到数据库中执行，执行一些并非按照设计者意图的SQL语句。<br>2.原因：<br>根据相关技术原理，SQL注入可以分为平台层注入和代码层注入。前者由不安全的数据库配置或数据库平台的漏洞所致；后者主要是由于程序员对输入未进行细致地过滤，从而执行了非法的数据查询。基于此，SQL注入的产生原因通常表现在以下几方面：①不当的类型处理；②不安全的数据库配置；③不合理的查询集处理；④不当的错误处理；⑤转义字符处理不合适；⑥多个提交处理不当。<br>3.危害：<br>数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。<br>网页篡改：通过操作数据库对特定网页进行篡改。<br>网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。<br>数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。<br>服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。<br>破坏硬盘数据，瘫痪全系统。<br>4.防御：<br>(1)严格的数据类型<br>(2)字符转义<br>(3)使用预编译语句<br>(4)存储过程</p><p>二、 XSS(Cross-site Script)[OWASP TOP7 2017]<br>原理：<br>攻击者往Web页面里插入恶意html标签或者javascript代码。<br>分别是反射型XSS、持久型XSS和DOM XSS<br>危害：<br>（1）网络钓鱼，盗取各类用户的账号<br>（2）窃取用户Cookie，获取用户隐私，或者利用用户身份进一步执行操作<br>（3）劫持用户（浏览器）会话，从而执行任意操作，例如进行非法转账、强制发表日志等<br>（4）强制弹出广告页面，刷流量等<br>（5）进行恶意操作，例如任意篡改页面信息，删除文章等，传播跨站脚本蠕虫，网页挂等<br>（6）进行基于大量的客户端攻击，如DDOS攻击<br>（7）结合其它漏洞，如CSRF漏洞。<br>3.防御：<br>（1）代码里对用户输入的地方和变量都需要仔细检查长度和对”&lt;”,”&gt;”,”;”,”’”等字符做过滤；其次任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。这一个层面做好，至少可以堵住超过一半的XSS 攻击。<br>（2）避免直接在cookie 中泄露用户隐私，例如email、密码等等。<br>（3）通过使cookie 和系统ip 绑定来降低cookie 泄露后的危险。这样攻击者得到的cookie 没有实际价值，不可能拿来重放。<br>（4）尽量采用POST 而非GET 提交表单<br>三、 上传漏洞<br>原理<br>文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器，服务器未经任何检验或过滤，从而造成文件的执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。<br>危害<br>1)上传文件是Web脚本语言，服务器的Web容器解释并执行了用户上传的脚本，导致代码执行。<br>2)上传文件是Flash的策略文件crossdomain.xml，黑客用以控制Flash在该域下的行为（其他通过类似方式控制策略文件的情况类似);<br>3)上传文件是病毒、木马文件，黑客用以诱骗用户或者管理员下载执行。<br>4)上传文件是钓鱼图片或为包含了脚本的图片，在某些版本的浏览器中会被作为脚本执行，被用于钓鱼和欺诈。<br>防御：<br>（1）文件扩展名服务端白名单校验。<br>（2）文件内容服务端校验。<br>（3）上传文件重命名。<br>（4）隐藏上传文件路径。<br>（5）文件上传的目录设置为不可执行<br>（6）单独设置文件服务器的域名<br>以上几点，可以防御绝大多数上传漏洞，但是需要跟服务器容器结合起来。如果解析漏洞依然存在，那么没有绝对的安全。<br>四、 文件解析漏洞<br>1.IIS 6.0解析利用方法有两种<br>（1）目录解析：&#x2F;xx.asp&#x2F;xx.jpg<br>（2）文件解析：wooyun.asp;.jpg<br>第一种，在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。<br>第二种，在IIS6.0下，分号后面的不被解析，也就是说wooyun.asp;.jpg会被服务器看成是wooyun.asp<br>还有IIS6.0 默认的可执行文件除了asp还包含这三种.asa、.cer、.cdx<br>2.Apache解析漏洞后缀名解析漏洞<br>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断直到识别。<br>3.PHP CGI解析漏洞<br>在默认Fast-CGI开启状况下,上传一个名字为wooyun.jpg，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?PHP fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>1<br>的文件，然后访问wooyun.jpg&#x2F;x.php,（x.php不存在）在这个目录下就会生成一句话木马 shell.php。<br>4.%00截断漏洞<br>当程序在输出含有chr(0)变量时，chr(0)后面的数据会被停止，换句话说，就是误把它当成结束符，后面的数据直接忽略，这就导致漏洞产生</p><p>五、 CSRF（Cross-Site Request Forgery）<br>1.原理：<br>CSRF是一种夹持用户在已经登陆的web应用程序上执行非本意的操作的攻击方式。相比于XSS，CSRF是利用了系统对页面浏览器的信任，XSS则利用了系统对用户的信任。</p><p>由上图分析我们可以知道构成CSRF攻击是有条件的：<br>　　1、客户端必须一个网站并生成cookie凭证存储在浏览器中<br>2、该cookie没有清除，客户端又tab一个页面进行访问别的网站<br>2.危害<br>攻击者利用会话劫持达到自己的目的，比如转账、积分等<br>3.防御<br>（1） GET、POST的正确使用<br>（2） 利用验证码（在一定的情况下使用，但是为了防止客户产生不好印象，尽量不用）<br>（3） Referer Check(HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。但服务器并非任何时候都能取到referer、保护客户隐私，不作为预防主要手段)<br>（4） Anti CSRF Token：<br>为每一个表单生成一个随机数秘钥，并在服务器端建立一个拦截器来验证这个token，如果请求中没有token或者token内容不正确，则认为可能是CSRF攻击而拒绝该请求。</p><p>六、 DDos攻击 分布式拒绝服务(Distributed Denial of service Attack)<br>1.原理<br>攻击者想办法让目标服务器的磁盘空间、内存、进程、网络带宽等资源被占满，从而导致正常用户无法访问。<br>攻击者进行拒绝服务攻击，实际上让服务器实现两种效果：一是迫使服务器的缓冲区满，无法接收新的请求;二是使用IP欺骗，迫使服务器把合法用户的连接复位，影响合法用户的连接。<br>攻击者是使用傀儡机(俗称“肉鸡”，受病毒木马操控的计算机或服务器)作为攻击平台，通过大量伪装合法的请求占用大量网络资源，以达到使指定目标的网络或服务瘫痪中断。<br>2.危害：<br>服务器瘫痪、用户无法正常访问。<br>3.类型<br>（1）SYN Flood攻击：这种攻击方法是经典最有效的DDoS方法，主要是通过向受害主机发送大量伪造源 IP 和源端口的 SYN 或 ACK 包，导致主机的缓存资源被耗尽或忙于发送回应包而造成拒绝服务，可通杀各种系统的网络服务。这种攻击由于源头都是伪造的，所以追踪起来比较困难。但是，该攻击实施起来有一定难度，需要大量高带宽的僵尸主机。<br>（2）TCP 全连接攻击：这种攻击是为了绕过常规防火墙的检查而设计的。一般情况下，常规防火墙大多对于正常的 TCP 连接是放过的，但是很多网络服务程序能接受的 TCP 连接数是有限的。TCP全连接攻击就是通过许多僵尸主机不断地与受害服务器建立大量的 TCP 连接，直到服务器的内存等资源被耗尽而被拖跨， 从而造成拒绝服务。种攻击的特点是可绕过一般防火墙的防护而达到攻击;缺点是需要找很多僵尸主机，且僵尸主机的IP 是暴露，易被追踪。<br>（3）刷 Script 脚本攻击：这种攻击是跟服务器建立正常的TCP连接， 并不断的向脚本程序提交查询、 列表等大量耗费数据库资源的调用。一般来说， 提交一个指令对客户端的耗费和带宽的占用是几乎可以忽略的，而服务器为处理此请求却可能要从上万条记录中去查出某个记录，这种处理过程对资源的耗费是非常大。攻击者只需通过代理向目标服务器大量递交查询指令，只需数分钟就会把服务器资源消耗掉而导致拒绝服务。这种攻击的特点是可以完全绕过普通的防火墙防护， 轻松找一些代理就可实施攻击;缺点是对付只有静态页面的网站效果会大打折扣，并且会暴露攻击者的IP地址。<br>4.防御：<br>（1）采用高性能的网络设备<br>（2）尽量避免NAT的使用（NAT需要对地址来回转换，转换过程中需要对网络包的校验和进行计算，因此浪费了很多CPU的时间）<br>（3）充足的网络带宽保证<br>（4）升级主机服务器硬件<br>（5）把网站做成静态页面<br>（6）增强操作系统的TCP&#x2F;IP栈<br>（7）安装专业抗DDOS防火墙<br>附：IP Spoof: 即IP地址欺骗，是一台主机设备冒充另外一台主机的IP地址，与其它设备通信，从而达到某种目的技术。属于IP Spoof类的攻击还有TCP 半连接攻击，也就是SYN Flood攻击</p>]]></content>
      
      
      <categories>
          
          <category> 护网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 护网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝初面经</title>
      <link href="/post/16a83dc0.html"/>
      <url>/post/16a83dc0.html</url>
      
        <content type="html"><![CDATA[<h2 id="Windows-入侵排查思路？"><a href="#Windows-入侵排查思路？" class="headerlink" title="Windows 入侵排查思路？"></a>Windows 入侵排查思路？</h2><ol><li>收集信息：收集与系统安全相关的信息，包括日志文件、进程列表、网络连接、系统配置等。</li><li>分析信息：对收集到的信息进行分析，确定异常行为和潜在威胁。</li><li>确认威胁：确认系统存在威胁，并确定其类型和程度。</li><li>阻止攻击：采取相应的措施，尽快阻止攻击并减少损失。</li><li>恢复系统：对受到攻击的系统进行恢复，确保其正常运行。</li></ol><p>具体来说，可以采取以下几种方法进行入侵排查：</p><ol><li>使用防病毒软件：定期使用防病毒软件扫描系统，及时发现并清除潜在的威胁。</li><li>定期更新系统：定期更新系统和安全补丁，以确保系统的安全性。</li><li>监控网络连接：监控网络连接情况，及时发现异常连接和流量，以及非法访问尝试。</li><li>分析日志文件：分析日志文件，了解系统的使用情况和异常行为，及时发现威胁。</li><li>使用安全工具：使用安全工具，如入侵检测系统、网络监控系统等，帮助发现和阻止威胁。</li><li>加强用户教育：加强用户教育，提高用户安全意识，减少人为因素对系统安全的影响。</li></ol><p>总之，入侵排查需要综合运用多种工具和方法，不断加强系统的安全性和监控能力，以保障系统的安全运行。</p><hr><h2 id="Linux-入侵排查思路？"><a href="#Linux-入侵排查思路？" class="headerlink" title="Linux 入侵排查思路？"></a>Linux 入侵排查思路？</h2><ol><li>收集基础信息：收集系统的版本、配置文件和日志等信息，了解系统的正常运行状态。</li><li>分析异常行为：通过比较正常状态与异常状态的差异，分析系统上出现的任何异常行为，例如不寻常的进程、网络流量或文件更改。</li><li>确认入侵点：确定攻击者可能入侵的方式，并检查是否存在未修复的漏洞。</li><li>隔离受感染的系统：及时隔离受感染的系统，以限制损害并避免进一步传播。</li><li>恢复系统：清除恶意代码并修复受损部分，通过备份恢复数据和配置文件，确保系统安全。</li><li>收集证据：收集入侵事件的详细信息，包括攻击的时间、入侵的方式、影响范围、损失情况等，以便后续追踪和定位攻击者。</li></ol><p>在实际操作中，需要结合专业的工具和技能进行排查，例如使用抓包工具Wireshark分析网络流量、使用进程监控工具ps、top、htop等查看进程运行情况。同时，还需要不断学习更新各种安全相关的技能和知识，以提高排查入侵事件的能力。</p><hr><h2 id="Linux-如何查看登录日志？有哪些相关消息文件？"><a href="#Linux-如何查看登录日志？有哪些相关消息文件？" class="headerlink" title="Linux 如何查看登录日志？有哪些相关消息文件？"></a>Linux 如何查看登录日志？有哪些相关消息文件？</h2><p>在 Linux 系统中，可以通过以下方式查看登录日志：</p><ol><li>&#x2F;var&#x2F;log&#x2F;auth.log文件：该文件记录了所有用户的认证信息，包括 SSH 登录、sudo 访问以及 su 切换等操作。</li><li>&#x2F;var&#x2F;log&#x2F;secure文件：该文件用于记录系统身份验证和授权消息，通常在 Red Hat 系统上使用。其中包括 SSH 登录、sudo 访问以及 su 切换等操作。</li><li>&#x2F;var&#x2F;log&#x2F;messages文件：该文件记录了系统的运行消息，包括启动和关闭服务、内核消息以及其他重要事件。</li><li>w命令：可以查看当前已登录的用户和他们的会话信息。</li><li>last命令：可以查看最近所有登录和注销会话的用户列表以及日期和时间。</li><li>lastlog命令：可以查看所有用户最后一次登录的时间和位置。</li></ol><p>需要注意的是，在某些系统中这些文件名可能会有所不同，例如 Ubuntu 系统中的 &#x2F;var&#x2F;log&#x2F;auth.log 文件可能是 &#x2F;var&#x2F;log&#x2F;auth.log.1、&#x2F;var&#x2F;log&#x2F;auth.log.2.gz等形式。因此，在查看登录日志时，最好先了解当前系统的具体情况。</p><hr><h2 id="Windows-和-Linux-的日志文件放在哪里？"><a href="#Windows-和-Linux-的日志文件放在哪里？" class="headerlink" title="Windows 和 Linux 的日志文件放在哪里？"></a>Windows 和 Linux 的日志文件放在哪里？</h2><p>Windows:</p><ol><li>系统事件记录器：Event Viewer 应用程序中提供了 Windows 系统的事件日志管理工具。这些日志文件通常存储在 C:\Windows\System32\winevt\Logs 目录中。</li><li>应用程序日志：包括应用程序特定的事件、错误和警告等信息，可以使用 Event Viewer 应用程序进行查看。这些日志文件通常存储在应用程序的安装目录下或者 Windows 系统目录中。</li><li>安全日志：记录有关系统安全性的重要信息，例如登录、注销、权限更改等。这些日志文件通常存储在 C:\Windows\System32\winevt\Security.evtx 文件中。</li></ol><p>Linux:</p><ol><li>系统日志：Linux 系统中的所有日志都存储在 &#x2F;var&#x2F;log 目录下。主要的日志文件包括：</li></ol><ul><li>&#x2F;var&#x2F;log&#x2F;messages：记录系统启动期间的消息以及其他系统级别的消息。</li><li>&#x2F;var&#x2F;log&#x2F;syslog：记录核心系统日志，也包括其他应用程序的日志。</li><li>&#x2F;var&#x2F;log&#x2F;auth.log：记录用户登录和其他身份验证相关事件的日志文件。</li></ul><ol><li>各种服务&#x2F;软件的日志文件：各种服务或软件分别根据自己的命名规范来命名相应的日志文件，其中一些可能位于 &#x2F;var&#x2F;log 目录下，而另一些则可能位于 &#x2F;var&#x2F;log&#x2F;service 目录下。</li></ol><p>需要注意的是，日志文件在系统运行一段时间后可能会变得非常庞大，因此需要定期进行归档和清理，以释放磁盘空间并提高系统性能。</p><hr><h2 id="Linux-常用排查命令有哪些？"><a href="#Linux-常用排查命令有哪些？" class="headerlink" title="Linux 常用排查命令有哪些？"></a>Linux 常用排查命令有哪些？</h2><p>在 Linux 系统中，有许多工具和命令可以用来排查问题。以下是一些常用的排查命令：</p><ol><li>top：显示当前系统中最占用 CPU 和内存的进程。</li><li>ps：显示当前系统所有运行的进程列表。</li><li>netstat：显示网络连接状态和统计信息，例如打开的端口、TCP&#x2F;UDP 连接和网络接口等。</li><li>ifconfig&#x2F;iwconfig：显示网络接口的状态和配置信息。</li><li>ping&#x2F;traceroute：用于测试网络是否连通以及检测网络故障的工具。</li><li>df&#x2F;du：显示磁盘使用情况，包括已用空间和可用空间等信息。</li><li>ls&#x2F;lsof：用于查看打开的文件、目录和文件描述符。</li><li>strace&#x2F;ltrace：跟踪应用程序执行期间的系统调用和库函数调用。</li><li>tcpdump：捕获网络数据包并将其记录到日志文件中，以便进行后续分析。</li><li>tail：实时监视日志文件，并显示最新添加的日志信息。</li></ol><p>以上这些命令只是其中的一部分，不同的问题可能需要使用不同的命令和工具。在实际操作中，需要根据具体的情况选择合适的命令和工具，并结合自己的经验和知识进行排查。</p><hr><h2 id="Linux-的-Selinux-是什么？如何设置-Selinux？"><a href="#Linux-的-Selinux-是什么？如何设置-Selinux？" class="headerlink" title="Linux 的 Selinux 是什么？如何设置 Selinux？"></a>Linux 的 Selinux 是什么？如何设置 Selinux？</h2><p>SELinux（Security-Enhanced Linux）是一个针对 Linux 内核的安全模块，它可以限制进程和用户的访问权限，并提供更加细粒度的访问控制。SELinux 基于强制访问控制（MAC）模型，将每个进程&#x2F;对象分配到不同的安全上下文中，并通过策略文件来定义这些上下文之间的关系。</p><p>在 Linux 中，SELinux 可以通过以下步骤进行设置：</p><ol><li>检查 SELinux 状态：使用命令 getenforce 或者 sestatus 来检查当前 SELinux 的状态，例如 enforcing、permissive 或者 disabled 等。</li><li>修改 SELinux 配置文件 &#x2F;etc&#x2F;selinux&#x2F;config：可以修改 SELINUX 参数的值为 enforcing（强制模式）、permissive（宽容模式）或者disabled（禁用 SELinux）等。</li><li>安装和管理 SELinux 策略包：使用 yum 命令安装和管理 SELinux 相关的策略包，例如 policycoreutils 和 selinux-policy 等。</li><li>设定 SELinux 上下文：使用 chcon、semanage 和 restorecon 等命令来更改文件或目录的安全上下文。</li><li>确认 SELinux 日志：在排除 SELinux 相关问题时可以使用命令 ausearch、ausearch、auditctl 等来确认 SELinux 日志。</li></ol><p>需要注意的是，在对 SELinux 进行设置和管理时，需要有一定的 Linux 系统管理经验和 SELinux 相关知识。因为错误的配置可能会导致系统不稳定或者无法启动，所以在操作前应仔细阅读相关文档并进行备份。</p><hr><h2 id="Linux、Windows-安全加固"><a href="#Linux、Windows-安全加固" class="headerlink" title="Linux、Windows 安全加固"></a>Linux、Windows 安全加固</h2><p>Linux 安全加固：</p><ol><li>更新所安装的软件包：定期更新系统中所有软件包以修复已知漏洞。</li><li>禁用不必要的服务：禁用不必要的网络服务，减少攻击面。</li><li>配置防火墙：使用防火墙限制入站和出站网络流量，只允许合法的流量通过。</li><li>加强密码策略：设置强密码策略并启用多因素身份验证。</li><li>禁用 root 登录：禁止使用 root 用户登录系统，并将 sudo 和 su 访问权限限制到必要的人员或组。</li><li>使用 SELinux 或 AppArmor：使用 SELinux 或 AppArmor 来实现更细粒度的应用程序和文件访问控制。</li><li>配置 SSH 访问：使用 SSH 协议连接服务器时配置限制 IP 地址和端口号等安全措施。</li><li>定期备份数据：定期备份重要数据至外部存储设备，以防止数据丢失和系统损坏。</li></ol><p>Windows 安全加固：</p><ol><li>更新操作系统和软件：及时安装 Windows 操作系统和软件的安全更新。</li><li>禁用 SMBv1：由于 SMBv1 协议存在一些严重的漏洞，建议禁用 SMBv1 协议。</li><li>启用 UAC：启用用户账户控制（UAC），以限制非管理员用户的系统访问权限。</li><li>配置防火墙：使用 Windows 防火墙过滤不必要的网络流量，并确保只允许合法的流量通过。</li><li>使用 BitLocker 或类似的加密工具：对重要数据和文件进行加密存储，以避免数据泄漏。</li><li>配置组策略：使用本地组策略或 Active Directory 组策略来限制用户和计算机的访问权限。</li><li>检查安全事件日志：定期检查 Windows 安全事件日志，了解系统中发生的任何异常事件。</li><li>定期备份数据：定期备份重要数据至外部存储设备，以防止数据丢失和系统损坏。</li></ol><p>需要注意的是，这些措施只是增强系统安全的一部分，而不能保证系统绝对安全。因此，建议采取多种方法来保护自己的系统和数据。</p><hr><h2 id="windows-日志分析工具"><a href="#windows-日志分析工具" class="headerlink" title="windows 日志分析工具"></a>windows 日志分析工具</h2><ol><li>Event Viewer：Windows 自带的日志管理工具，可以查看和分析 Windows 系统中的各种事件日志。</li><li>Log Parser：一款免费的命令行工具，可以查询和分析日志文件、IIS 日志、Windows 注册表、Active Directory 等数据源。</li><li>Microsoft Message Analyzer：一款强大的网络协议分析工具，可以捕获和分析 Windows 操作系统上的网络流量和事件日志。</li><li>Syslog-ng：一个高性能的日志管理工具，可以帮助用户收集和分析来自不同平台的日志信息。</li><li>Graylog：一款开源的日志管理工具，可以帮助用户收集、存储和分析来自不同来源的日志信息，并提供直观易用的用户界面。</li><li>Splunk：一款商业化的日志管理工具，可以帮助用户实时监控、搜索、分析和可视化来自不同来源的日志信息。</li></ol><p>需要注意的是，在选择日志分析工具时，需要根据自己的需求和实际情况进行选择，并结合相关操作系统和网络知识进行使用。</p><hr><h2 id="Linux-日志分析技巧命令"><a href="#Linux-日志分析技巧命令" class="headerlink" title="Linux 日志分析技巧命令"></a>Linux 日志分析技巧命令</h2><ol><li><p>grep 命令：用于在文本文件中搜索指定的字符串和模式，例如可以使用 grep error &#x2F;var&#x2F;log&#x2F;messages 命令来查找系统日志中的错误信息。</p></li><li><p>tail 命令：实时监视日志文件，并显示最新添加的日志信息，例如可以使用 tail -f &#x2F;var&#x2F;log&#x2F;messages 命令来实时监视系统消息。</p></li><li><p>sed 和 awk 命令：可以用来编辑和处理文本文件，例如可以使用 awk ‘&#x2F;error&#x2F; {print $0}’ &#x2F;var&#x2F;log&#x2F;messages 命令来筛选出包含 error 字符串的日志信息。</p></li><li><p>journalctl 命令：用于查询和查看 systemd 系统日志，例如可以使用 journalctl -u nginx.service 命令来查看 Nginx 服务的日志信息。</p></li><li><p>dmesg 命令：用于打印内核环境变量缓冲区的内容包</p><h2 id="Linux-基线规范"><a href="#Linux-基线规范" class="headerlink" title="Linux 基线规范"></a>Linux 基线规范</h2></li></ol><p>Linux 基线规范是指为了保证 Linux 系统安全性和可靠性，制定的一系列最佳实践和标准化要求。Linux 基线规范通常包括以下几个方面：</p><ol><li>安全加固：禁用不必要的服务、配置防火墙、强化密码策略等。</li><li>用户和权限管理：创建普通用户账号、限制 root 账号访问、使用 sudo 进行授权等。</li><li>日志管理：启用系统日志、日志文件备份和归档、监控日志信息等。</li><li>文件系统和目录结构规范：对重要数据进行加密、使用 ext4 文件系统、分区管理等。</li><li>网络安全：检查网络连接状态、限制入站和出站流量、使用 SELinux 或 AppArmor 等。</li><li>软件更新与安全漏洞修复：定期更新操作系统和软件补丁、及时处理已知漏洞等。</li><li>数据备份与恢复：定期备份和恢复系统数据和设置等。</li></ol><p>需要注意的是，不同的公司或组织可能会有不同的基线规范要求。在实践中，我们可以根据自己的需求和安全风险评估情况，设计并实施相应的基线规范，并定期进行评估和调整。这样可以帮助我们规范化 Linux 系统的管理和维护，并提高系统的可靠性和安全性。</p><hr><h2 id="Windows-安全基线检查"><a href="#Windows-安全基线检查" class="headerlink" title="Windows 安全基线检查"></a>Windows 安全基线检查</h2><p>Windows 安全基线检查是指通过对 Windows 操作系统进行安全配置和最佳实践检查，来评估系统的安全性和完整性。Windows 安全基线包括以下几个方面：</p><ol><li>用户和权限管理：创建普通用户账号、限制管理员账号访问、使用 UAC 进行授权等。</li><li>密码策略：设置强密码策略，并启用多因素身份验证。</li><li>网络安全：配置防火墙、禁用不必要的服务、加密敏感数据传输等。</li><li>软件更新与安全漏洞修复：定期更新操作系统和软件补丁、及时处理已知漏洞等。</li><li>日志管理：启用系统日志、监控日志信息、建立日志归档等。</li><li>文件和目录权限：配置文件系统和目录结构规范、限制文件和目录访问权限等。</li><li>数据备份与恢复：定期备份和恢复系统数据和设置等。</li></ol><p>为了进行 Windows 安全基线检查，可以使用 Microsoft Security Compliance Toolkit 工具，该工具包含安全基线和最佳实践检查工具，并提供安全配置模板和分析报告。此外，还可以使用第三方商业化工具，例如 SolarWinds、McAfee 等，来帮助进行 Windows 安全基线检查。</p><p>需要注意的是，安全基线检查只是评估系统安全性的一部分。为了保证 Windows 系统的安全性和可靠性，还需要采取其他措施，例如定期更新操作系统和软件补丁、加强密码策略、备份数据等。</p><hr><h2 id="中间件基线规范（APACHE）"><a href="#中间件基线规范（APACHE）" class="headerlink" title="中间件基线规范（APACHE）"></a>中间件基线规范（APACHE）</h2><p>Apache 是一款常用的 Web 服务器软件，为了保障其安全可靠地运行，可以制定中间件基线规范。以下是 Apache 中间件基线规范的一些重要措施：</p><ol><li>版本号管理：定期检查并更新 Apache 版本，及时安装最新版本的补丁与安全更新。</li><li>配置文件规范：对 Apache 的配置文件进行规范化和审计，限制网站访问权限、禁止目录浏览等。</li><li>日志管理：启用 Apache 访问日志和错误日志，定期清理日志文件并做好备份、归档等工作。</li><li>安全加固：如禁用不必要的模块、关闭 TRACE 请求响应、限制 HTTP 方法等。</li><li>SSL&#x2F;TLS 加强：设置 TLS 选项、开启 HSTS、使用证书身份验证等。</li><li>防火墙和反向代理策略：通过防火墙等技术来过滤恶意流量，使用反向代理策略限制直接连接到 Web 服务器的 IP 地址。</li><li>应用安全：对 Web 应用程序进行安全审计，确保程序的漏洞被修复、未受到攻击等。</li></ol><p>需要注意的是，以上这些措施只是 Apache 中间件基线规范的一部分，实际操作中还需要根据具体情况进行评估和调整。同时，要保障 Apache 服务器的安全性和可靠性，还需要定期备份数据、优化性能等工作。</p><hr><h2 id="中间件常见漏洞"><a href="#中间件常见漏洞" class="headerlink" title="中间件常见漏洞"></a>中间件常见漏洞</h2><p>中间件是指应用程序和操作系统之间的软件组件，常见的中间件漏洞有以下几种：</p><ol><li>Web服务器漏洞：针对Web服务器（如Apache、Nginx）的攻击通常包括利用目录遍历、文件包含、SQL注入等技术。</li><li>数据库漏洞：数据库（如MySQL、Oracle、SQL Server）的漏洞通常涉及未授权的访问、SQL注入等方面。</li><li>应用服务器漏洞：应用服务器（如Tomcat、JBoss、WebLogic）的漏洞通常会导致远程执行代码、拒绝服务等问题。</li><li>消息队列漏洞：消息队列（如RabbitMQ、Kafka）的漏洞通常涉及未授权访问、拒绝服务等问题。</li><li>缓存服务器漏洞：缓存服务器（如Redis、Memcached）的漏洞通常包括未授权访问、命令注入等问题。</li><li>中间件配置问题：中间件的错误配置也可能导致安全问题，比如弱密码、不安全的协议配置等。</li></ol><p>需要注意的是，中间件漏洞是日益增多的，因此建议及时更新和修补中间件的安全漏洞。</p><hr><h2 id="常见中间件的配置文件路径知道哪些？"><a href="#常见中间件的配置文件路径知道哪些？" class="headerlink" title="常见中间件的配置文件路径知道哪些？"></a>常见中间件的配置文件路径知道哪些？</h2><p>不同的中间件软件有不同的配置文件路径。以下是几种常见中间件软件的配置文件路径：</p><ol><li>Apache Web 服务器：httpd.conf 文件通常位于 &#x2F;etc&#x2F;httpd&#x2F; 或者 &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F; 目录下。</li><li>Nginx Web 服务器：nginx.conf 文件通常位于 &#x2F;etc&#x2F;nginx&#x2F; 或者 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F; 目录下。</li><li>MySQL 数据库：my.cnf 文件通常位于 &#x2F;etc&#x2F;mysql&#x2F; 或者 &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;etc&#x2F; 目录下。</li><li>PostgreSQL 数据库：postgresql.conf 和 pg_hba.conf 文件通常位于 &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;data&#x2F; 或者 &#x2F;etc&#x2F;postgresql&#x2F;&#x2F;main&#x2F; 目录下。</li><li>Oracle 数据库：initSID.ora 和 listener.ora 文件通常位于 $ORACLE_HOME&#x2F;dbs&#x2F; 目录下。</li><li>Tomcat 应用服务器：server.xml、context.xml 和 web.xml 文件通常位于 &#x2F;conf&#x2F; 目录下。</li><li>JBoss 应用服务器：standalone.xml 和 standalone-full.xml 文件通常位于 &#x2F;standalone&#x2F;configuration&#x2F; 目录下。</li></ol><p>需要注意的是，这些路径可能会根据不同的操作系统而有所不同，并且也会随着中间件版本的更新而变化。因此，在进行中间件配置时，建议查询官方文档或参考相关文献以获取最新的配置文件路径信息。</p><hr><h2 id="常用的安全工具以及常见的设备有哪些？"><a href="#常用的安全工具以及常见的设备有哪些？" class="headerlink" title="常用的安全工具以及常见的设备有哪些？"></a>常用的安全工具以及常见的设备有哪些？</h2><p>常用的安全工具和设备有很多，以下是其中一些常见的：</p><ol><li>防火墙（Firewall）：防火墙可以过滤网络流量，保护网络不受外部攻击。常见的防火墙包括硬件防火墙和软件防火墙。</li><li>入侵检测系统（Intrusion Detection System, IDS）：IDS 可以监控网络流量、检测恶意行为和入侵事件，并向管理员发出警报。</li><li>入侵防御系统（Intrusion Prevention System, IPS）：IPS 可以在 IDS 的基础上主动预防入侵事件，并进行自动化响应。</li><li>统一威胁管理平台（Unified Threat Management, UTM）：UTM 是一种集成了防火墙、IDS&#x2F;IPS、VPN、反病毒等多种功能的综合性安全解决方案。</li><li>脆弱性扫描器（Vulnerability Scanner）：脆弱性扫描器可以发现系统中可能存在的漏洞，并提供修补建议。</li><li>安全信息和事件管理系统（Security Information and Event Management, SIEM）：SIEM 可以对安全事件和日志数据进行收集、分析和报告，帮助管理员更好地了解和响应安全事件。</li><li>代理服务器（Proxy Server）：代理服务器可以过滤流量、检查内容和访问控制，提供额外的安全保护。</li><li>负载均衡器（Load Balancer）：负载均衡器可以平衡网络流量，分担服务器负载，提高网络性能和可用性。</li><li>加密设备：加密设备可以对数据进行加密处理，防止数据被窃取或篡改。</li></ol><p>需要注意的是，以上只是其中一些常见的安全工具和设备，实际应用中还有很多其他的安全工具和设备。在选择和使用安全工具和设备时，需要根据具体情况进行评估和选择，并确保其符合实际需求和安全标准。</p><hr><h2 id="你知道的威胁情报库有哪些？"><a href="#你知道的威胁情报库有哪些？" class="headerlink" title="你知道的威胁情报库有哪些？"></a>你知道的威胁情报库有哪些？</h2><ol><li>银河麒麟（ThreatBook）：银河麒麟是国内领先的网络安全威胁情报服务提供商，其威胁情报库包括恶意软件、攻击源IP、域名等方面的信息。</li><li>国家互联网应急中心（CNCERT）：CNCERT 是中国政府统一组织和协调全国互联网安全工作的部门，其威胁情报库包括漏洞、恶意代码、攻击事件等方面的信息。</li><li>安恒威胁情报中心（ATIS）： ATIS 是安恒信息安全研究院旗下的威胁情报中心，其威胁情报库涵盖了APT攻击、Web攻击、恶意邮件、移动恶意软件等方面的信息。</li><li>漏洞盒子（KnownSec）：漏洞盒子是一家致力于网络安全防御和攻防技术研究的公司，其威胁情报库包括漏洞、恶意代码等方面的信息。</li><li>360威胁情报中心（360 TI Center）：360 威胁情报中心聚焦于威胁情报、安全事件响应和恶意代码研究等领域，其威胁情报库包括APT攻击、恶意URL等方面的信息。</li></ol><p>需要注意的是，以上威胁情报库只是其中一部分，实际应用中还有很多其他的威胁情报库。在使用威胁情报库时，需要根据具体需求进行评估和选择，并确保数据来源可靠、及时和准确。</p><hr><h2 id="怎么发现有没有被攻击？"><a href="#怎么发现有没有被攻击？" class="headerlink" title="怎么发现有没有被攻击？"></a>怎么发现有没有被攻击？</h2><p>发现自己是否被攻击是网络安全管理中非常重要的一环。以下是几种常见的发现被攻击的方法：</p><ol><li>安全日志监控：对系统和应用程序的安全日志进行监控，可以及时发现异常活动和安全事件。例如，登录失败、异常访问、恶意软件入侵等。</li><li>网络流量分析：通过对网络流量进行监控和分析，可以发现可能存在的攻击行为。例如，大量来自某个 IP 地址或特定端口的流量、恶意脚本和代码注入等。</li><li>主机基线监测：通过对应用程序、操作系统和数据文件等资源进行基线监测，可以及时发现可能存在的异常变化和不正常的活动。</li><li>脆弱性扫描：通过使用脆弱性扫描工具，可以发现系统中可能存在的漏洞，并提供修补建议。</li><li>威胁情报监测：通过使用威胁情报库和服务，可以了解到当前存在的威胁活动，及时采取防御措施。</li><li>安全演练：通过进行安全演练，可以模拟真实的攻击场景，评估自身的安全状态，及时发现和修复存在的问题。</li></ol><p>需要注意的是，以上方法只是其中一部分，实际应用中还有很多其他的发现被攻击的方法。在进行网络安全管理时，需要综合使用多种方法，并不断更新和完善自身的防御措施，以提高安全水平和减少被攻击的风险。</p><hr><h2 id="SQL-注入如何进行检测"><a href="#SQL-注入如何进行检测" class="headerlink" title="SQL 注入如何进行检测"></a>SQL 注入如何进行检测</h2><ol><li>数据库异常日志：在数据库服务器上查看异常日志或错误日志，如果发现异常 SQL 语句，或者 SQL 语句中包含可疑代码或关键字，就可能存在 SQL 注入攻击。</li><li>应用服务器日志：在应用服务器上查看访问日志或错误日志，如果发现访问异常、错误码增多，或者包含可疑的 URL 参数等信息，也可能表明存在 SQL 注入攻击。</li><li>漏洞扫描工具：使用专业的漏洞扫描工具，可以自动化地检测应用程序中可能存在的 SQL 注入漏洞，并提供修补建议。</li><li>安全审计：通过记录用户行为和操作日志，可以检测和追踪可能存在的 SQL 注入攻击。</li><li>手动测试：模拟攻击者的行为，手动输入特定的 SQL 语句或注入代码，来验证是否存在 SQL 注入漏洞。</li></ol><p>需要注意的是，以上方法只是其中一部分，实际应用中还有很多其他的 SQL 注入检测方法。在进行 SQL 注入检测时，需要综合使用多种方法，并不断更新和完善自身的防御措施，以提高安全水平和减少被攻击的风险。同时，如果确实发现了 SQL 注入攻击，应及时采取措施来修复漏洞并保护数据库中的数据。</p><hr><h2 id="Sql-注入加固措施？"><a href="#Sql-注入加固措施？" class="headerlink" title="Sql 注入加固措施？"></a>Sql 注入加固措施？</h2><p>为了防止 SQL 注入攻击，可以采取以下一些常见的加固措施：</p><ol><li>输入验证：对用户输入数据进行验证和过滤，特别是对单引号、双引号、分号等特殊字符进行处理。可以使用输入过滤函数或正则表达式等方式来实现。</li><li>参数化查询：使用参数化查询操作数据库，可以将用户输入的数据视为参数而不是 SQL 代码的一部分，从而避免 SQL 注入攻击。</li><li>最小化权限原则：在应用程序连接数据库时，给予最小必要的权限，并严格控制数据库访问权限，以减少攻击者利用 SQL 注入漏洞获取敏感信息的可能性。</li><li>安全编码标准：在开发应用程序时，遵循安全编码标准，避免使用拼接 SQL 语句的方式，而是采用参数化查询等安全方式来操作数据库。</li><li>异常信息处理：在应用程序中添加异常处理机制，可以及时捕获和记录 SQL 注入攻击产生的异常信息，便于管理员及时发现和修复问题。</li><li>安全审计：通过记录用户行为和操作日志，可以检测和追踪可能存在的 SQL 注入攻击。</li></ol><p>需要注意的是，以上只是其中一部分常见的 SQL 注入加固措施，针对不同的应用和场景，可能需要采用不同的加固措施。在进行 SQL 注入防御时，需要综合考虑多种因素，并不断更新和完善自身的防御措施，以提高安全水平并减少被攻击的风险。</p><hr><h2 id="文件上传和命令执行，有看过相关日志吗？"><a href="#文件上传和命令执行，有看过相关日志吗？" class="headerlink" title="文件上传和命令执行，有看过相关日志吗？"></a>文件上传和命令执行，有看过相关日志吗？</h2><p>文件上传和命令执行都是常见的 Web 应用程序安全漏洞，攻击者利用漏洞上传恶意文件或执行恶意代码，从而获取服务器上的敏感数据或控制服务器。在进行安全管理时，通常可以通过查看相关日志来发现潜在的安全威胁。</p><p>对于文件上传漏洞，以下是一些可能存在的相关日志：</p><ol><li>文件上传日志：Web 服务器或应用服务器上的访问日志中可能包含上传文件的信息，例如上传时间、上传文件名称、上传文件大小等。</li><li>访问控制日志：如果应用程序实现了文件上传的访问控制机制，记录访问控制的日志可能包含了上传文件的信息，例如上传人员、上传时间、上传 IP 地址等。</li><li>安全审计日志：如果使用了安全审计工具，可以记录文件上传操作的详细信息，例如上传文件的路径、上传文件的内容等。</li></ol><p>对于命令执行漏洞，以下是一些可能存在的相关日志：</p><ol><li>访问日志：Web 服务器或应用服务器上的访问日志中可能包含恶意代码执行的信息，例如请求 URL、HTTP 请求方法、HTTP 状态码等。</li><li>异常日志：应用程序中的异常日志可以记录可能存在的恶意代码执行异常信息，例如异常类型、异常堆栈等。</li><li>安全审计日志：如果使用了安全审计工具，可以记录恶意代码执行的详细信息，例如恶意代码的来源、执行时间、执行结果等。</li></ol><p>需要注意的是，以上只是其中一部分可能存在的相关日志，实际应用中还有更多可能的日志类型。在进行文件上传和命令执行漏洞的检测和防御时，需要根据具体应用进行评估和选择，并及时发现和修复潜在的安全威胁。</p><hr><h2 id="你能说明文件上传的原理吗？"><a href="#你能说明文件上传的原理吗？" class="headerlink" title="你能说明文件上传的原理吗？"></a>你能说明文件上传的原理吗？</h2><p>当用户上传文件时，通常需要通过 HTTP 或 HTTPS 协议将文件传输到 Web 服务器。文件上传的原理可以简单地描述为：</p><ol><li>客户端向服务器发送一个包含文件数据的 POST 请求。</li><li>服务器接收请求并解析其中的文件数据。</li><li>服务器将文件保存在指定的目录下，并返回处理结果给客户端。</li></ol><p>具体来说，文件上传流程一般如下：</p><ol><li>用户在 Web 页面上选择要上传的文件，并提交表单。</li><li>浏览器将表单中的数据进行编码并作为 POST 请求发送给 Web 服务器。</li><li>Web 服务器接收到请求后，会解析请求参数，获取上传的文件数据。</li><li>服务器对上传的文件进行校验和过滤，例如检查文件格式、大小、类型等，防止上传恶意文件。</li><li>如果上传的文件符合要求，则将文件存储在指定的位置，如果不符合要求，则拒绝上传并返回错误信息。</li><li>服务器返回上传结果给客户端，告知用户文件是否上传成功。</li></ol><p>需要注意的是，文件上传涉及到的安全问题较多，例如上传的文件可能会包含病毒、木马等恶意程序，攻击者可能会利用上传漏洞上传恶意文件，从而导致服务器被控制。因此，在进行文件上传功能开发时，需要仔细考虑安全问题，并采取相应的防御措施，例如限制上传文件大小、过滤不安全的文件类型等。</p><hr><h2 id="文件上传攻击特征？"><a href="#文件上传攻击特征？" class="headerlink" title="文件上传攻击特征？"></a>文件上传攻击特征？</h2><p>文件上传攻击是指攻击者通过网站上的文件上传功能，上传恶意文件来执行攻击。以下是一些文件上传攻击的特征：</p><ol><li>文件类型绕过：攻击者可能会尝试上传不受支持的文件类型，或者将文件类型伪装成其他类型，以绕过文件类型检查。</li><li>文件名欺骗：攻击者可能会使用诱人的文件名称来欺骗用户下载或打开恶意文件。</li><li>文件内容：上传的文件可能包含恶意代码、木马、病毒等恶意程序，这些程序可被用于攻击和控制目标系统。</li><li>大小限制绕过：攻击者可能会尝试绕过文件大小的限制，上传超过规定大小的文件。</li><li>目录遍历：攻击者可能会通过在文件名中插入..&#x2F;等字符来遍历目标服务器上的目录，获取敏感信息或执行攻击。</li></ol><p>如果您担心自己的网站可能会受到文件上传攻击，请确保实施足够的安全措施，如限制上传文件类型、大小和数量、对上传的文件进行检查、将上传的文件保存在安全的位置，并为所有上传的文件生成一个唯一的文件名。</p><h2 id="文件上传加固方法？"><a href="#文件上传加固方法？" class="headerlink" title="文件上传加固方法？"></a>文件上传加固方法？</h2><p>以下是保护您的网站免受文件上传攻击的一些方法：</p><ol><li>文件类型和大小限制：在服务器端对上传的文件进行检查，确保上传的文件类型、大小和数量符合预期。可以使用白名单方式进行限制，只允许上传特定类型的文件。</li><li>检查文件内容：在服务器端对上传的文件进行检查，确保它们不包含恶意代码或病毒等危险内容。可以使用杀毒软件或安全扫描工具来帮助检查上传的文件。</li><li>重命名文件：将上传的文件保存在一个新的随机生成的文件名下，而不是使用用户提供的文件名。这样可以避免攻击者通过伪造文件名来欺骗用户。</li><li>存储位置：将上传的文件保存在与网站主目录分离的位置上，以避免攻击者上传Webshell等恶意脚本，并能够防止攻击者直接访问上传的文件。</li><li>使用安全上传类库：使用安全的上传类库或框架，如Apache Commons FileUpload、SecureFileUploader等。</li><li>HTTPS加密：在传输过程中使用HTTPS协议加密，以避免数据在传输过程中被窃听或篡改。</li><li>日志审计：记录所有的文件上传操作并定期审计日志，以便发现异常上传行为，及时采取措施。</li></ol><p>总之，防止文件上传攻击需要综合考虑多种因素，包括文件类型、大小、内容、存储位置、传输方式等，同时定期进行安全审计，并且对于应用程序代码的编写需要充分考虑安全因素。</p><h2 id="暴力破解加固方法？"><a href="#暴力破解加固方法？" class="headerlink" title="暴力破解加固方法？"></a>暴力破解加固方法？</h2><p>以下是一些保护您的网站免受暴力破解攻击的方法：</p><ol><li>密码策略：实施强密码策略，建议用户使用包含大写字母、小写字母、数字和特殊字符等不同类型字符组成的复杂密码，并设置密码长度要求。</li><li>账户锁定：限制密码尝试次数，并在多次失败后自动锁定账户。同时，应该通过邮件或短信通知用户他们的账户已被锁定，以防止攻击者对其进行进一步攻击。</li><li>人机验证：在登录页面引入验证码或其他形式的人机验证，以防止自动化破解程序的攻击。</li><li>访问控制：实施访问控制策略，限制只有授权用户才能够访问敏感信息或功能。而且还应该限制来自未知来源或具有恶意行为的IP地址的访问。</li><li>强制退出：如果用户长时间没有活动，应强制退出登录状态，以防止攻击者通过利用未注销的会话进行攻击。</li><li>检测异常行为：检测异常登录行为，如从异常地区或设备登录，或频繁更改登录IP地址等。</li><li>安全日志审计：监控并记录登录事件，并对日志进行审计和分析，以便及时发现异常行为并采取措施。</li></ol><p>总之，在防止暴力破解攻击方面，需要综合考虑多种因素，包括密码策略、账户锁定、人机验证、访问控制、强制退出、检测异常行为等。同时，应保持应用程序的更新，及时修补安全漏洞，以确保系统的完整性和安全性。</p><h2 id="DDOS-CC等攻击应急思路以及如何防范"><a href="#DDOS-CC等攻击应急思路以及如何防范" class="headerlink" title="DDOS CC等攻击应急思路以及如何防范"></a>DDOS CC等攻击应急思路以及如何防范</h2><p>DDoS（分布式拒绝服务攻击）和 CC（HTTP）攻击是目前比较普遍的网络攻击方式之一。以下是应急响应思路以及如何防范这些攻击的建议：</p><ol><li>应急响应思路</li></ol><p>在受到DDoS和CC攻击时，应采取以下措施来降低攻击对系统的影响：</p><ul><li>快速检测并确认攻击类型和攻击源；</li><li>提高带宽和资源利用率，以提供更强的承载能力；</li><li>实施流量清洗、流量限制和IP封堵等措施，清除恶意攻击流量；</li><li>配合 ISP 进行攻击源 IP 的追踪和协助；</li><li>在攻击持续期间，保持实时监控和跟进，随时更新应急响应策略。</li></ul><ol><li>如何防范</li></ol><p>为了预防DDoS和CC攻击，可以采取以下方法：</p><ul><li>增加网络带宽，并提高硬件设备的承载能力，以抵御较小规模的攻击；</li><li>实现DDoS和CC攻击的检测和防御机制，如基于流量和行为的检测技术和防御技术；</li><li>确保服务器和网站软件及时更新，以弥补已知漏洞；</li><li>实施流量清洗、流量限制和IP封堵等措施；</li><li>配置合理的防火墙规则和入侵检测系统（IDS）等安全设备；</li><li>加强网络安全教育，提高用户密码安全性，并定期对敏感数据进行备份和加密。</li></ul><p>总之，在防范DDoS和CC攻击方面，需要综合考虑多种因素，包括增加带宽、提高硬件承载能力、实现攻击检测和防御机制、确保服务器和网站软件及时更新、加强网络安全教育等。同时，应该建立完善的应急响应机制和紧急处理预案，以做好应急响应准备和快速响应。</p><h2 id="挖矿病毒判断以及处理方式"><a href="#挖矿病毒判断以及处理方式" class="headerlink" title="挖矿病毒判断以及处理方式"></a>挖矿病毒判断以及处理方式</h2><p>挖矿病毒是指利用受感染的计算机进行加密货币挖矿的恶意软件。以下是判断和处理挖矿病毒的一些方法：</p><ol><li>判断挖矿病毒</li></ol><p>通过以下迹象可以判断计算机是否被感染了挖矿病毒：</p><ul><li>计算机运行速度变慢，CPU占用率高；</li><li>电脑风扇声音变大，温度升高；</li><li>安全软件报告未知病毒或恶意软件；</li><li>系统出现闪退或死机等异常情况。</li></ul><ol><li>处理方式</li></ol><p>如果怀疑计算机已经被感染了挖矿病毒，可以采取以下措施：</p><ul><li>及时更新杀毒软件，并开启实时保护模式；</li><li>扫描整个系统，清除所有恶意文件和注册表项；</li><li>禁止不明程序自启动，及时关闭被感染的进程；</li><li>在安装软件时仔细阅读许可协议，禁止安装未知来源的软件；</li><li>加强账户权限管理，限制非管理员用户对系统的操作权限；</li><li>及时备份重要文件，以便在恶意软件攻击后恢复数据。</li></ul><p>总之，在处理挖矿病毒方面，需要及时发现和清除感染，并加强系统的安全防护措施，如升级杀毒软件、限制非管理员用户权限、备份重要文件等。同时，也需要加强网络安全教育，提高用户对于计算机安全的意识和防范能力。</p><h2 id="服务器存在-webshell，如何处理？"><a href="#服务器存在-webshell，如何处理？" class="headerlink" title="服务器存在 webshell，如何处理？"></a>服务器存在 webshell，如何处理？</h2><p>Webshell是一种Web服务器上的恶意代码，可以使攻击者远程控制服务器，并执行各种命令、上传下载文件等操作。以下是处理服务器存在Webshell的一些方法：</p><ol><li>扫描和确认Webshell</li></ol><p>可以通过查看Web服务器日志或使用安全扫描工具来确认是否存在Webshell。找出所有可疑文件并进行彻底检查，以确定是否存在Webshell。</p><ol><li>删除Webshell</li></ol><p>如果确定存在Webshell，需要立即将其删除，并对系统进行全面清理。删除Webshell时，应同时清除与Webshell相关的文件和目录，并且应用程序代码也需要进行更新和修复。</p><ol><li>加强安全防护措施</li></ol><p>为了避免服务器再次被感染，需要加强安全防护措施，包括加强服务器的监控和日志审计、安装杀毒软件并定期更新、限制非管理员用户权限等。</p><ol><li>修改密码</li></ol><p>修改服务器管理员的账户密码，并确保强密码策略得到实施，建议使用包含大写字母、小写字母、数字和特殊字符等不同类型字符组成的复杂密码，并设置密码长度要求。</p><ol><li>更新和修复应用程序代码</li></ol><p>Webshell通常是由于应用程序存在漏洞或安全问题而被植入的。因此，为了防止类似问题再次发生，需要及时更新并修复应用程序代码中的安全漏洞。</p><p>总之，在处理服务器存在Webshell的问题时，需要快速准确地识别和清除Webshell，并加强服务器和应用程序的安全防护措施。同时，也需要定期进行巡检和审计，及时发现和排除漏洞，以确保系统的完整性和安全性。</p><h2 id="排查-shell-应该用什么命令来进行排查？"><a href="#排查-shell-应该用什么命令来进行排查？" class="headerlink" title="排查 shell 应该用什么命令来进行排查？"></a>排查 shell 应该用什么命令来进行排查？</h2><p>要排查 shell 的问题，可以使用以下命令：</p><ol><li><code>echo</code>：用于打印变量或字符串，可以用来检查变量的值是否正确。</li><li><code>set</code>：用于显示所有的 shell 变量和函数，包括环境变量。</li><li><code>env</code>：用于显示当前 shell 环境下的所有环境变量。</li><li><code>source</code> 或 <code>.</code>：用于读取并执行指定文件中的命令，通常用于重新加载配置文件。</li><li><code>sh -x script.sh</code>：用于以调试模式执行脚本，并输出每个执行的命令及其参数。</li><li><code>ps</code>：用于列出当前正在运行的进程，可以使用 <code>ps aux</code> 查看详细信息。</li><li><code>top</code>：用于实时查看系统资源的使用情况，可以用来定位占用 CPU 或内存过高的进程。</li><li><code>grep</code>：用于搜索指定的文本内容，可以用来查找特定日志文件中的错误信息等。</li></ol><p>这些命令可以帮助您快速诊断 shell 中的问题。</p><h2 id="如何检测-webshell？"><a href="#如何检测-webshell？" class="headerlink" title="如何检测 webshell？"></a>如何检测 webshell？</h2><p>Webshell是指嵌入到Web服务器上的一种命令执行环境，可以通过Web页面或HTTP协议与其进行交互，攻击者可以利用Webshell来执行各种恶意操作。检测Webshell可以使用以下几种方法：</p><ol><li>查看Web服务器访问日志：Webshell通常会产生异常的网络流量，例如向非标准端口发送POST请求等。查看Web服务器的访问日志，观察是否存在异常的请求。</li><li>安全扫描工具：使用安全扫描工具对Web服务器进行扫描，以检测是否存在Webshell。常用的安全扫描工具包括Nessus、OpenVAS等。</li><li>文件监控：Webshell通常会将恶意代码写入某个文件中，因此可以通过文件监控工具来检测Webshell。例如，当文件被修改时，文件监控工具会立即发送警报。</li><li>内存监控：有些高级的Webshell可能不会在磁盘上留下任何痕迹，而是直接将代码注入到内存中。因此，可以使用内存监控工具来检测是否存在Webshell。</li><li>安全审计：对Web服务器进行安全审计，检查是否存在安全漏洞，例如文件上传漏洞、命令注入漏洞等。攻击者通常会利用这些漏洞来上传Webshell。</li></ol><p>以上方法并不能完全保证检测到所有的Webshell，因此建议在Web服务器上部署安全防护解决方案，定期进行安全扫描和审核，并及时更新软件补丁。</p><h2 id="一台主机在内网进行横向攻击，你应该怎么做？"><a href="#一台主机在内网进行横向攻击，你应该怎么做？" class="headerlink" title="一台主机在内网进行横向攻击，你应该怎么做？"></a>一台主机在内网进行横向攻击，你应该怎么做？</h2><p>如果一台主机在内网进行横向攻击，建议采取以下措施：</p><ol><li>隔离受感染的主机：立即将受感染的主机隔离，防止攻击者继续向其他主机传播恶意软件。</li><li>停止该主机的网络访问：为了避免感染蔓延到其他网络节点，需要立即停止该主机的网络访问。</li><li>收集攻击信息：记录并收集有关攻击者、攻击方式和攻击原因的信息。这些信息有助于后续的调查和取证工作。</li><li>清除恶意软件：使用杀毒软件或恶意软件清理工具对受感染的主机进行扫描和清理，确保所有恶意文件都被删除。</li><li>升级系统补丁：检查受感染主机是否存在已知漏洞，并及时安装相应的系统补丁，以防止攻击者再次利用已知漏洞进行攻击。</li><li>取证和分析：对受感染的主机进行取证和分析，以确定攻击者的入侵路径和方法，为后续的防御和修复工作提供参考。</li><li>加强安全防护：加强内网安全防护，定期进行内网安全扫描和审核，及时发现并修复安全漏洞。</li></ol><p>总之，在一台主机在内网进行横向攻击时，需要尽快采取以上措施，避免恶意软件感染蔓延到其他网络节点，最大程度保护整个内网的安全。</p><h2 id="常见端口及其漏洞有哪些？"><a href="#常见端口及其漏洞有哪些？" class="headerlink" title="常见端口及其漏洞有哪些？"></a>常见端口及其漏洞有哪些？</h2><p>以下是常见的端口及其漏洞：</p><ol><li>端口 21（FTP）：FTP服务常用于文件传输，常见漏洞包括弱口令、任意文件上传漏洞等。</li><li>端口 22（SSH）：SSH是远程登录系统的协议，常见漏洞包括弱口令、暴力破解、身份验证绕过等。</li><li>端口 23（Telnet）：Telnet是一个远程控制协议，常见漏洞包括明文传输敏感信息、会话劫持等。</li><li>端口 25（SMTP）：SMTP是发送电子邮件的标准协议，常见漏洞包括垃圾邮件滥用、反射攻击等。</li><li>端口 53（DNS）：DNS是域名解析服务，常见漏洞包括DNS缓存投毒、DDoS攻击等。</li><li>端口 80&#x2F;443（HTTP&#x2F;HTTPS）：HTTP&#x2F;HTTPS是Web服务器常用的协议，常见漏洞包括SQL注入、XSS跨站脚本攻击、文件上传漏洞等。</li><li>端口 135（RPC）：RPC是远程过程调用协议，常见漏洞包括缓冲区溢出、拒绝服务攻击等。</li><li>端口 139&#x2F;445（SMB）：SMB是Windows系统的文件共享协议，常见漏洞包括远程代码执行、密码破解等。</li><li>端口 3389（RDP）：RDP是Windows远程桌面协议，常见漏洞包括弱口令、暴力破解、远程代码执行等。</li></ol><p>以上仅是一些常见的端口及其漏洞，实际上还有很多其他的端口和漏洞。为了减少被攻击的风险，建议定期进行安全扫描，及时修复已知漏洞，并加强网络安全防护。</p><h2 id="你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？"><a href="#你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？" class="headerlink" title="你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？"></a>你能大概说一下，比如数据包或者日志，你的分析思路是什么，以及你会用到哪些工具或者那些网站进行查询？</h2><p>当我分析数据包或者日志时，通常会采用如下的思路：</p><ol><li>收集数据包或日志文件：首先需要收集相关的数据包或日志文件，以便后续分析。</li><li>过滤和提取关键信息：对于大量的数据包或日志，需要通过过滤和提取关键信息的方式来缩小分析范围。例如，可以使用Wireshark的过滤器或grep命令来筛选出特定协议、IP地址等关键信息。</li><li>分析数据包或日志：根据需求进行数据包或日志的分析，并尝试从中发现异常或可疑行为。例如，可以查找异常的流量模式、不寻常的端口、频率异常的请求等。</li><li>确认问题并记录结论：在分析过程中，需要确认是否存在安全问题，并记录所得到的结论。</li><li>对问题进行修复和防范：最后，需要针对分析结果采取相应的措施，例如修补漏洞、加强访问控制、优化安全策略等，以降低风险和增强安全性。</li></ol><p>在这个过程中，我可能会使用以下一些工具和网站：</p><ul><li>Wireshark：网络数据包分析工具，用于捕获和分析网络数据包。</li><li>ELK Stack：用于日志管理和分析的综合解决方案，包括Elasticsearch、Logstash和Kibana。</li><li>grep命令：用于在文本文件中搜索特定模式的字符串。</li><li>WHOIS查询工具：用于查询域名的注册信息。</li><li>端口扫描工具：例如nmap，用于识别目标主机上开放的端口和服务。</li><li>CVE漏洞数据库：用于查询已知漏洞的详细信息。</li><li>OWASP Top 10：一个常见的Web应用程序安全风险排名列表，用于参考Web应用程序是否存在常见的安全问题。</li></ul><p>需要注意的是，分析过程中所用到的工具和网站因情况而异，具体根据实际需求进行选择。</p><h2 id="给你一个比较大的日志，应该如何分析"><a href="#给你一个比较大的日志，应该如何分析" class="headerlink" title="给你一个比较大的日志，应该如何分析"></a>给你一个比较大的日志，应该如何分析</h2><p>当面对一个比较大的日志文件时，通常需要采用以下几个步骤进行分析：</p><ol><li>对日志文件进行预处理：如果日志文件比较大，首先可以考虑对其进行切割、筛选等操作。例如，可以使用Linux系统中的split命令将大型日志文件拆成多个小文件，以便于后续的处理。</li><li>确定日志格式：在分析日志之前，需要了解日志的格式，例如时间戳、事件类型、IP地址等信息。这有助于我们快速定位和分析日志中的内容。</li><li>使用工具进行分析：目前市面上有很多针对日志分析的软件工具，例如ELK Stack（Elasticsearch、Logstash、Kibana）、Splunk等。这些工具能够帮助我们更加高效地分析、搜索和可视化日志数据。</li><li>定义分析目标：在开始分析日志之前，需要明确所需得到的结果以及要回答的问题。例如，我们可能需要查找某个特定的事件或行为、识别与安全相关的异常或潜在威胁等。</li><li>进行分析并记录结论：根据分析目标，采用相应的方法和工具对日志文件进行分析，并记录分析结论。同时要把发现的异常或有用的信息进行整理和汇总。</li><li>采取相应措施：根据分析结果，确定需要采取的措施。例如，修复漏洞、更新安全策略、加强访问控制等。</li></ol><p>需要注意的是，在处理大型日志文件时，可能会消耗较多的时间和计算资源。因此，可以通过合理地利用计算机硬件（例如使用多核CPU和高速磁盘）来提高处理效率。同时也可以将任务分解成多个小部分进行并行处理，以进一步提升分析效率。</p><h2 id="如何查看系统内存-shell"><a href="#如何查看系统内存-shell" class="headerlink" title="如何查看系统内存 shell"></a>如何查看系统内存 shell</h2><p>我们可以通过使用一些命令来查看系统内存的使用情况。以下是一些常用的命令：</p><ol><li>free：用于显示当前系统的内存使用情况，包括已用内存、空闲内存、缓冲区内存和交换分区内存等。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           7.8G        3.4G        289M         88M        4.1G        4.0G</span><br><span class="line">Swap:          2.0G        895M        1.1G</span><br></pre></td></tr></table></figure><ol><li>top：用于实时监视进程的运行状态，包括CPU和内存的使用情况。在 top 命令中，我们可以按 M 键排序以查看占用内存较多的进程。</li><li>ps：用于列出正在运行的进程，可以结合其他的选项来查看进程的详细信息，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">$ ps aux --sort=-%mem | head</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.1 225804 11356 ?        Ss   05:30   0:01 /sbin/init splash</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>以上命令都是在命令行环境下执行的。如果要图形化地查看系统内存使用情况，可以使用 GNOME 系统监视器（gnome-system-monitor）或 KDE 系统监视器（ksysguard）等工具，在图形化界面中方便地查看系统内存的使用情况和进程信息。</p><p>需要注意的是，当我们在 shell 中查看内存使用情况时，不要随意终止或杀死系统进程，否则可能会导致不可预估的后果。</p><h2 id="不安全的第三方组件的漏洞如何做前置规避？"><a href="#不安全的第三方组件的漏洞如何做前置规避？" class="headerlink" title="不安全的第三方组件的漏洞如何做前置规避？"></a>不安全的第三方组件的漏洞如何做前置规避？</h2><p>以下是一些规避不安全的第三方组件漏洞的前置方法：</p><ol><li>筛选可靠的第三方组件：在选择和采用第三方组件时，应该尽量选择那些经过广泛使用和审查、开源社区活跃、有明确维护计划等因素使人们信任的组件。此外还可以参考其他用户反馈、评测结果等对第三方组件进行评估。</li><li>定期更新组件版本：及时更新第三方组件以修复已知漏洞是很重要的。因此，需要定期检查并更新使用的第三方组件。</li><li>加强访问控制：为了防止黑客攻击通过不安全的第三方组件进入系统，需要加强访问控制，例如限制只有授权用户才能访问系统。</li><li>实施安全策略：实施相关的安全策略，如深度防御、安全审计等，以提高系统的安全性。</li><li>停用不必要的功能：如果某个第三方组件包含多个功能，但仅有部分功能被系统所用到，建议将未使用的功能关闭或移除，从而减少系统被攻击的风险。</li><li>使用漏洞扫描工具进行检测：使用漏洞扫描工具对系统中的第三方组件进行定期检测，及时发现已知漏洞并修复。</li></ol><p>需要注意的是，在前置规避不安全的第三方组件漏洞时，不能完全依赖于单一的措施。相反，应该采用多种手段来提高系统的安全性，从而避免被攻击者利用不安全的第三方组件漏洞进行攻击。</p><h2 id="Java-内存马排查有了解吗"><a href="#Java-内存马排查有了解吗" class="headerlink" title="Java 内存马排查有了解吗"></a>Java 内存马排查有了解吗</h2><p>Java内存马，也称为Java远程代码执行漏洞，是一种利用Java反序列化漏洞的攻击方式。攻击者可以通过构造恶意的序列化对象，将其发送给目标服务器并触发反序列化操作，从而在目标服务器上执行任意代码。以下是几种排查Java内存马的方法：</p><ol><li>追踪日志文件：如果系统已经被攻击，应该首先检查系统的日志文件，查找异常的请求或响应内容，并结合其他的信息确定是否存在Java内存马。</li><li>检查网络流量：可以使用Wireshark等网络抓包工具来监视服务器的网络流量，并分析报文中的数据内容，查找是否存在异常的Java序列化数据。</li><li>检查反序列化漏洞：Java内存马利用了Java反序列化漏洞，因此我们可以使用一些反序列化漏洞扫描工具（如 ysoserial）来检测系统是否受到这类漏洞的影响，并及时修补漏洞。</li><li>检查系统进程：Java内存马通常会在目标服务器上启动一个新的进程来执行恶意代码，因此可以通过检查系统进程列表，查找是否存在不明确的、异常的进程。</li><li>安装安全软件：为了更好地保障系统的安全性，可以安装一些专业的安全软件，如杀毒软件、入侵检测系统（IDS）等，并定期进行扫描和审计。</li></ol><p>需要注意的是，在排查Java内存马时，应该综合使用多种方法来确定是否存在此类攻击。同时也要及时修补系统漏洞，加强访问控制，并采取其他措施提高系统的安全性。</p><h2 id="如何修改-WEB-端口？如果不能修改端口还有什么利用方法？"><a href="#如何修改-WEB-端口？如果不能修改端口还有什么利用方法？" class="headerlink" title="如何修改 WEB 端口？如果不能修改端口还有什么利用方法？"></a>如何修改 WEB 端口？如果不能修改端口还有什么利用方法？</h2><p>要修改 WEB 端口，需要在 Web 服务器的配置文件中修改端口号。以下是一些常见的 Web 服务器的端口修改方式：</p><ol><li>Apache：找到 Apache 的 httpd.conf 配置文件，编辑 Listen 指令即可。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">Listen 8080</span><br></pre></td></tr></table></figure><ol><li>Nginx：找到 Nginx 的 nginx.conf 配置文件，编辑 http 模块下的 listen 指令即可。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    ...</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>Tomcat：找到 Tomcat 的 server.xml 配置文件，编辑 Connector 指令中的 port 属性即可。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">           connectionTimeout=&quot;20000&quot;</span><br><span class="line">           redirectPort=&quot;8443&quot; /&gt;</span><br></pre></td></tr></table></figure><p>如果不能修改端口，攻击者可能会尝试其他利用方法，如：</p><ol><li>尝试使用默认或者弱口令登录：许多 web 应用程序都有默认的用户名和密码，或者用户使用简单的密码。攻击者可以通过爆破等方式，尝试使用这些凭据登录系统。</li><li>利用已知漏洞进行攻击：攻击者可以通过利用已知的漏洞来攻击目标系统，例如，注入攻击、文件上传漏洞、跨站点脚本（XSS）漏洞等。</li><li>利用社工攻击：攻击者可以使用钓鱼邮件、欺诈电话等方式进行社交工程攻击，从而获得目标系统的访问凭据或者其他重要信息。</li></ol><p>为了防止这些攻击，我们应该采取一系列措施来加强系统安全。例如：</p><ol><li>使用复杂的密码和多因素身份验证，提高登录安全性。</li><li>及时更新软件版本和安全补丁，修复已知的漏洞。</li><li>限制访问权限，仅允许授权用户访问系统，并对不明来源的流量进行阻拦或监测。</li><li>部署入侵检测系统（IDS）或入侵防御系统（IPS），对入侵行为进行实时监测和防范。</li><li>定期进行漏洞扫描、安全审计等工作，及时发现并修补系统中存在的漏洞。</li></ol><h2 id="获得文件读取漏洞，通常会读哪些文件，Linux-和-windows-都谈谈"><a href="#获得文件读取漏洞，通常会读哪些文件，Linux-和-windows-都谈谈" class="headerlink" title="获得文件读取漏洞，通常会读哪些文件，Linux 和 windows 都谈谈"></a>获得文件读取漏洞，通常会读哪些文件，Linux 和 windows 都谈谈</h2><p>获得文件读取漏洞后，攻击者通常会尝试读取一些敏感信息，例如系统配置文件、数据库凭据、应用程序源代码等。以下是在 Linux 和 Windows 操作系统上，攻击者可能会尝试读取的一些文件：</p><ol><li>Linux</li></ol><ul><li>&#x2F;etc&#x2F;passwd：包含本地用户的账户信息。</li><li>&#x2F;etc&#x2F;group：包含用户组的信息。</li><li>&#x2F;etc&#x2F;shadow：保存本地用户密码哈希值的文件。</li><li>&#x2F;etc&#x2F;sudoers：保存 sudo 命令权限的文件。</li><li>&#x2F;proc&#x2F;net&#x2F;tcp：包含当前正在运行的 TCP 连接信息。</li><li>&#x2F;var&#x2F;log&#x2F;auth.log：包含系统中用户认证和授权的日志信息。</li><li>应用程序配置文件：攻击者可能会尝试读取应用程序的配置文件，以获取数据库连接字符串等信息。</li></ul><ol><li>Windows</li></ol><ul><li>C:\Windows\system32\config\SAM：包含本地账户的哈希密码值。</li><li>C:\Windows\system32\config\SYSTEM：包含系统的配置信息。</li><li>C:\inetpub\wwwroot\web.config：包含 IIS 网站的配置信息。</li><li>C:\Program Files (x86)\MySQL\MySQL Server 5.7\my.ini：包含 MySQL 数据库的配置信息。</li><li>C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys：包含机器级别的 RSA 密钥。</li><li>Event log 文件：攻击者可能会尝试读取操作系统事件日志文件，以查看系统的历史记录信息。</li><li>应用程序配置文件：攻击者可能会尝试读取应用程序的配置文件，以获取数据库连接字符串等信息。</li></ul><p>为了防止文件读取漏洞的攻击，我们可以采取以下一些措施：</p><ol><li>限制访问权限：在操作系统、应用程序和网站中，应该合理设置安全访问策略，并对敏感信息和文件进行严格的权限控制。</li><li>加密重要文件：对重要文件进行加密处理，防止黑客获取有效信息。</li><li>安装入侵检测系统（IDS）：使用 IDS 系统来监测系统内部和外部的攻击行为。</li><li>监控日志：对系统中产生的日志进行定期审计和监控，及时发现异常情况并采取相应的措施。</li><li>及时修补漏洞：定期检查和更新系统、应用程序和第三方库的版本，以修复已知的漏洞。</li></ol><h2 id="如何分析被代理出来的数据流"><a href="#如何分析被代理出来的数据流" class="headerlink" title="如何分析被代理出来的数据流"></a>如何分析被代理出来的数据流</h2><p>被代理出来的数据流通常是由代理服务器拦截并转发的，可以借助代理工具（如 Burp Suite）等工具来对数据流进行分析。以下是一些可能的分析方法：</p><ol><li>拦截和重放请求：在代理工具中，我们可以通过拦截请求，并对其做出修改，然后再次发送请求到目标服务器上，从而观察应用程序如何响应这些请求。</li><li>查看请求和响应头信息：在代理工具中，我们可以查看 HTTP 请求和响应头信息，包括 cookies、User-Agent 等，以了解应用程序的行为。</li><li>分析 HTTP 响应体：代理工具能够捕获 HTTP 响应体，并显示在工具界面中，我们可以查看应用程序返回的 HTML、JavaScript、CSS、图片等内容，以便了解应用程序的结构和行为。</li><li>查找敏感信息：代理工具可以对所有的 HTTP 流量进行记录和分析，我们可以通过搜索敏感信息来查找密码、凭据等敏感信息是否泄露。</li><li>使用插件进行分析：代理工具通常具有各种插件，例如 XSS 扫描器、SQL 注入扫描器、漏洞扫描器等，可以使用这些插件来检测应用程序中的漏洞和安全风险。</li></ol><p>需要注意的是，在进行数据流分析时，必须遵守法律和道德规范，不得盗取或滥用他人信息。同时，对于代理工具捕获的敏感信息，一定要妥善保护，避免泄露给未授权的人员。</p><h2 id="查看-windows-进程的方法有哪些"><a href="#查看-windows-进程的方法有哪些" class="headerlink" title="查看 windows 进程的方法有哪些"></a>查看 windows 进程的方法有哪些</h2><p>以下是查看 Windows 进程的几种方法：</p><ol><li>任务管理器：可以通过打开任务管理器来查看当前正在运行的进程。在 Windows 10 中，可以使用快捷键 Ctrl + Shift + Esc 来打开任务管理器；在其他版本的 Windows 中，可以使用 Ctrl + Alt + Delete 快捷键，然后选择“任务管理器”来打开。</li><li>命令行工具：可以使用命令行工具（如 cmd 或 PowerShell）来查看进程。在命令行中输入“tasklist”命令，即可列出当前正在运行的所有进程及其相关信息。</li><li>系统资源监视器：系统资源监视器是一个 Windows 内置的性能监控工具，可以查看系统的 CPU 使用率、内存占用率、磁盘和网络活动等信息。同时，它还提供了一个进程列表，可以显示每个进程的 CPU 使用率、内存占用情况等详细信息。</li><li>第三方工具：除了 Windows 自带的工具外，还有许多第三方工具可以用来查看进程，如 Process Explorer、Process Hacker 等。这些工具通常提供更加详细的进程信息，并允许用户对进程进行调试和管理。</li></ol><p>无论使用哪种方法，对于一些可疑的进程，我们应该及时采取相应的措施，例如杀死进程、禁止其自启动等。同时，我们还应该注意保护系统安全，避免恶意进程的入侵和攻击。</p><h2 id="如何查看进程对应的程序位置"><a href="#如何查看进程对应的程序位置" class="headerlink" title="如何查看进程对应的程序位置"></a>如何查看进程对应的程序位置</h2><p>在 Windows 操作系统中，可以通过以下几种方法查看进程对应的程序位置：</p><ol><li>使用任务管理器：打开任务管理器，选择“详细信息”选项卡，右键单击需要查看程序位置的进程，选择“打开文件位置”。</li><li>使用资源监视器：在资源监视器中，选择“CPU”选项卡，找到需要查看程序位置的进程，在右侧面板中选择该进程并右键单击，选择“属性”菜单，即可查看程序位置。</li><li>使用命令行工具：打开命令提示符或者 PowerShell，输入以下命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">wmic process where &quot;processid=[进程 ID]&quot; get ExecutablePath</span><br></pre></td></tr></table></figure><p>其中，[进程 ID]是需要查看的进程的 PID（进程标识符）。</p><ol><li>使用第三方工具：许多第三方工具（如 Process Explorer）提供了更加详细的进程信息，并可以帮助用户快速定位程序位置。</li></ol><p>无论使用哪种方法，我们都可以在查找到程序位置后，根据需要采取相应的措施。例如，为了解决某些问题，我们可能需要删除、备份或更新程序文件；而在排查安全问题时，我们可能需要检查程序文件是否被篡改或者感染了病毒。</p><h2 id="WAF-产品有哪些分类，是如何拦截攻击的"><a href="#WAF-产品有哪些分类，是如何拦截攻击的" class="headerlink" title="WAF 产品有哪些分类，是如何拦截攻击的"></a>WAF 产品有哪些分类，是如何拦截攻击的</h2><p>WAF（Web 应用程序防火墙）产品通常可以分为以下几种分类：</p><ol><li>基于签名的 WAF：基于签名的 WAF 通过检测请求中是否包含已知漏洞的特征，来拦截攻击。这种类型的 WAF 可以快速识别和阻止已知的攻击方式。</li><li>基于行为的 WAF：基于行为的 WAF 使用机器学习、人工智能等技术来分析请求的行为模式，并判断其是否具有攻击性。这种类型的 WAF 能够较好地识别未知攻击。</li><li>综合型 WAF：综合型 WAF 结合了基于签名和基于行为两种技术，能够同时检测已知攻击和未知攻击，提供更加全面的保护。</li></ol><p>WAF 产品一般通过拦截攻击请求来保护 Web 应用程序。具体的拦截方式包括：</p><ol><li>黑名单过滤：根据已知的攻击方式，设置黑名单规则，对符合规则的请求进行拦截。</li><li>白名单过滤：对请求进行白名单过滤，只允许符合规则的请求通过。</li><li>存储过程注入防护：对 SQL 注入进行防护。WAF 可以检测并拦截具有攻击意图的 SQL 语句，并对其进行相应的修复和防护。</li><li>跨站脚本（XSS）防护：WAF 可以检测并过滤包含恶意 JavaScript 代码的请求，并防止 XSS 攻击。</li><li>防止文件上传漏洞：WAF 可以检测并拦截包含恶意文件的请求，从而避免文件上传漏洞导致的攻击。</li></ol><p>总之，WAF 产品可以有效地保护 Web 应用程序免受各种类型的攻击。但是需要注意的是，WAF 并不是万能的，仍然需要结合其他安全措施来保障 Web 应用程序的安全。</p><h2 id="你有用过态势感知的产品吗？"><a href="#你有用过态势感知的产品吗？" class="headerlink" title="你有用过态势感知的产品吗？"></a>你有用过态势感知的产品吗？</h2><ol><li>360态势感知：由中国著名安全厂商360推出的产品，主要提供网络威胁查询、漏洞扫描、流量分析等功能，同时集成了各种安全情报和指标，可以为用户提供全面的安全态势分析和预警服务。</li><li>腾讯云安全大脑：由腾讯云推出的产品，利用 AI、机器学习等技术对攻击进行实时监测和分析，提供包括漏洞扫描、风险评估、异常检测等一系列安全服务。</li><li>云锁事件响应中心：由阿里云推出的产品，提供网络空间威胁和安全事件的监测、预警、应急响应等服务。该产品采用 AI 算法进行态势感知，并可以自动化响应安全事故。</li><li>北京赛迪态势感知系统：由北京赛迪安全科技股份有限公司开发的产品，支持网络威胁情报搜集、风险事件自动识别、威胁行为关联分析等功能，可为企业提供全生命周期的网络安全保护。</li><li>启明星辰安全态势感知：由启明星辰推出的产品，提供整体安全态势感知、针对性攻击检测、应急响应等功能，可帮助用户实现从被动防御到主动防御的转变。</li></ol><p>这些产品都采用了先进的机器学习和人工智能技术，可以自动化地分析和识别网络威胁，并及时发出预警或者采取应急措施。同时，这些产品还具备可视化的操作界面，用户可以通过简单的操作就可以了解整个系统的安全情况，并做出相应的决策。</p><h2 id="什么是跨域，JSONP-与-CORS"><a href="#什么是跨域，JSONP-与-CORS" class="headerlink" title="什么是跨域，JSONP 与 CORS"></a>什么是跨域，JSONP 与 CORS</h2><p>在 Web 开发中，跨域（Cross-Origin）指的是当一个 web 应用程序在访问另一个与其来源（协议、域名或端口号）不同的 web 应用程序时所发生的浏览器安全限制。这种限制可以防止非法的数据窃取和恶意代码的注入，从而保障了用户的信息安全。</p><p>为了解决跨域问题，Web 安全领域出现了两种常见的技术：JSONP 和 CORS。</p><ol><li>JSONP：JSONP（JSON with Padding）是一种跨域请求数据的方式，原理是通过在 HTML 页面上使用 script 标签加载远程 JSON 数据，并通过回调函数处理获取到的数据。这种方式可以绕过浏览器的同源策略，但只支持 GET 请求。</li><li>CORS：CORS（Cross-Origin Resource Sharing）是在服务器端设置允许跨域请求的机制。它通过在 HTTP 头信息中添加一些字段来告诉浏览器该服务器允许哪些域名的请求。CORS 可以支持各种类型的 HTTP 请求，并且比 JSONP 更加灵活和安全。</li></ol><p>总之，无论是 JSONP 还是 CORS，都是为了解决跨域问题而设计的技术。开发人员可以根据自己的需求来选择适合自己的方式，并结合安全考虑进行使用。同时，为了保护用户的信息安全，在使用跨域技术时，需要特别注意对传输数据的加密和防篡改措施。</p><h2 id="如何发现钓鱼邮件"><a href="#如何发现钓鱼邮件" class="headerlink" title="如何发现钓鱼邮件"></a>如何发现钓鱼邮件</h2><p>钓鱼邮件是一种常见的网络针对性攻击手段，通常通过电子邮件发送虚假信息诱骗受害者提供个人敏感信息或进行非法行为。以下是几种发现钓鱼邮件的方法：</p><ol><li>查看发件人地址：钓鱼邮件的发件人地址通常会伪装成合法、可信的机构或公司，但是如果您仔细查看发件人地址，就可能发现其不是该机构或公司真正的域名。</li><li>检查链接地址：钓鱼邮件中通常会包含可疑的链接，如果您将鼠标悬停在链接上，就可以看到链接的真实地址。如果该地址与邮件内容不符，就可能是钓鱼邮件。</li><li>注意邮件内容：钓鱼邮件通常会给人留下一种紧急、必须立即采取行动的感觉，从而诱骗用户点击链接或执行某些操作。因此，如果您收到这样的邮件，请仔细阅读邮件内容，并多加思考和确认。</li><li>尽量避免下载附件：钓鱼邮件通常会携带恶意附件，如果您无法确认邮件的真实性，最好不要下载或打开这些附件，以免被感染。</li><li>安装反钓鱼软件：有一些反钓鱼软件可以帮助用户检测和拦截钓鱼邮件，例如 Google 的 Password Alert 等。</li></ol><p>总之，发现钓鱼邮件需要多加警惕和注意，在收到可疑邮件时，应该仔细查看邮件内容和相关信息，并尽可能采取措施避免被钓鱼攻击。</p><h2 id="如何查看区分是扫描流量和手动流量"><a href="#如何查看区分是扫描流量和手动流量" class="headerlink" title="如何查看区分是扫描流量和手动流量"></a>如何查看区分是扫描流量和手动流量</h2><p>扫描流量和手动流量的区别在于其产生的方式和行为特征，因此可以通过以下几种方法来查看区分它们：</p><ol><li>查看流量来源：扫描流量通常是由自动化工具或蠕虫病毒等程序生成的，因此其源 IP 或者发起请求的主机通常不固定，而手动流量则来自人工操作的设备，其请求的 IP 地址和用户代理信息都会有所不同。</li><li>检测流量频率和规律：扫描流量通常会呈现出周期性、规律性的访问行为，例如连续大量的 TCP SYN 请求等。而手动流量则通常难以呈现出明显的规律和周期性。</li><li>观察流量的请求路径和参数：扫描流量通常是为了探测系统漏洞和弱点而产生的，它们通常会对一些已知的 URL 和参数进行大量的尝试，并使用一些特殊的 HTTP 头部信息。而手动流量则更加多样化，可能会包含更丰富的请求路径和参数。</li><li>分析流量的响应状态码和长度：扫描流量通常会通过检测返回的状态码和页面长度等信息来判断目标是否存在漏洞或弱点。手动流量则通常会具有更加正常的响应状态码和页面长度。</li></ol><p>总之，通过综合分析流量来源、访问规律、请求路径和参数以及响应状态码等特征，我们可以比较准确地区分扫描流量和手动流量，并采取相应的防御措施。</p><h2 id="遇到-exe-文件如何处理？"><a href="#遇到-exe-文件如何处理？" class="headerlink" title="遇到.exe 文件如何处理？"></a>遇到.exe 文件如何处理？</h2><p>.exe 文件是 Windows 上的可执行文件，通常包含应用程序或者安装程序等内容。如果您在电子邮件或者网络上收到了 .exe 文件，需要格外小心，因为它们可能包含病毒、恶意软件或者其他危险物品。以下是几种处理方法：</p><ol><li>不要直接运行：不要轻易双击或者打开未知来源的 .exe 文件，因为它们可能会启动恶意软件，并对您的系统造成损害。如果您必须要运行这些 .exe 文件，请先进行杀毒软件扫描和检测操作。</li><li>使用虚拟机：如果您需要测试某个 .exe 文件的行为和效果，可以考虑使用虚拟机。虚拟机可以将一个完整的操作系统运行在一个软件容器中，使得用户可以在其中安全地运行可疑的 .exe 文件，并且不会影响主机系统的安全性。</li><li>上传到在线扫描服务平台：一些在线杀毒软件平台，例如 VirusTotal 等，提供了在线扫描可疑文件的服务。如果您不确定一个 .exe 文件是否安全，可以上传到这些平台进行扫描，以获取更多的信息和建议。</li><li>将文件发送给安全专家：如果您无法确定 .exe 文件的安全性，可以将其发送给安全专家进行分析。安全专家可以根据其行为特征和结构等信息，对该文件进行深度分析，以确定是否存在潜在的安全威胁。</li></ol><p>总之，在处理未知来源的 .exe 文件时，需要注意谨慎并采取必要的安全措施，以确保您的系统不会被攻击或感染。如果您遇到可疑的 .exe 文件，请务必进行杀毒软件扫描，并尽可能获取更多的信息和建议。</p><h2 id="应急响应的排查思路？"><a href="#应急响应的排查思路？" class="headerlink" title="应急响应的排查思路？"></a>应急响应的排查思路？</h2><p>应急响应的排查思路主要包括以下几个方面：</p><ol><li>确认事件：首先需要了解事件的具体情况，包括发生的时间、影响范围、受影响的系统和服务等信息。同时还需要判断是否存在钓鱼邮件、病毒感染等情况，以确定是否存在网络安全事件。</li><li>收集证据：在确认安全事件后，需要及时收集相关证据，包括日志记录、网络流量、进程信息、文件系统状态等信息，并进行存档备份。这些证据可以为后续的分析提供依据。</li><li>分析数据：对收集到的证据进行分析，尤其是日志和网络流量等数据，可以帮助快速定位问题和确认是否存在攻击行为。在分析过程中，可以利用一些常见的工具，例如 Wireshark、Nmap、Sysinternals 等。</li><li>阻止攻击：在确认存在攻击行为后，需要立即采取措施，阻止攻击并保护现有系统。这些措施包括封锁网络、隔离受感染主机、关闭漏洞等。</li><li>制定应急计划：根据分析结果，制定相应的应急计划，确保系统能够迅速恢复正常的运行状态。应急计划应该包括恢复数据、修复漏洞、加强安全防御等方面。</li></ol><p>总之，应急响应排查思路需要遵循快速响应、收集证据、分析数据、阻止攻击和制定应急计划等原则，并且需要依靠专业的技能和工具来实现。在实际操作中，需要小心谨慎，同时保持高度警惕和敏锐性。</p><h2 id="普通的加固手段？"><a href="#普通的加固手段？" class="headerlink" title="普通的加固手段？"></a>普通的加固手段？</h2><p>普通的加固手段包括以下几种：</p><ol><li>更新补丁：定期更新操作系统、应用程序的补丁，修复已知的漏洞和安全问题。</li><li>强化口令策略：采用复杂、难以猜测的密码，并进行定期更换。同时可以启用账户锁定、多次失败尝试限制等功能，提高口令安全性。</li><li>加强身份验证：采用多因素身份验证技术，例如使用硬件令牌、生物特征等方式，确保只有授权用户才能访问系统。</li><li>安装防病毒软件：安装并及时更新防病毒软件，定期进行全盘扫描和实时监控，以便及时发现和处置潜在的恶意软件。</li><li>关闭不必要服务：关闭系统中不必要的服务和端口，降低攻击面，避免被利用。</li><li>限制访问权限：根据业务需要，设置合理的访问权限，对于未授权的用户或者设备进行限制，提高系统的安全性。</li><li>数据备份与恢复：定期备份重要数据，并将其存储在安全可靠的位置。在出现故障或事件时，能够快速恢复数据，避免数据丢失和系统停机。</li></ol><p>总之，以上这些普通的加固手段可以帮助提高系统的安全性和稳定性，并且也是网络安全基础建设的关键步骤。在实际操作中，需要根据具体情况和需求，结合其他安全措施来进行综合加固。同时需要注意及时更新和检查，以确保系统始终处于安全状态。</p><h2 id="redis未授权的条件，修复方式？"><a href="#redis未授权的条件，修复方式？" class="headerlink" title="redis未授权的条件，修复方式？"></a>redis未授权的条件，修复方式？</h2><p>Redis 未授权访问是指某些 Redis 实例的访问控制没有得到正确配置，导致攻击者可以通过不需要认证的方式直接连接该实例并进行操作。这可能会导致敏感数据泄露、系统被攻击等安全问题。</p><p>修复 Redis 未授权访问的方式包括以下几个步骤：</p><ol><li>确认是否存在未授权访问：通过检查日志和网络流量等信息，确认是否存在未授权访问的情况。</li><li>修改 Redis 配置文件：在 redis.config 配置文件中，找到 bind 参数并将其设置为 Redis 监听的 IP 地址。此外，还需要设置 requirepass 参数，并设置一个强密码来保护 Redis 数据库。</li><li>重新启动 Redis 服务：在修改完 Redis 配置文件后，需要重新启动 Redis 服务，以便使新的配置生效。</li><li>禁用 Redis 远程访问：如果您的 Redis 服务只在本地使用，则应禁用 Redis 的远程访问，以降低攻击面和提高安全性。</li><li>定期更新 Redis 和操作系统补丁：及时更新 Redis 和操作系统的安全补丁，以修复已知漏洞和提高系统安全性。</li></ol><p>总之，在修复 Redis 未授权访问时，我们需要先确认是否存在未授权访问的情况，然后按照上述步骤进行修复。为了保证系统安全，我们还需要经常检查 Redis 配置文件和操作系统状态，及时更新补丁，并定期进行安全审计和漏洞扫描等操作。</p><h2 id="被攻击后，日志文件以及木马文件被删除怎样排查"><a href="#被攻击后，日志文件以及木马文件被删除怎样排查" class="headerlink" title="被攻击后，日志文件以及木马文件被删除怎样排查"></a>被攻击后，日志文件以及木马文件被删除怎样排查</h2><p>被攻击后，日志文件和木马文件被删除会给排查工作带来很大的困难，但还是有一些方法可以尝试：</p><ol><li>查看系统备份：如果您的系统进行了定期备份，那么可以尝试从备份中恢复丢失的日志文件和木马文件。如果备份没有受到攻击，那么这种方式可能会非常有效。</li><li>恢复已删除文件：一些数据恢复软件，例如Recuva、EaseUS Data Recovery等，可以恢复已删除的文件。您可以尝试使用这些软件来恢复被删除的文件。</li><li>检查其他主机：如果您的系统被集成到网络中，可以检查其他主机是否有相同的攻击迹象和后门程序。对于攻击者来说，攻击多台主机通常需要更多的时间和资源，因此在其他主机上发现类似的攻击行为也许能够提供有用的信息。</li><li>分析系统快照：如果您的系统支持系统快照功能，例如 Windows 系统还原点，可以尝试回滚系统至之前的快照状态，并分析该状态下的日志信息和系统状态，以寻找攻击行为的证据。</li><li>日志审计：如果日志文件被删除，可以尝试通过其他渠道收集日志信息，并进行审计分析。例如，可以检查网络流量、系统性能、系统进程等信息，以确定是否存在异常行为。</li></ol><p>总之，在日志文件和木马文件被删除的情况下，需要采用其他方法来寻找攻击迹象和证据。同时，为了避免这种情况的发生，我们应该在系统中设置必要的日志轮转和备份策略，并加强安全防御工作，避免被攻击者入侵。</p><h2 id="安全设备报警"><a href="#安全设备报警" class="headerlink" title="安全设备报警"></a>安全设备报警</h2><p>安全设备报警是指安全设备（例如入侵检测系统、防火墙、安全加固等）监测到的与安全相关的事件或活动达到了预先设定的规则和阈值，触发了警报通知。以下是一些处理安全设备报警的方法：</p><ol><li>确认警告的真实性：首先需要确认收到的警报信息是否为真实的安全事件，需要对日志和其他相关信息进行分析和验证。如果发现确实存在安全问题，则需要立即采取适当措施。</li><li>优先级分类：不同类型的安全事件具有不同的严重程度和威胁级别，需要根据事件的类型、来源等因素进行分类和优先级排序，并采取相应的措施进行处理。</li><li>制定处理计划：根据事件情况和优先级，制定相应的处理计划和操作流程。这些计划可以包括隔离受感染主机、采取补救措施、收集证据等方面。</li><li>跟踪事件进展：在处理安全事件时，需要跟踪事件的进展和结果，并及时更新相关记录和文档。同时要保持与相关人员的沟通和协调，以便及时解决问题。</li><li>定期复查：定期审查和分析系统和设备的报警记录和日志，以及采取的应对措施和效果。这可以帮助发现系统中存在的风险和漏洞，并及时加以修复和优化。</li></ol><p>总之，在处理安全设备报警时，需要快速响应、分类优先、制定计划等步骤，以保障系统的安全性，并且需要持续地监测和优化安全防御策略。</p><h2 id="日志与流量分析"><a href="#日志与流量分析" class="headerlink" title="日志与流量分析"></a>日志与流量分析</h2><p>日志和流量分析是网络安全领域中常用的两种技术。它们都可以帮助安全人员更好地了解系统的状态，检测和预防威胁。</p><p>日志分析是指对服务器、应用程序等产生的日志进行收集、存储、分析和处理，以便了解系统的运行状况和发现异常事件。通过对日志数据的统计和分析，可以追踪用户活动、系统错误、安全事件等，以及发现潜在的风险和漏洞。比如，通过分析登录日志可以检测到恶意登录尝试；通过分析访问日志可以了解网站的被攻击情况。</p><p>流量分析是指对网络流量进行收集、存储、分析和处理，以便了解网络连接的状态，检测和预防网络攻击。通过对流量数据的统计和分析，可以追踪网络通信、检测威胁和漏洞，比如检测恶意流量、DDoS攻击等。流量分析通常需要使用专业的工具和技术，包括网络协议分析、流量捕获和分析软件等。</p><p>综上所述，日志和流量分析是网络安全中非常重要的技术，它们可以帮助安全人员发现和解决潜在的安全问题，并维护系统和网络的正常运行。</p><h2 id="服务器资源异常"><a href="#服务器资源异常" class="headerlink" title="服务器资源异常"></a>服务器资源异常</h2><ol><li>检查服务器负载情况：使用系统监视工具（如top、htop或glances等）来检查服务器的负载状况。如果负载过高，请考虑升级服务器资源或调整应用程序配置。</li><li>清理硬盘空间：如果硬盘空间不足，可以删除不必要的文件和日志，或者将它们移到其他存储设备上。</li><li>优化数据库：如果您的应用程序使用了数据库，可以尝试优化数据库以提高性能和减少资源使用。</li><li>减少并发连接数：如果您的应用程序支持并发连接，可以考虑限制同时连接的数量，从而减轻服务器压力。</li><li>升级服务器硬件：如果您的服务器硬件过时，升级服务器硬件可能是一个好选择。</li></ol><p>这里列出的是一些常见的解决方法，但具体应该根据您的问题和实际情况进行分析和处理。</p><h2 id="邮件钓鱼"><a href="#邮件钓鱼" class="headerlink" title="邮件钓鱼"></a>邮件钓鱼</h2><p>邮件钓鱼是一种利用欺骗手段获取用户敏感信息（如用户名和密码）的网络攻击。以下是一些防范邮件钓鱼的措施：</p><ol><li>仔细检查发件人和链接：在打开或回复任何邮件之前，请确保发件人地址是正确的，并且不要点击任何可疑的链接。</li><li>不要泄露敏感信息：请不要在电子邮件中提供敏感信息，例如您的用户名、密码或银行卡号码等。</li><li>使用邮件过滤器：许多电子邮件服务提供商都有垃圾邮件和恶意软件过滤器，可以帮助防止钓鱼邮件进入您的收件箱。</li><li>使用双因素身份验证：如果可能的话，请使用双因素身份验证来增强账户安全性。</li><li>教育员工：对于企业来说，教育员工如何识别和应对钓鱼邮件至关重要，这将有助于减少安全风险。</li></ol><p>总之，防范邮件钓鱼需要我们保持警惕，小心处理邮件，避免泄露敏感信息，使用合适的安全工具，加强安全意识培训。</p><h2 id="蜜罐系统"><a href="#蜜罐系统" class="headerlink" title="蜜罐系统"></a>蜜罐系统</h2><p>蜜罐系统是一种安全防御技术，它通过模拟真实系统和应用程序环境来诱导攻击者进行攻击，以便收集攻击者的行为信息并保护真实系统免受攻击。</p><p>蜜罐系统通常包括以下组件：</p><ol><li>虚拟机：虚拟机用于运行蜜罐操作系统和应用程序，并提供与真实系统类似的环境。</li><li>模拟应用程序：模拟应用程序模拟真实应用程序的功能，但同时也被设计成易受攻击的。</li><li>监听器：监听器负责记录攻击者的所有行为，例如攻击方式、攻击目标、攻击时间等。</li><li>分析器：分析器负责对监听器收集到的数据进行分析，并生成相关的报告。</li></ol><p>使用蜜罐系统可以帮助安全团队更好地了解攻击者的行为和策略。此外，当攻击发生时，蜜罐系统还可以吸引攻击者并分散他们的注意力，从而降低真实系统遭受攻击的风险。</p><p>但需要注意的是，使用蜜罐系统也存在一些风险，如攻击者可能会利用蜜罐系统来了解防御策略和安全漏洞，因此在使用蜜罐系统时需要谨慎评估其风险和收益。</p><h2 id="溯源反制手段"><a href="#溯源反制手段" class="headerlink" title="溯源反制手段"></a>溯源反制手段</h2><p>溯源反制手段是指在网络攻击发生后，对攻击来源进行追踪和分析，以便采取相应的反制措施。以下是一些常见的溯源反制手段：</p><ol><li>IP地址追踪：通过IP地址追踪可以确定攻击者的地理位置和ISP信息等，并且可以将这些信息提供给执法机构进行调查和追诉。</li><li>系统日志分析：系统日志记录了系统的所有活动信息，包括用户登录、访问权限、进程启动等。通过对系统日志的分析，可以了解攻击的时间、方式和攻击者可能留下的痕迹。</li><li>恶意软件分析：恶意软件通常会留下特定的标志或指令，这些标志或指令可以帮助分析人员了解攻击者的目的和策略。通过分析恶意软件，还可以发现其它潜在的安全威胁。</li><li>威胁情报分析：威胁情报分析可以帮助判断攻击者的目的和策略，并可以收集针对特定攻击的信息和反制策略。</li><li>电子邮件头分析：邮件头中包含了一些关于发送方和接收方的信息，例如IP地址、电子邮件客户端类型等。通过分析邮件头，可以确定攻击者的来源和行踪。</li></ol><p>总之，在进行溯源反制时，需要综合运用多种手段，从多个角度收集信息，并对这些信息进行深入分析，以便更好地了解攻击的情况，采取相应的反制措施。</p><h2 id="通过wireshark工具如何对流量进行溯源？"><a href="#通过wireshark工具如何对流量进行溯源？" class="headerlink" title="通过wireshark工具如何对流量进行溯源？"></a>通过wireshark工具如何对流量进行溯源？</h2><p>Wireshark是一个网络抓包工具，可以捕获和分析网络流量。以下是使用Wireshark工具对流量进行溯源的步骤：</p><ol><li>打开Wireshark软件并开始捕获网络流量。</li><li>过滤出需要关注的数据包。例如，如果要寻找某个IP地址的流量，可以在Wireshark中使用过滤器“ip.addr &#x3D;&#x3D; [目标IP地址]”来过滤出相关数据包。</li><li>找到涉及目标IP地址的数据包，并分析它们。可以查看数据包的详细信息，例如源IP地址、目标IP地址、端口号、协议类型等，以获取更多有关攻击者的信息。</li><li>根据数据包的来源IP地址和端口号，确定攻击者可能所在的网络或主机。可以通过WHOIS查询来了解更多信息，例如注册人姓名、电子邮件地址、电话号码等。</li><li>对数据包进行深入分析，以判断是否存在恶意活动。例如，检查数据包中传输的文件是否被感染，或者检查是否存在异常流量或频繁的连接尝试等。</li></ol><p>总之，通过Wireshark工具对流量进行溯源需要我们认真观察和分析数据包，尤其需要关注目标IP地址和涉及该地址的数据包，从多个角度收集信息，以便更好地了解攻击的情况，并采取相应的反制措施。</p><h2 id="如何定位到攻击-IP"><a href="#如何定位到攻击-IP" class="headerlink" title="如何定位到攻击 IP"></a>如何定位到攻击 IP</h2><p>为了定位到攻击IP，您可以跟随以下步骤：</p><ol><li>收集攻击事件的日志信息：首先，您需要获取与攻击相关的日志信息。这可能包括服务器、网关或IDS&#x2F;IPS设备等的日志文件。检查这些日志文件以查看攻击事件的详细信息。</li><li>确定攻击类型：根据攻击日志信息，确定攻击类型，例如DDoS攻击、SQL注入等。</li><li>使用网络嗅探工具：您可以使用像Wireshark这样的网络嗅探工具来捕获和分析网络流量。通过分析数据包，您可以确定攻击流量的来源IP地址。</li><li>分析网络流量：对分析出的流量进行深入分析，查找异常流量特征。例如，您可以检查是否有大量流量来自同一IP地址或者是否有许多连接尝试来自相同的IP地址。</li><li>使用WHOIS查询：使用WHOIS查询可以帮助您查找IP地址归属地和注册人信息，以便更好地了解攻击者的位置和身份。</li><li>采取反制措施：最后，根据收集到的信息，确定攻击者的IP地址，并采取相应的反制措施，例如在防火墙中添加黑名单规则或使用安全设备来抵御攻击。</li></ol><p>需要注意的是，攻击者可能会使用虚假或伪造的IP地址来掩盖自己的身份和位置。在这种情况下，您可能需要使用其他技术手段来确定攻击者的真实来源。</p><h2 id="常用取证工具有哪些"><a href="#常用取证工具有哪些" class="headerlink" title="常用取证工具有哪些"></a>常用取证工具有哪些</h2><p>常用的取证工具包括：</p><ol><li>FTK（Forensic Toolkit）：一款全面的数字取证工具，可以获取、分析和报告各种数字数据。</li><li>EnCase：一款商业化的取证工具，广泛应用于执法机构和企业中。</li><li>X-Ways Forensics：一款功能强大的取证工具，可以解析多种文件系统和磁盘映像格式。</li><li>Autopsy：一个免费的开源取证工具，可以帮助用户快速识别证据并生成相应的报告。</li><li>Volatility Framework：一个基于内存取证的工具，可以提取运行中操作系统的进程、内核模块和网络连接等信息。</li><li>Wireshark：一款流量分析工具，可以捕获和分析网络数据包，并对其进行深入的分析。</li><li>Forensic Browser for SQLite：一款专门用于SQLite数据库的取证工具，可以查看、搜索和导出SQLite数据库中的数据。</li></ol><p>这些工具都有各自的优缺点和适用场景，根据实际需求选择合适的工具很重要。</p><h2 id="溯源的常见手法？"><a href="#溯源的常见手法？" class="headerlink" title="溯源的常见手法？"></a>溯源的常见手法？</h2><p>数字溯源是指通过分析数字证据，追踪和还原事件或活动的发生过程和轨迹。常见的溯源手法包括：</p><ol><li>网络日志溯源：根据网络日志记录来追踪网络活动的来源、目的地和传输路径。</li><li>数据库溯源：通过对数据库中数据修改、删除和查询等操作的记录，还原出相关事件的发生过程。</li><li>软件代码溯源：通过对软件代码进行逆向分析，确定软件的功能、用途和开发者信息。</li><li>文件元数据溯源：通过分析文件元数据（如文件创建时间、修改时间和所有者信息等），确定文件的来源和修改历史。</li><li>实体设备溯源：通过物理取证、数据提取和分析，还原数字设备被使用的历史记录和活动轨迹。</li></ol><p>综合运用这些溯源手法，可以有效地追踪和还原数字活动的整个过程，为刑事侦查、安全审计和企业风险管理等领域提供重要支持。但值得注意的是，数字溯源需要遵守严格的法律程序和规范，并尊重用户的隐私权和数据保护要求。</p><h2 id="如何封ip"><a href="#如何封ip" class="headerlink" title="如何封ip"></a>如何封ip</h2><p>封禁IP是指通过防火墙或其他网络安全设备，阻止某个IP地址对网络资源进行访问。封禁IP可以有效地防止恶意攻击、网络滥用和非法访问等问题，保护网络安全。</p><p>以下是封禁IP的一般步骤：</p><ol><li>登录防火墙或其他网络安全设备，进入配置界面。</li><li>找到IP过滤规则或黑名单功能，添加封禁规则。</li><li>在规则中填写要封禁的IP地址或IP地址段。</li><li>设置封禁的时间或持续期限（如永久封禁或暂时封禁）。</li><li>保存设置并生效，检查是否成功封禁目标IP。</li></ol><p>需要注意的是，在封禁IP之前，应该确认被封禁的IP确实存在安全问题，并遵守相应的法律和政策规定，以免误伤合法用户和引发纠纷。同时，应该及时监控封禁效果，并在必要的情况下进行调整和解除封禁。</p><h2 id="sql注入产生的原因是什么"><a href="#sql注入产生的原因是什么" class="headerlink" title="sql注入产生的原因是什么"></a>sql注入产生的原因是什么</h2><p>SQL注入是一种攻击技术，它利用应用程序没有正确过滤或转义用户输入的数据，导致恶意用户可以向应用程序的后台数据库中插入恶意代码。这通常是因为应用程序没有有效地验证和处理用户输入数据，从而允许攻击者在输入框中输入特定的字符或语句，以绕过应用程序的安全性措施。</p><p>例如，如果一个应用程序允许用户在登录时输入用户名和密码，但没有正确地过滤输入的数据，那么攻击者可以尝试在用户名或密码字段中输入SQL查询的一部分，从而绕过身份验证，甚至执行任意的数据库操作。</p><p>因此，要防止SQL注入攻击，应用程序需要对所有用户输入进行严格的验证和处理，以确保任何输入的数据都被正确地过滤、转义或编码，从而避免可能导致注入攻击的特殊字符或语句被传递到数据库服务器。</p><h2 id="sql注入怎么修复"><a href="#sql注入怎么修复" class="headerlink" title="sql注入怎么修复"></a>sql注入怎么修复</h2><p>修复SQL注入漏洞的主要方法之一是使用参数化查询。这种技术可以将用户输入作为参数传递给数据库查询，而不是将其拼接到查询字符串中。通过这种方式，应用程序可以避免恶意用户在输入中注入任何SQL代码。</p><p>另一个修复SQL注入漏洞的方法是对输入数据进行严格的验证和过滤。这需要开发人员仔细检查所有用户输入数据，并确保它们只包含有效的字符和格式。例如，如果一个输入字段只接受数字，则必须验证输入是否仅包含数字，并拒绝包含其他字符的输入。</p><p>最后，还可以使用安全的编程实践来保护应用程序免受SQL注入攻击。这包括限制应用程序的权限以及使用加密和身份验证等安全措施来保护数据库服务器和应用程序。</p><p>总之，修复SQL注入漏洞的关键是开发人员需要了解并理解如何处理用户输入，并采取必要的措施来确保输入数据的完整性和安全性。</p><h2 id="xss是什么"><a href="#xss是什么" class="headerlink" title="xss是什么"></a>xss是什么</h2><p>XSS（Cross-site scripting）是一种攻击技术，也是Web应用程序中最常见的漏洞之一。它利用了应用程序没有正确过滤或转义用户输入的数据，导致恶意用户可以向网站上注入恶意脚本代码，使其他用户在浏览网站时受到攻击。</p><p>XSS攻击通常发生在包含表单、搜索框和评论框等用户输入区域的Web页面上。攻击者会向这些输入框中插入包含恶意脚本代码的数据，以便当其他用户在访问该页面时执行这些恶意代码，从而实现攻击目的。</p><p>例如，如果一个在线购物网站没有对用户在评论框中输入的HTML代码进行过滤，那么攻击者可以通过在评论框中注入恶意JavaScript代码来窃取其他用户的登录凭证或个人信息。</p><p>因此，要防止XSS攻击，开发人员需要对所有用户输入进行严格的验证和处理，并对任何输入的数据进行必要的过滤和转义，以确保所有输入的数据都不能被解释为恶意脚本。此外，还可以使用安全的编程实践和安全框架来保护网站免受XSS攻击的危害。</p><h2 id="xss攻击如何防御"><a href="#xss攻击如何防御" class="headerlink" title="xss攻击如何防御"></a>xss攻击如何防御</h2><p>为了防止XSS攻击，开发人员可以采用以下措施：</p><ol><li>输入过滤和验证：对于用户输入的数据进行严格的过滤和验证，只允许输入必要的字符和格式，并拒绝不受支持的HTML、CSS或JavaScript代码。</li><li>输出编码和转义：在将任何用户输入输出到Web页面上之前，请确保对其进行编码和转义，以确保它们不会被解释为恶意脚本。例如，在输出HTML时，可以使用HTML实体编码将特殊字符（如&lt;、&gt;、&amp;）转换为等效的字符实体。这样可以避免浏览器将它们解释为HTML标签或JavaScript代码。</li><li>使用安全框架和库：许多Web应用程序框架和安全库提供了内置的XSS防御机制，例如跨站点请求伪造（CSRF）令牌和自动输出编码。使用这些框架和库可以大大减少XSS攻击的风险。</li><li>学习安全编程实践：开发人员应该学习并遵循安全编程实践，例如安全的HTTP头设置、HTTPS使用、安全的Cookie管理等。</li><li>定期漏洞扫描和修复：定期运行漏洞扫描工具来检测网站中的潜在XSS漏洞，并及时修复这些漏洞，以避免遭受攻击。</li><li>加强用户教育：通过向用户提供安全意识培训和提示，可以帮助他们了解如何保护自己不受XSS攻击的危害，例如不点击垃圾邮件中的链接，不下载未经验证的文件等。</li></ol><h2 id="ssrf是什么"><a href="#ssrf是什么" class="headerlink" title="ssrf是什么"></a>ssrf是什么</h2><p>SSRF（Server-side Request Forgery，服务端请求伪造）是一种攻击技术，攻击者通过在受害者服务器上执行恶意代码，使该服务器对指定的目标URL发起网络请求。这种攻击通常利用了开发人员在编写Web应用程序时没有正确处理用户输入数据的漏洞，例如将用户提供的URL参数直接传递给后台服务器而没有做任何验证。</p><p>在SSRF攻击中，攻击者可以欺骗Web应用程序向其他服务器发送HTTP请求，例如内部服务器、本地网络资源或公共Web API等。攻击者还可以使用SSRF攻击来绕过防火墙保护，访问内部系统，并执行未授权的操作，例如读取机密数据、修改配置文件或上传恶意文件等。</p><p>为了避免SSRF攻击，开发人员需要采取以下措施：</p><ol><li>对所有输入进行严格的验证和过滤：开发人员在编写Web应用程序时应对所有输入数据进行严格的验证和过滤，以确保不会将任何恶意代码或非法请求发送到受害者服务器。</li><li>使用白名单：开发人员可以使用白名单技术限制应用程序仅向可信的服务器发送请求，例如内部服务器或特定的Web API。</li><li>限制服务器端请求发出范围： 在服务器上的Web应用程序必须限制服务器端请求的发出范围，例如通过禁止或限制特定的协议、域名或IP地址，以避免攻击者可以利用SSRF漏洞来发送恶意请求。</li><li>防火墙保护：使用防火墙的隔离技术可帮助防止恶意代码和非法请求进入Web应用程序，并限制其对其他系统的访问。</li></ol><h2 id="ssrf和csrf的区别"><a href="#ssrf和csrf的区别" class="headerlink" title="ssrf和csrf的区别"></a>ssrf和csrf的区别</h2><p>SSRF（Server-side Request Forgery，服务端请求伪造）和CSRF（Cross-site Request Forgery，跨站请求伪造）是两种不同的攻击类型，它们主要的区别在于攻击的目标和方式。</p><p>SSRF攻击是一种通过欺骗服务器来发送恶意请求的攻击技术，攻击者利用服务器上的漏洞进行攻击，并使服务器对指定的目标URL发起网络请求，从而达到恶意操作的目的。SSRF攻击主要针对服务器端应用程序。</p><p>而CSRF攻击则是一种利用用户身份验证信息来执行未经授权的操作的攻击，攻击者通过欺骗用户访问包含恶意代码的网站，来达到获取用户敏感信息、执行交易等攻击目的。CSRF攻击主要针对客户端浏览器。</p><p>另外，防御SSRF攻击和CSRF攻击的方法也有所不同。防御SSRF攻击需要对所有输入进行严格的验证和过滤，并使用白名单技术限制应用程序只向可信的服务器发送请求。而防御CSRF攻击需要使用随机的令牌（如CSRF Token）来验证每个请求的来源是否合法，并防止攻击者能够伪造请求或欺骗用户进行非法操作。</p><p>总之，虽然SSRF攻击和CSRF攻击是两种不同的攻击类型，但它们都需要开发人员采取必要的防御措施来确保Web应用程序和用户数据的安全。</p><h2 id="文件上传如何绕过"><a href="#文件上传如何绕过" class="headerlink" title="文件上传如何绕过"></a>文件上传如何绕过</h2><p>文件上传功能是许多Web应用程序中常见的功能之一，它可以让用户上传各种类型的文件。然而，如果没有正确的安全措施，攻击者可能会利用文件上传功能绕过应用程序的安全性控制并上传恶意文件。以下是一些攻击者可能使用的绕过方法：</p><ol><li>修改文件扩展名：攻击者可以将可执行文件的扩展名更改为其他文件格式的扩展名，例如将.exe文件更改为.jpg文件。这样，即使应用程序检查文件扩展名，也会认为该文件是合法的图像文件。</li><li>绕过文件类型检查：应用程序通常会限制上传文件的MIME类型或文件头，以确保只允许上传合法的文件。但是，攻击者可以通过修改文件头或添加特殊字符等方式来伪装文件类型和内容，从而绕过文件类型检查。</li><li>利用漏洞：应用程序可能存在漏洞，如目录遍历、任意文件上传等漏洞，攻击者可以利用这些漏洞来上传恶意文件，并在服务器上执行任意代码。</li></ol><p>为了防止文件上传漏洞被攻击者利用，开发人员可以采取以下措施：</p><ol><li>对所有上传文件进行严格的验证和过滤：开发人员应该对上传的文件类型、大小、MIME类型等进行严格的验证和过滤，确保只允许上传合法的文件。并且在服务器端进行对上传文件类型、大小、MIME类型等的再次检查。</li><li>为上传文件生成唯一的文件名：开发人员可以为每个上传文件生成唯一的文件名，以避免攻击者通过上传恶意文件来覆盖或修改其他文件。</li><li>使用安全的文件上传库：使用安全的文件上传库，例如PHP的move_uploaded_file函数可以确保文件上传的安全性。</li><li>对上传目录设置权限：只允许应用程序访问上传目录，并设置适当的目录权限，以防止攻击者上传和执行恶意文件。</li></ol><p>总之，开发人员需要对文件上传功能进行充分的安全测试，并采取必要的措施来防止攻击者利用漏洞绕过文件上传功能的安全限制。</p><h2 id="java反序列化"><a href="#java反序列化" class="headerlink" title="java反序列化"></a>java反序列化</h2><p>Java反序列化是一种Java对象序列化（将Java对象转换为字节流）的逆过程，即将字节流重新转换回Java对象。在Java中，可以使用ObjectInputStream类来实现反序列化。虽然Java反序列化本身是一种有用的技术，但它也可能导致安全风险。</p><p>Java反序列化漏洞是指恶意用户通过发送精心构造的序列化数据并触发其反序列化过程，从而执行未经授权的代码或操作。攻击者可以利用此漏洞来执行远程命令、绕过应用程序的安全检查、窃取敏感信息等攻击。</p><p>为了防止Java反序列化漏洞的攻击，开发人员可以采取以下措施：</p><ol><li>处理未信任的数据：开发人员应该避免反序列化未受信任的数据，例如来自不可靠来源的网络请求或从未知来源的文件读取的数据。</li><li>使用安全的序列化库：一些第三方序列化库，如Jackson和Gson等，提供了更加安全的序列化和反序列化功能。开发人员可以使用这些库来避免Java反序列化漏洞。</li><li>实现自定义反序列化方法：对于那些包含重要数据且需要进行反序列化的Java对象，可以实现自定义反序列化方法以控制反序列化过程。</li><li>消除未使用的反序列化代码：如果没有必要进行反序列化操作，开发人员可以将其删除或注释掉，以减少潜在的攻击面。</li><li>定期更新和维护应用程序：及时更新和修复应用程序中的漏洞和错误，并使用相关的安全工具来检测和防止Java反序列化漏洞。</li></ol><p>总之，要解决Java反序列化漏洞，开发人员需要对代码进行充分的安全测试，加强对数据的严格验证和过滤，并采取必要的措施来保护应用程序的安全性。</p><h2 id="sql注入如何写shell"><a href="#sql注入如何写shell" class="headerlink" title="sql注入如何写shell"></a>sql注入如何写shell</h2><p>在SQL注入攻击中，如果攻击者成功地注入了一些恶意的SQL代码，则可以利用这些漏洞来执行各种操作，包括编写shell。以下是攻击者可能使用的几种技术：</p><ol><li>利用UNION SELECT语句：通过构造一个带有UNION SELECT语句的SQL查询，攻击者可以在结果集中插入一些命令，并通过这些命令来编写shell，例如在 MySQL 中可以使用 INTO OUTFILE 来将结果输出到文件中。</li></ol><p>例如，以下语句可以在MySQL中编写shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">http://example.com/products.php?id=1 UNION SELECT &quot;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot;,2 INTO OUTFILE &quot;/var/www/html/shell.php&quot;;</span><br></pre></td></tr></table></figure><ol><li>利用LOAD_FILE函数：如果应用程序允许使用LOAD_FILE函数加载文件，攻击者可以使用该函数来读取并执行任意的本地shell脚本文件。</li></ol><p>例如，在MySQL中，攻击者可以使用以下代码来读取并执行一个本地shell脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">http://example.com/products.php?id=-1&#x27; UNION SELECT LOAD_FILE(&#x27;/path/to/malicious/script.sh&#x27;),&#x27;&#x27;,&#x27;&#x27;</span><br></pre></td></tr></table></figure><ol><li>利用指定数据库的存储过程：攻击者可以使用存储过程来创建和执行恶意的shell脚本，例如在Microsoft SQL Server中，可以使用以下代码来创建并执行一个命令解释器：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">CREATE PROCEDURE sp_ExecCmd (@cmd varchar(1000))</span><br><span class="line">AS</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE @ret int</span><br><span class="line">EXEC @ret = master..xp_cmdshell @cmd</span><br><span class="line">END</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">EXEC sp_ExecCmd &#x27;command&#x27;</span><br></pre></td></tr></table></figure><p>攻击者利用SQL注入漏洞来执行命令或编写shell是非常危险的，因此，在编写应用程序时必须采用适当的安全措施，例如对所有输入数据进行严格的验证和过滤，并使用参数化查询来避免SQL注入攻击。</p><h2 id="sqlmap中risk和levels区别"><a href="#sqlmap中risk和levels区别" class="headerlink" title="sqlmap中risk和levels区别"></a>sqlmap中risk和levels区别</h2><p>在SQL注入扫描器sqlmap中，-r 参数表示风险等级，-level 参数表示扫描等级。这两个参数的区别如下：</p><ol><li>风险等级（-r 或 –risk）：表示发现漏洞的可能性，取值范围是 1-3，越高表示发现漏洞的可能性越大。在较低的风险等级下，sqlmap只执行少量测试，而在更高的风险等级下，sqlmap会进行更多的测试。</li><li>扫描等级（-level 或 –level）：表示扫描深度和测试量，取值范围是 1-5，越高表示扫描深度越深、测试量越大。在较低的扫描等级下，sqlmap只执行一些基本的测试，而在更高的扫描等级下，sqlmap会执行更多的测试，并探测更多的漏洞类型。</li></ol><p>总之，在使用 sqlmap 进行 SQL 注入扫描时，我们需要根据情况调整风险等级和扫描等级，以达到最优的扫描效果。同时，还需要注意 sqlmap 执行测试过程中对目标系统造成的影响，避免对目标系统产生不必要的影响。</p><h2 id="报错注入函数"><a href="#报错注入函数" class="headerlink" title="报错注入函数"></a>报错注入函数</h2><p>报错注入也被称为盲注入，是一种 SQL 注入技术。在报错注入中，攻击者试图向目标系统发送恶意的 SQL 查询并观察系统返回的错误消息，从而了解数据库中存储的敏感数据或执行其它攻击。</p><p>您提到的“报错注入函数”，可能是指用于触发报错注入的 SQL 函数。以下是一些常见的用于报错注入的 SQL 函数：</p><ol><li>SUBSTRING() 函数：该函数用于从字符串中获取子串。通过构造包含错误的语句，攻击者可以利用该函数来确定字符串值的长度和内容，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">SELECT SUBSTRING((SELECT column_name FROM information_schema.columns WHERE table_name=&#x27;users&#x27; LIMIT 1),1,1);</span><br></pre></td></tr></table></figure><ol><li>LENGTH() 函数：该函数返回字符串的长度。攻击者可以使用该函数来确定查询结果的长度，并进一步推断数据的内容，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">SELECT LENGTH((SELECT username from users WHERE id=1));</span><br></pre></td></tr></table></figure><ol><li>ASCII() 函数：该函数返回字符的 ASCII 值。攻击者可以结合其他函数，例如 SUBSTRING() 和 LENGTH()，来识别字符串值的每个字符，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">SELECT ASCII(SUBSTRING((SELECT password from users WHERE username=&#x27;admin&#x27;),1,1));</span><br></pre></td></tr></table></figure><p>总之，报错注入是一种危险的攻击方式，可以导致泄漏敏感信息、执行未经授权的操作等安全问题。因此，开发人员必须采取适当的安全措施，例如对所有输入数据进行验证和过滤，不要直接拼接 SQL 语句，使用参数化查询等。同时，也应该定期测试应用程序以检测是否存在 SQL 注入漏洞。</p><h2 id="支持报错注入的数据库都有哪些"><a href="#支持报错注入的数据库都有哪些" class="headerlink" title="支持报错注入的数据库都有哪些"></a>支持报错注入的数据库都有哪些</h2><p>报错注入是一种比较常见的 SQL 注入技术，不同的数据库在报错注入方面的支持程度不同。以下是一些主要的数据库和它们在报错注入方面的支持情况：</p><ol><li>MySQL：MySQL 是一个流行的开源关系型数据库管理系统，它对报错注入提供了很好的支持。</li><li>Microsoft SQL Server：Microsoft SQL Server 是微软开发的关系型数据库管理系统，它对报错注入也提供了很好的支持。</li><li>Oracle：Oracle 是一个功能强大的商业级数据库管理系统，它对报错注入的支持相对较差。</li><li>PostgreSQL：PostgreSQL 是一个开源的对象关系型数据库管理系统，它对报错注入的支持相对较好。</li><li>SQLite：SQLite 是一个嵌入式关系型数据库管理系统，它对报错注入的支持较弱。</li></ol><p>总之，在进行 SQL 注入测试时，我们需要针对目标数据库的特定版本和配置进行适当的测试，并注意不同数据库之间在报错注入方面的区别。同时，开发人员在编写应用程序时，应该采取适当的安全措施来防止 SQL 注入攻击。</p><h2 id="一个登录框怎么测试"><a href="#一个登录框怎么测试" class="headerlink" title="一个登录框怎么测试"></a>一个登录框怎么测试</h2><p>对于一个登录框，我们需要进行以下测试：</p><ol><li>验证用户名和密码的输入限制：在输入用户名和密码时，需要验证输入的长度、字符类型等是否符合要求。可以尝试输入过长或过短的字符串、特殊字符等来测试应用程序的输入限制。</li><li>测试身份认证功能：尝试使用正确的用户名和密码进行登录，并确认登录成功后能够访问受保护的资源。然后尝试使用无效的凭据进行登录，确保会收到相应的错误提示信息。</li><li>测试防止暴力破解的措施：如果应用程序有防止暴力破解的措施，例如锁定账户或添加验证码等，需要测试这些措施是否有效。</li><li>测试跨站点脚本（XSS）漏洞：在输入框中注入 JavaScript 代码，尝试看是否能执行该代码，如果能执行，则意味着应用程序存在 XSS 漏洞。</li><li>测试 SQL 注入漏洞：在输入框中注入 SQL 代码，尝试看是否能影响后台数据库，如果能影响，则意味着应用程序存在 SQL 注入漏洞。</li><li>测试弱口令：尝试使用一些常见的弱口令进行登录，例如“123456”、“password”、“admin”等，以检测应用程序是否容易受到攻击。</li><li>测试会话管理：测试应用程序在登录后是否正确维护会话，例如在登录后关闭浏览器并重新打开应用程序，是否需要重新进行登录等。</li></ol><p>总之，在测试一个登录框时，我们需要全面考虑各种安全问题，并进行针对性的测试，以确保应用程序的安全。</p><h2 id="csrf产生原因是什么"><a href="#csrf产生原因是什么" class="headerlink" title="csrf产生原因是什么"></a>csrf产生原因是什么</h2><p>CSRF（Cross-Site Request Forgery，跨站请求伪造）攻击是一种常见的 Web 安全漏洞，它利用用户在已登录的情况下访问恶意网站时，绕过同源策略，以用户身份执行未经授权的操作。</p><p>CSRF 攻击产生的原因主要有两个：</p><ol><li>Web 中的一些重要请求不合理地使用了 GET 方法：通常情况下，GET 方法用于获取资源，而 POST 方法用于提交数据。但是，在 Web 应用程序中，有时会把一些重要的请求用 GET 方法来实现，例如修改密码、转账等操作，这样容易被攻击者利用。</li><li>应用程序没有正确验证用户的来源：当应用程序接受到一个请求时，如果没有正确验证请求的来源是否合法，那么攻击者可以通过构造伪造的请求，以用户身份执行未经授权的操作。</li></ol><p>总之，要防止 CSRF 攻击，开发人员需要确保应用程序中所有的关键请求都使用 POST 方法，同时，还需要对请求进行适当的验证和授权，例如添加随机 token 或验证码等机制，以确保请求的来源是合法的。</p><h2 id="sql注入的种类"><a href="#sql注入的种类" class="headerlink" title="sql注入的种类"></a>sql注入的种类</h2><p>SQL注入是一种常见的Web应用程序攻击，攻击者通过执行恶意的SQL查询来窃取敏感信息、修改数据或者执行其他危害行为。根据攻击者的不同攻击手段和目的，SQL注入可以分为以下几种类型：</p><ol><li>基于错误的注入（Error-Based Injection）：该类型的 SQL 注入利用应用程序返回的错误信息来进行攻击，例如通过构造带有语法错误的查询来触发错误信息，攻击者可以从错误消息中获得关于数据库架构和数据的重要信息。</li><li>盲注注入（Blind Injection）：在盲注注入中，攻击者无法直接获取数据库返回的信息，因此需要通过其他方式来推断相关数据。例如，攻击者可以利用时间延迟等机制来判断是否成功注入恶意的SQL语句。</li><li>基于联合查询的注入（Union-Based Injection）：攻击者可以利用 UNION SELECT 语句将两个或多个结果集组合在一起，以获取额外的信息或绕过认证检查。攻击者通常会尝试通过添加 UNION SELECT 语句来向查询中添加恶意代码，例如向查询结果集中添加用户列表或密码信息。</li><li>基于布尔逻辑的注入（Boolean-Based Injection）：在这种类型的 SQL 注入中，攻击者会构造一个查询，该查询会返回一个布尔值，例如真或假。攻击者可以利用这些查询来推断数据库中的数据，例如使用 WHERE 子句构造一个布尔查询来检查某个字段是否存在。</li><li>时间延迟注入（Time-Based Injection）：在时间延迟注入中，攻击者通过向查询中添加时间延迟语句来判断查询是否成功执行。例如，攻击者可以使用 SLEEP() 函数来强制查询等待一段时间，在等待期间观察程序的响应时间来确定注入点是否存在。</li></ol><p>总之，在实际的 SQL 注入攻击中，攻击者通常会结合多种技术和手段，以达到其攻击目的。因此，开发人员需要采取适当的防御措施，例如输入验证、参数化查询、白名单过滤等，来避免 SQL 注入漏洞的出现。</p><h2 id="api环境下sql注入如何防御"><a href="#api环境下sql注入如何防御" class="headerlink" title="api环境下sql注入如何防御"></a>api环境下sql注入如何防御</h2><p>在 API 环境下，防止 SQL 注入攻击的方法和 Web 应用程序类似，主要包括以下几个方面：</p><ol><li>输入验证：开发人员需要对所有输入数据进行有效性验证，包括参数、请求体、请求头等。在验证输入时，可以使用正则表达式或白名单过滤等方法来确保输入数据的合法性。</li><li>参数化查询：在构造 SQL 查询语句时，需要使用参数化查询方式，而不是直接将输入数据拼接到 SQL 查询语句中。参数化查询可以使得 SQL 查询语句与输入数据分离，从而避免 SQL 注入漏洞的出现。</li><li>权限控制：开发人员需要对每个用户进行适当的身份认证和授权，以确保只有经过授权的用户才能访问敏感资源。在授权的过程中，还需要对用户所能访问的数据进行限制，例如使用视图或存储过程来限制用户的访问权限。</li><li>安全审计：监测应用程序的行为并记录日志，以便在发生异常情况时进行排查和调试。安全审计可以帮助开发人员及时发现潜在的漏洞和安全问题，并采取相应的措施加以修复。</li><li>定期更新：定期更新数据库软件及其组件，以确保应用程序使用的数据库软件版本是最新的，从而避免已知漏洞的利用。</li></ol><p>总之，在 API 环境下，开发人员需要采取多种措施来保护应用程序的安全，并避免 SQL 注入攻击的出现。同时，还应该定期进行安全审计和漏洞扫描，及时发现并修复安全问题。</p><h2 id="cs流量特征？"><a href="#cs流量特征？" class="headerlink" title="cs流量特征？"></a>cs流量特征？</h2><p>C&#x2F;S（Client&#x2F;Server，客户端&#x2F;服务器）流量是指基于客户端和服务器之间的通信产生的网络流量。C&#x2F;S 流量特征包括以下几个方面：</p><ol><li>会话建立：C&#x2F;S 流量通常都需要进行会话建立，包括握手、协议版本交换、密钥协商等过程。在这个过程中，通常可以看到一些特定的协议字段和标志位。</li><li>数据传输：传输数据是 C&#x2F;S 流量的主要特征之一。在这个过程中，通常可以看到明文或加密的数据传输，并且数据大小和传输速度也是分析流量的重要指标。</li><li>响应时间：C&#x2F;S 流量通常包含请求和响应消息，因此可以通过分析请求和响应之间的时间差来判断系统性能和服务质量。</li><li>协议类型：C&#x2F;S 流量涉及多种不同的协议类型，例如 HTTP、FTP、SMTP、POP3 等，每种协议的特点和流量特征也有所不同。</li><li>应用程序特点：C&#x2F;S 流量还表现出应用程序的特点，例如应用程序的请求方式、请求频率、用户行为等等，这些特点对于分析和识别流量非常有帮助。</li></ol><p>总之，在分析 C&#x2F;S 流量时，需要综合考虑多个方面的特征，并结合具体的应用程序和场景进行分析。同时，也需要使用适当的工具和技术，例如协议解码器、流量捕获工具等，来对流量进行捕获和分析。</p><h2 id="msf流量特征？"><a href="#msf流量特征？" class="headerlink" title="msf流量特征？"></a>msf流量特征？</h2><p>MSF（Metasploit Framework）是一个开源的网络安全测试工具，可以用于对系统进行渗透测试和漏洞分析。在使用 MSF 进行攻击时，会产生一些特定的流量特征，包括以下几个方面：</p><ol><li>目标端口：MSF 框架使用多种不同的攻击模块来利用目标系统的漏洞，因此 MSF 流量通常涉及多个不同的目标端口，例如常见的 80、443、445 等端口。</li><li>异常请求：MSF 框架使用恶意代码来对目标系统进行攻击，因此 MSF 流量中通常会出现大量异常请求，例如尝试访问非法 URL、发送恶意数据包等。</li><li>频繁扫描：为了寻找目标系统的漏洞，MSF 框架通常会频繁地进行端口扫描、服务识别等操作，因此 MSF 流量中通常会出现大量扫描和探测请求。</li><li>数据包大小：由于 MSF 框架通常会向目标系统发送大量恶意数据包，因此 MSF 流量中通常会出现较大的数据包大小。</li><li>特殊协议：在攻击过程中，MSF 框架通常会使用一些特殊的协议，例如 Meterpreter、Reverse TCP 等，这些协议在 MSF 流量中通常表现出特定的流量特征。</li></ol><p>总之，在分析 MSF 流量时，需要综合考虑多个方面的特征，并结合具体的攻击模块和服务进行分析。同时，也需要使用适当的工具和技术，例如网络抓包工具、IDS&#x2F;IPS 等，来对 MSF 流量进行捕获和分析。</p><h2 id="动态链接库劫持应急响应应该怎么做"><a href="#动态链接库劫持应急响应应该怎么做" class="headerlink" title="动态链接库劫持应急响应应该怎么做"></a>动态链接库劫持应急响应应该怎么做</h2><p>动态链接库劫持（也称 DLL 劫持）是一种常见的攻击手段，攻击者通过将恶意 DLL 文件替换为合法的 DLL 文件，从而实现向操作系统注入恶意代码的目的。在发现动态链接库劫持时，应该采取以下措施进行应急响应：</p><ol><li>隔离受影响的系统：立即隔离受影响的系统，并从网络中断开，以避免进一步的攻击和传播。</li><li>恢复被劫持的 DLL 文件：找到被劫持的 DLL 文件，将其从系统中删除，并替换为原始的、正确的 DLL 文件。如果原始的 DLL 文件已经被篡改或删除，需要重新安装相应的软件或应用程序来获取正确的 DLL 文件。</li><li>检查并清除恶意代码：检查被劫持的 DLL 文件是否包含恶意代码，以及其他可能被感染的文件和系统组件。使用杀毒软件和反恶意软件等工具来清除恶意代码。</li><li>修改注册表：修改注册表，防止恶意 DLL 文件再次被加载。例如，可以修改 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs 键值，将所有可信 DLL 文件添加到其中。</li><li>加强安全措施：评估系统的安全性，并加强安全措施。例如，禁用不必要的服务和进程、添加访问控制列表、加密重要数据等。</li></ol><p>总之，在应对动态链接库劫持时，需要快速响应，并采取适当的措施进行恢复和防御，以保护系统和敏感数据的安全性。同时也需要加强监测和预防工作，对系统中的 DLL 文件进行定期检查，并实施安全审计和漏洞扫描等措施，避免类似攻击的再次出现。</p><h2 id="几台服务器在内网，其中一台被打穿，如何排查？"><a href="#几台服务器在内网，其中一台被打穿，如何排查？" class="headerlink" title="几台服务器在内网，其中一台被打穿，如何排查？"></a>几台服务器在内网，其中一台被打穿，如何排查？</h2><p>在一台服务器被攻破后，我们需要快速采取措施进行排查和修复，以下是一些可能的步骤：</p><ol><li>保留现场：在发现一台服务器遭到攻击后，首先要保持现场状态不变，尽量不要修改任何文件或日志。这可以帮助我们更好地了解攻击者的行为、恶意代码的传播路径以及其他可能受到影响的系统或数据。</li><li>收集证据：收集有关攻击的证据，例如入侵检测日志、应用程序日志、网络流量捕获等。这些证据可以帮助我们确定攻击的类型、攻击的时间以及攻击者所使用的工具和技术。</li><li>切断网络连接：为了防止恶意代码继续传播，需要切断受感染服务器与外部网络的连接。这可以通过拔掉网络电缆、关闭相关端口或禁用网络适配器等方法实现。</li><li>分析恶意代码：对受感染服务器上的恶意代码进行分析，以确定其行为、传播方式和危害程度。可以使用杀毒软件、反病毒软件或专业的样本分析工具来进行分析。</li><li>验证系统完整性：验证系统文件和配置是否被恶意代码篡改，例如检查系统文件的哈希值、比较配置文件的差异等。</li><li>进行漏洞扫描：对整个内网进行漏洞扫描，以确保其他服务器没有被攻击。可以使用专业的漏洞扫描工具来进行扫描，例如 Nessus、OpenVAS 等。</li><li>加强安全措施：根据攻击者的入侵方式和攻击的原因，加强系统和网络的安全措施，例如更新补丁、升级软件、增强防火墙规则等。</li></ol><p>总之，在排查一台服务器被攻击后，需要采取快速而有针对性的措施，并结合具体情况进行分析和修复，以保护系统和敏感数据的安全性。</p><h2 id="java内存马有哪几种？"><a href="#java内存马有哪几种？" class="headerlink" title="java内存马有哪几种？"></a>java内存马有哪几种？</h2><p>Java内存马是指一种恶意软件，通过利用Java虚拟机的特性，在目标机器上执行恶意代码，从而控制被感染的机器。以下是几种常见的Java内存马：</p><ol><li>基于反射的内存马：该类型的内存马通过Java反射机制动态加载字节码，绕过了Java程序的安全检查，可以在受害机器上执行任意代码。</li><li>基于Instrumentation的内存马：Instrumentation是Java提供的一组API，可以对正在运行的Java程序进行监控和修改。黑客可以利用这个机制来在目标机器上注入恶意代码。</li><li>基于ClassLoader的内存马：ClassLoader是Java中负责加载类的机制。黑客可以通过自定义ClassLoader来加载恶意代码，从而实现控制目标机器的目的。</li><li>基于JNI的内存马：JNI（Java Native Interface）是Java提供的一组API，可以在Java程序中调用本地代码。黑客可以编写本地代码，并将其作为DLL或SO文件加载到目标机器上，然后通过JNI接口与Java程序通信，从而实现控制目标机器的目的。</li></ol><p>需要注意的是，以上仅列举了部分常见的Java内存马，黑客也可能采用其他方式来实现内存马。为了保护系统的安全，建议及时更新Java版本，并加强对Java程序的安全审计。</p><h2 id="6379是什么端口？"><a href="#6379是什么端口？" class="headerlink" title="6379是什么端口？"></a>6379是什么端口？</h2><p>6379是Redis数据库的默认端口号。Redis是一种基于内存的键值存储系统，支持多种数据结构（如字符串、哈希表、列表等），并提供了丰富的操作命令（如读取、写入、删除等）。6379端口用于客户端与Redis服务器之间进行网络通信，通过这个端口，客户端可以连接到Redis服务器，并对其进行数据读写等操作。同时，6379端口也是黑客攻击Redis服务器的一个常见目标，因此在使用Redis时，需要注意设置好安全配置，保障Redis的安全性。</p><h2 id="7001是什么端口？"><a href="#7001是什么端口？" class="headerlink" title="7001是什么端口？"></a>7001是什么端口？</h2><p>7001是WebLogic服务器的默认管理端口。WebLogic是一种Java应用服务器，常用于企业级应用的开发和部署，其管理控制台可以通过7001端口进行访问和管理。除了管理控制台外，7001端口还用于WebLogic服务器的内部通信，如集群间的通信、容器间的通信等。需要注意的是，由于7001端口是WebLogic服务器的默认端口，因此可能会成为攻击者的攻击目标。在使用WebLogic时，应加强对系统的安全配置，如限制管理控制台的访问权限、设置防火墙规则等，以提高系统的安全性。</p><h2 id="设备上出现log4j，怎么判断攻击成功？"><a href="#设备上出现log4j，怎么判断攻击成功？" class="headerlink" title="设备上出现log4j，怎么判断攻击成功？"></a>设备上出现log4j，怎么判断攻击成功？</h2><p>如果在设备上出现了log4j，则说明攻击者可能利用Log4j漏洞进行攻击，此时可以通过以下方式判断是否真的发生了攻击：</p><ol><li>检查服务器日志：如果攻击成功，一般会在服务器日志中留下明显的痕迹，如未经授权的文件访问、操作系统命令执行等。建议定期检查服务器日志，尤其是涉及敏感数据和关键操作的日志。</li><li>检查网络流量：攻击者在远程操纵受害设备时，一般需要与设备进行网络通信，因此可以通过检查网络流量来判断是否有异常的数据传输行为。建议采用网络监控工具对网络流量进行实时监控，并对异常流量进行警报和记录。</li><li>检查系统进程：攻击者在利用漏洞进行攻击时，可能需要启动或修改一些系统进程，因此可以通过检查系统进程列表来寻找异常行为。建议使用系统监控工具对系统进程进行实时监控，并对异常进程进行警报和记录。</li></ol><p>需要注意的是，出现了Log4j并不意味着攻击一定已经成功，也可能只是正常业务应用中使用了Log4j功能。因此，在判断是否受到攻击时，应该综合考虑多种因素，并采取相应的安全措施。</p><h2 id="设备出现反序列化报警，怎么判断攻击成功？"><a href="#设备出现反序列化报警，怎么判断攻击成功？" class="headerlink" title="设备出现反序列化报警，怎么判断攻击成功？"></a>设备出现反序列化报警，怎么判断攻击成功？</h2><p>当一个设备出现反序列化报警时，可能意味着攻击者已经成功地利用了该设备上的漏洞，并通过发送恶意的数据包来触发该报警。为了判断攻击是否成功，您可以进行以下几个步骤：</p><ol><li>确认报警：首先，您需要确认该报警是否真实存在，而不是一次误报。请检查报警的详细信息，例如报警时间、报警源、报警类型等信息。</li><li>检查攻击路径：根据报警信息，您可以分析攻击者可能使用的攻击路径。例如，他们可能会尝试利用已知的漏洞或弱点来入侵系统，并在其中插入恶意代码。</li><li>搜索事件日志：搜索系统和应用程序的事件日志，以查找任何异常活动或不寻常的行为。您还可以查看系统资源的使用情况，例如CPU、内存和网络流量等，以帮助确定是否有恶意活动正在进行。</li><li>找出攻击者的IP地址：如果您能够找到攻击者的IP地址，请将其与已知的黑名单或威胁情报数据库进行比较，以确定该地址是否已被标记为恶意。</li><li>进行安全审计：最后，您可以进行安全审计以确定是否存在其他漏洞或弱点。这将帮助您修复当前的漏洞，并防止未来类似攻击的发生。</li></ol><p>在所有这些步骤中，最重要的是快速采取行动，以尽快确定并缓解攻击影响。</p><h2 id="fastion漏洞原理？"><a href="#fastion漏洞原理？" class="headerlink" title="fastion漏洞原理？"></a>fastion漏洞原理？</h2><p>“Fastjson” 是一种流行的 Java 序列化库，可用于将 Java 对象转换为 JSON 格式。然而，在 fastjson 序列化和反序列化的过程中，存在一些安全漏洞。其中一个漏洞就是针对 fastjson 反序列化的攻击。</p><p>fastjson 反序列化的攻击原理是通过精心构造的恶意JSON字符串，使得 fastjson 在反序列化时执行恶意代码。攻击者将恶意代码嵌入到JSON字符串中，并利用 fastjson 的某些特性来触发这些代码的执行。攻击者可能会使用这个漏洞来破坏应用程序的完整性、机密性和可用性等方面的保护措施。</p><p>具体来说，攻击者可能会在JSON字符串中添加一些特殊的快捷方式（shortcuts），例如 $ref 和 @type 等，以导致反序列化器创建新的对象实例并执行恶意代码。攻击者还可以利用fastjson中的某些漏洞，使其绕过安全检查，从而成功地执行恶意代码。</p><p>为了防止 fastjson 反序列化漏洞，开发人员需要采取一些预防措施。例如，他们应该避免直接将未经过验证的用户输入传递给 fastjson 反序列化器。开发人员还应该及时更新 fastjson 序列化库，以确保其安全性。此外，开发人员还可以使用其他序列化和反序列化库，例如Gson和Jackson等，来避免fastjson漏洞的风险。</p><h2 id="shiro漏洞原理？"><a href="#shiro漏洞原理？" class="headerlink" title="shiro漏洞原理？"></a>shiro漏洞原理？</h2><p>Apache Shiro是一个流行的Java安全框架，用于在应用程序中实现身份验证、授权和加密等功能。然而，Apache Shiro也存在一些安全漏洞，其中最著名的是反序列化漏洞。</p><p>Shiro反序列化漏洞的根本原因是，该框架采用了Java标准库中的ObjectInputStream类来反序列化请求中的数据。攻击者可以通过构造恶意请求，并将其发送到目标系统，以触发ObjectInputStream在处理该请求时执行恶意代码的情况。</p><p>攻击者可能会利用这个漏洞来绕过Shiro的安全控制，例如成功地进行认证并获得访问受保护资源的权限。攻击者还可以通过利用这个漏洞来在目标系统上执行任意代码，进一步危害系统的机密性和完整性。</p><p>为了缓解Shiro反序列化漏洞的风险，开发人员可以采取以下预防措施：</p><ol><li>避免直接从未经过验证的输入数据中反序列化对象。</li><li>限制反序列化器（如 ObjectInputStream）的使用，只反序列化可信来源的数据。</li><li>及时更新Shiro框架，以确保漏洞已被修复。</li><li>将Shiro部署在安全环境中，并使用网络隔离、网络监控和入侵检测等技术来加强安全控制。</li></ol><h2 id="log4j的漏洞原理？"><a href="#log4j的漏洞原理？" class="headerlink" title="log4j的漏洞原理？"></a>log4j的漏洞原理？</h2><p>Log4j是Java中广泛使用的一种日志管理工具，在许多应用程序中都被广泛使用。然而，最近发现了一种名为Log4Shell的漏洞，该漏洞使攻击者可以利用Log4j来执行任意代码，从而危及系统的安全性和完整性。以下是此漏洞的原理：</p><p>Log4j依赖于Apache Commons Math库中的一个子模块，即Math Expression Parser（MEP）库，以解析日志消息中的数学表达式。这个库使用了JNDI（Java命名和目录接口）技术，JNDI允许开发人员将Java对象绑定到命名空间中，以供其他Java应用程序使用。</p><p>攻击者可以通过构造特制的请求，将恶意的JNDI名称注入到Log4j中，从而诱骗Log4j调用该JNDI名称代表的对象，例如远程服务器上的恶意Java类。当Log4j尝试解析JNDI名称时，它会触发恶意JNDI资源的加载，并在其中执行恶意代码。</p><p>攻击者可以利用此漏洞来执行各种攻击，包括但不限于：</p><ol><li>远程代码执行：攻击者可以利用此漏洞在目标系统上执行任意代码，可能导致机密信息泄露、数据损坏和系统崩溃等问题。</li><li>远程命令执行：攻击者可以利用此漏洞在目标系统上执行任意命令，例如下载和安装恶意软件、创建后门访问等。</li></ol><p>为了缓解Log4j漏洞的风险，建议采取以下预防措施：</p><ol><li>更新Log4j版本：最新版本已经修复了此漏洞。</li><li>关闭JNDI：如果您不需要使用JNDI，建议禁用该功能。</li><li>阻止外部网络访问：对于架构设计合理的应用程序，应该使用网络隔离等技术来限制外部访问。这将有助于减轻远程攻击的风险。</li><li>加强应用程序安全性：开发人员应该定期审计和更新应用程序代码，以确保其安全性和完整性。</li></ol><h2 id="ridis漏洞原理？"><a href="#ridis漏洞原理？" class="headerlink" title="ridis漏洞原理？"></a>ridis漏洞原理？</h2><p>Redis是一个流行的开源内存数据存储系统，被广泛用于Web应用程序中的缓存、队列和消息传递等方面。然而，Redis也存在一些安全漏洞，其中最著名的是Ridic反序列化漏洞。</p><p>Ridic反序列化漏洞的根本原因是，Redis使用了Java标准库中的ObjectInputStream类来处理数据的序列化和反序列化。攻击者可以通过构造恶意请求，并将其发送到目标Redis服务器上，以触发ObjectInputStream在处理该数据时执行恶意代码的情况。</p><p>攻击者可能会利用这个漏洞来绕过Redis的身份验证、篡改或删除存储在Redis数据库中的数据，甚至在Redis服务器上执行任意代码。例如，攻击者可以使用此漏洞来：</p><ol><li>提升权限：攻击者可以通过远程执行任意代码进一步攻击目标系统，例如窃取敏感信息、破坏系统完整性、创建后门等。</li><li>篡改数据：攻击者可以修改Redis数据库中的数据，例如覆盖现有数据、添加新的键值对等。</li><li>删除数据：攻击者可以利用此漏洞删除Redis数据库中的数据，包括重要的配置文件、认证令牌等。</li></ol><p>为了缓解Ridic反序列化漏洞的风险，开发人员可以采取以下预防措施：</p><ol><li>不要直接将未经过验证的用户输入数据存储在Redis数据库中。</li><li>更新Redis版本以确保漏洞已修复。</li><li>配置Redis服务器的安全设置，例如限制网络访问和使用密码进行身份验证等。</li><li>启用日志记录并监测Redis服务器上的异常活动。</li><li>将Redis服务器部署在安全环境中，并定期对其进行安全审计。</li></ol><h2 id="shiro550和shiro721有什么区别"><a href="#shiro550和shiro721有什么区别" class="headerlink" title="shiro550和shiro721有什么区别?"></a>shiro550和shiro721有什么区别?</h2><p>Shiro550和Shiro721都是Apache Shiro框架中的安全漏洞，它们存在于不同的子模块中，并采用了不同的攻击方式。</p><p>Shiro550漏洞存在于Shiro-crypto模块中，是一种加密相关的漏洞。该漏洞使攻击者能够绕过Shiro的加密保护，从而访问受保护的资源。具体来说，攻击者可以将明文传递给加密方法，从而获得加密后的结果，然后利用这个结果来伪造受信任用户的身份。</p><p>与之相比，Shiro721漏洞则存在于Shiro-core模块中，是一种反序列化漏洞。该漏洞允许攻击者通过构造特制的序列化对象来执行任意代码，并在目标系统上实现远程代码执行攻击。攻击者可以通过向目标系统发送恶意请求触发此漏洞，并在其中嵌入恶意代码来破坏系统安全性和完整性。</p><p>总之，尽管Shiro550和Shiro721都是Shiro框架中的安全漏洞，但它们属于不同的类型和攻击方式。因此，在使用Shiro框架时，开发人员需要采取一些预防措施，并注意及时更新Shiro库中的漏洞修复。</p><h2 id="你对反序列化漏洞了解多少？"><a href="#你对反序列化漏洞了解多少？" class="headerlink" title="你对反序列化漏洞了解多少？"></a>你对反序列化漏洞了解多少？</h2><p>反序列化漏洞是指攻击者利用程序中未经充分验证的输入，向应用程序提供一个恶意构造的序列化对象，执行任意代码或获取敏感信息的漏洞。这种漏洞通常出现在Java和.NET等语言的应用程序中。</p><p>反序列化漏洞的本质是：当程序从存储介质读取对象时，如果没有对传入的数据进行充分验证，那么攻击者就可以通过精心构造的序列化对象，欺骗应用程序执行恶意代码。攻击者可能会在序列化对象中添加可执行代码或操作指令，以执行危害系统安全性和完整性的操作，例如修改或删除数据、窃取敏感信息或执行远程代码等。</p><p>为了防止反序列化漏洞，开发人员应该采取以下预防措施：</p><ol><li>避免直接将未经过验证的用户输入数据反序列化为对象。</li><li>对所有用户输入进行严格的验证和过滤，包括长度、格式和内容等方面。</li><li>限制反序列化器的使用，只反序列化可信来源的数据。</li><li>及时更新反序列化库，以确保已修复已知漏洞。</li><li>在系统上禁用危险的反序列化特性，例如使用Java标准库中的ObjectInputStream类。</li></ol><p>总之，反序列化漏洞是一种普遍存在的安全漏洞，需要开发人员特别注意，从设计、编码和测试等各个方面加强应用程序的安全性和完整性。</p><h2 id="linux查看端口，查看进程，查看恶意文件命令是什么？"><a href="#linux查看端口，查看进程，查看恶意文件命令是什么？" class="headerlink" title="linux查看端口，查看进程，查看恶意文件命令是什么？"></a>linux查看端口，查看进程，查看恶意文件命令是什么？</h2><ol><li>查看端口命令：</li></ol><p>在Linux中，可以使用以下命令来查看当前系统上打开的端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">netstat -tlnp</span><br></pre></td></tr></table></figure><p>该命令列出了当前所有的TCP和UDP监听端口，并显示哪些程序正在使用这些端口。其中，“-t”表示只显示TCP协议，“-l”表示只显示监听端口，“-n”表示不解析IP地址和端口号，“-p”表示显示进程相关信息。</p><ol><li>查看进程命令：</li></ol><p>在Linux中，可以使用以下命令来查看当前正在运行的进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">ps -ef</span><br></pre></td></tr></table></figure><p>该命令列出了当前所有的进程，并显示每个进程的PID、名称、状态、父进程ID等信息。其中，“-e”表示列出所有进程，“-f”表示完整输出格式（包括用户、CPU占用率、内存占用等）。</p><ol><li>查看恶意文件命令：</li></ol><p>在Linux中，可以使用以下命令来查找可能的恶意文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">find / -name &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>该命令将从根目录开始搜索指定文件名的文件，并输出所有匹配的结果。注意，此命令需要root权限才能搜索整个文件系统。</p><p>此外，还可以使用以下命令来查看特定文件是否具有可疑的权限或属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">ls -la &lt;filepath&gt;</span><br></pre></td></tr></table></figure><p>该命令列出了特定文件的详细属性，包括所有者、组、权限、大小、修改时间和链接等信息。可以通过分析这些属性来确定文件是否具有可疑的行为。</p><h2 id="网站被攻击了怎么排查？"><a href="#网站被攻击了怎么排查？" class="headerlink" title="网站被攻击了怎么排查？"></a>网站被攻击了怎么排查？</h2><p>当网站被攻击时，开发人员应该采取以下步骤来排查：</p><ol><li>确认是否真的被攻击了：首先需要确认是否真的被攻击了。通常情况下，被攻击的网站可能会出现许多异常行为，例如页面加载缓慢、无法访问、误导用户等。此外，也可以通过日志分析和网络监测工具来探测是否存在异常流量或恶意请求。</li><li>初步分析攻击类型：根据异常行为和日志信息，可以初步确定攻击类型，例如SQL注入、XSS跨站脚本、CSRF跨站请求伪造、DDoS攻击等。</li><li>收集证据：对于发现的异常行为和攻击类型，需要收集相关证据，并记录下时间、来源、目标等信息，以便后续分析和响应。</li><li>及时阻止攻击：在收集完足够的证据后，应该尽快采取措施来阻止攻击的继续进行。可以使用防火墙、IP过滤、封禁IP地址等技术手段来限制攻击者的访问。</li><li>分析攻击原因：在阻止攻击后，需要深入分析攻击原因。可以从系统架构、代码实现、配置管理、人员行为等方面入手，找出漏洞和弱点，并及时修复。</li><li>恢复服务：在分析和修复所有漏洞后，需要恢复服务并重新上线网站。此时，可以使用安全工具和技术来加固系统，并建立监测系统来及时发现和响应类似攻击。</li></ol><p>总之，排查被攻击的网站是一个复杂而艰巨的过程，需要开发人员具有扎实的技能和丰富的经验。最重要的是，应该采取预防措施，在日常开发和运维中注重安全性和完整性，以防止未来的攻击。</p><h2 id="文件上传怎么通过设备判断？"><a href="#文件上传怎么通过设备判断？" class="headerlink" title="文件上传怎么通过设备判断？"></a>文件上传怎么通过设备判断？</h2><p>在文件上传功能中通过设备判断，通常可以使用HTTP请求头中的User-Agent字段来识别用户所使用的设备类型。该字段包含了用户代理软件的名称、版本号和操作系统等信息，可以根据这些信息来判断用户所使用的设备类型，例如PC、手机或平板电脑等。</p><p>以下是一些常见的User-Agent值，用于识别不同设备类型：</p><ul><li>PC端浏览器的User-Agent值通常包含“Windows”、“Macintosh”等关键字。</li><li>iOS设备的User-Agent值通常包含“iPhone”、“iPad”等关键字。</li><li>Android设备的User-Agent值通常包含“Android”等关键字。</li></ul><p>在服务器端代码中，可以通过解析HTTP请求头，提取User-Agent字段，并对其进行匹配和分类。例如，可以使用正则表达式来匹配User-Agent值，从而判断用户所使用的设备类型，并针对不同的设备类型做出相应的处理，例如限制上传的文件类型、大小等。</p><p>需要注意的是，User-Agent字段可能存在伪造或篡改的情况，因此不能完全依赖这个字段来确定用户的设备类型。在实现安全验证时，还需要采取其他措施，例如限制上传路径、禁止上传可执行文件、对上传文件进行文件类型检查、加强文件访问权限等，以增强上传功能的安全性和完整性。</p><h2 id="怎么排查内存马？"><a href="#怎么排查内存马？" class="headerlink" title="怎么排查内存马？"></a>怎么排查内存马？</h2><p>内存马是指恶意程序将自己注入到进程的内存中，从而实现对系统资源和数据的非法控制。由于内存马不占用磁盘空间，难以被杀毒软件检测和拦截，因此排查起来比较困难。但仍然可以采取以下一些方法来排查内存马：</p><ol><li>进程分析：通过查看系统中所有进程的信息，包括进程名称、PID、所属用户、内存占用等，可以尝试发现异常进程并排除其中是否存在内存马。</li><li>系统日志分析：通过分析系统日志文件，可以查看系统启动、服务开启、网络连接等活动，以了解是否有可疑的行为发生。</li><li>内存分析工具：使用专业的内存分析工具，例如Volatility Framework、Mandiant Memoryze、Rekall等，可以在内存中查找潜在的内存马代码或痕迹，并进行初步分析和定位。</li><li>网络监测工具：通过网络监测工具，例如Wireshark、Tcpdump等，可以捕获网络流量，了解是否有可疑的网络请求或通信行为，进一步定位内存马的来源和命令控制中心。</li><li>安全软件扫描：利用杀毒软件和安全扫描工具，例如Norton Power Eraser、Kaspersky TDSSKiller等，可以对系统进行全面的扫描和检测，以发现并清除可能存在的内存马。</li></ol><p>总之，排查内存马需要采取多种方法、综合分析，结合实际情况而定。在预防内存马时，还需要加强系统的安全性和完整性，限制对系统资源和文件的访问权限，禁止不必要的外部连接和通信行为，及时更新系统和应用程序的补丁和版本，从源头上避免内存马的出现。</p><h2 id="登录框页面都可以测试哪些漏洞？"><a href="#登录框页面都可以测试哪些漏洞？" class="headerlink" title="登录框页面都可以测试哪些漏洞？"></a>登录框页面都可以测试哪些漏洞？</h2><p>登录框页面是Web应用程序中常见的功能之一，也是黑客攻击的重要目标。下面列举了一些可能存在的漏洞：</p><ol><li>SQL注入：黑客可以在登录框中输入特殊字符，从而构造恶意的SQL语句，绕过身份验证，甚至获取敏感信息。</li><li>XSS跨站脚本攻击：黑客可以通过在登录框中插入JavaScript代码，篡改页面内容或窃取用户凭据等。</li><li>CSRF跨站请求伪造：黑客可以通过构造恶意请求，在用户不知情的情况下发起伪造的登陆请求，从而模拟合法用户的身份完成相应操作。</li><li>密码弱口令：用户设置的密码太简单或者容易被猜到，导致黑客可以轻松破解，进而访问网站的系统资源和数据。</li><li>会话固定攻击：黑客可以通过截获会话ID，让其他用户使用这个会话ID来登录，从而获取用户的敏感信息。</li><li>身份验证绕过：黑客可以通过各种手段，如暴力破解、抓包分析等方式，绕过身份验证机制，进而访问系统资源和数据。</li><li>命令注入：黑客可以在用户名或密码中注入恶意的命令，从而执行系统命令，控制服务器。</li></ol><p>为了有效地防范这些漏洞，开发人员应该采取一些预防措施，例如加强用户输入的验证和过滤、使用安全的密码策略、使用CSRF Token、启用HTTPS等。此外，还应该定期对登录页面进行渗透测试和安全评估，及时发现并修复潜在的漏洞。</p><h2 id="sql盲注有几种方法？"><a href="#sql盲注有几种方法？" class="headerlink" title="sql盲注有几种方法？"></a>sql盲注有几种方法？</h2><p>SQL盲注是指通过构造特定的SQL语句，利用Web应用程序的漏洞来获取敏感信息或执行具有破坏性的操作。根据不同的条件和情况，SQL盲注可以分为以下几种方法：</p><ol><li>基于布尔盲注：基于布尔盲注的攻击方式是常见的SQL盲注手段之一。黑客通过构造恶意的SQL语句，向Web应用程序提交查询请求，并观察返回结果中的布尔值（True或False）来推断查询语句中的条件是否成立。在这种攻击方式中，黑客通常会构造使用”AND”或者”OR”关键字的语句，以及适当的参数组合，从而判断出数据库中的数据是否符合预期要求。</li><li>基于时间盲注：基于时间盲注也是SQL盲注的一种类型。在这种攻击方式中，黑客通过构造恶意的SQL语句，在查询时增加等待时间，以便观测程序在执行恶意查询后的响应时间。如果响应时间与正常情况下相比明显延长，则说明恶意查询已经被执行。</li><li>基于错误消息盲注：基于错误消息盲注是另一种常见的SQL盲注攻击方式。黑客通过构造恶意的SQL语句，向Web应用程序提交查询请求，如果数据不符合预期要求，则会触发数据库的错误消息。黑客可以通过观察错误消息中的详细信息，推断出恶意查询是否执行成功。</li><li>基于联合查询盲注：基于联合查询盲注是另一种SQL盲注攻击方式。在这种攻击方式中，黑客通过构造特定的SQL语句，并使用”UNION”关键字来实现查询结果的合并。黑客可以通过修改查询语句中的参数，或者增加或减少查询中的表格数目，来获取敏感信息或执行破坏性操作。</li></ol><p>总之，SQL盲注是一种危险的攻击手段，开发人员需要采取有效的防御措施，避免出现潜在的漏洞。例如，开发人员可以对用户输入数据进行严格的检验和过滤，限制用户输入的字符类型和长度，尽量避免使用动态拼接字符串的方式构造SQL语句，加强数据库本身的安全性等。</p><h2 id="不给你工具，怎么进行webshell排杀"><a href="#不给你工具，怎么进行webshell排杀" class="headerlink" title="不给你工具，怎么进行webshell排杀"></a>不给你工具，怎么进行webshell排杀</h2><p>要进行Webshell排查和清除，需要在服务器上执行以下步骤：</p><ol><li>扫描服务器，寻找异常进程、文件和网络连接。可以使用诸如lsof、netstat、ps等命令来查找可疑的进程和网络连接。</li><li>检查服务器中是否存在任何未知文件或目录，特别是具有隐藏属性的文件和目录。可以使用find命令查找所有文件和目录，并检查其中是否存在可疑的文件和目录。</li><li>检查服务器上是否存在未知用户和组。可以使用cat &#x2F;etc&#x2F;passwd和cat &#x2F;etc&#x2F;group命令来查看系统中的用户和组，并检查其中是否存在可疑的用户和组。</li><li>检查服务器上的系统日志，包括&#x2F;var&#x2F;log&#x2F;messages、&#x2F;var&#x2F;log&#x2F;secure等文件，以查找异常事件。</li><li>如果发现可疑的Webshell文件，需要立即将其删除，并检查相关的网站和数据库是否被入侵。</li><li>更新服务器上的操作系统和应用程序，并安装最新的防病毒软件和安全补丁，以提高服务器的安全性。</li></ol><p>以上这些操作需要有一定的Linux系统管理基础，如果您不熟悉这些操作，建议联系专业的安全人员进行处理。此外，为了减少Webshell攻击的风险，请您注意加强服务器的安全设置，定期备份重要数据，并限制外部访问服务器的权限。</p><h2 id="拿下内网主机如何判断它的权限"><a href="#拿下内网主机如何判断它的权限" class="headerlink" title="拿下内网主机如何判断它的权限"></a>拿下内网主机如何判断它的权限</h2><p>当您成功入侵一台内网主机后，您需要评估该主机的权限级别。以下是一些常见方法：</p><ol><li>查看当前用户的权限：使用命令<code>whoami</code>或<code>id</code>查看当前用户的权限。如果当前用户是root或管理员权限，则他们可以访问和修改系统上所有机密数据和配置文件。</li><li>检查可用的系统命令：使用命令<code>sudo -l</code>来查看当前用户是否可以执行以root权限运行的系统命令。如果您有足够的权限，可以使用<code>sudo</code>命令来执行特权操作。</li><li>检查系统日志：检查系统日志文件中是否有任何异常记录。攻击者可能会在日志文件中删除其活动痕迹，因此需要查看备份日志文件。</li><li>查看安全配置：检查密码策略、防火墙配置、网络访问控制列表等配置文件，以确定当前用户能否绕过这些保护层进行更高级别的攻击。</li><li>检查进程和服务：使用命令<code>ps -ef</code>或<code>systemctl list-units</code>来查看正在运行的进程和服务。如果您看到未知的进程或服务正在运行，则可能存在恶意软件或后门程序。</li></ol><p>总之，在评估被攻击的内部系统时，重要的是要了解当前用户拥有哪些权限，并确定攻击者是否已经获得更高的权限或在系统上留下了后门。建议在评估过程中使用多种技术和工具来获取完整的信息，以确保您有足够的信息来进行正确的决策，从而保护您的系统和数据免受攻击。</p><h2 id="同源策略是什么"><a href="#同源策略是什么" class="headerlink" title="同源策略是什么"></a>同源策略是什么</h2><p>同源策略（Same Origin Policy）是一种Web安全策略，它是浏览器中的一项重要特性，用于限制从一个源加载的文档或脚本如何与来自另一个源的资源进行交互。同源指的是三个关键元素：协议、主机和端口号，只有这三者完全相同的两个URL才被认为是同源的。</p><p>同源策略可以防止恶意网站访问其他网站的敏感数据，例如Cookie、LocalStorage和请求响应等信息，从而保护用户的隐私和安全。</p><p>例如，假设您正在访问一个银行的网站，该银行使用Cookie来存储您的登录凭据。如果攻击者能够在他们的网站上注入一些JavaScript代码并通过某种方式将其转移到您正在访问的银行网站上，那么该攻击者就可以访问您的Cookie，以便窃取您的个人信息。然而，由于同源策略的存在，攻击者无法访问您正在访问的银行网站的Cookie，因为它们不属于同一个源。</p><p>尽管同源策略对Web安全至关重要，但在某些情况下，它可能会成为开发过程中的挑战。为了解决这些问题，Web开发人员可以使用一些技术和标记，如跨域资源共享（CORS）和JSONP等来解决这些限制。</p><h2 id="说一下几种常见的逻辑漏洞"><a href="#说一下几种常见的逻辑漏洞" class="headerlink" title="说一下几种常见的逻辑漏洞"></a>说一下几种常见的逻辑漏洞</h2><p>逻辑漏洞指的是应用程序中的编码错误或设计缺陷，使攻击者可以利用不符合预期的逻辑来绕过安全控制并实现攻击目标。以下是几种常见的逻辑漏洞：</p><ol><li>注册送礼：在这种攻击中，攻击者通过欺骗用户注册帐户并提供个人信息的方式来获取某种奖励或礼物，从而收集大量有价值的用户数据。攻击者利用了开发人员未正确处理奖励机制的事实，并通过暴力破解、自动化脚本等方式创建大量虚假账户。</li><li>提交订单时修改价格：在这种漏洞中，攻击者可以通过提交订单时修改商品价格来获得不当利益。攻击者可能会修改页面上显示的价格、数量或其他参数，以实现价格欺诈。</li><li>超额退款：攻击者通过修改应用程序中的退款机制或直接与客户服务联系，以获取超出实际退款金额的退款，从而实现盈利。</li><li>非法访问：在这种漏洞中，攻击者可以通过绕过身份验证或访问控制机制，以获取未经授权的访问权限。攻击者可能会使用一些技术手段，如SQL注入、目录遍历、文件包含等来绕过访问控制机制。</li><li>不当的会话管理：攻击者可以通过利用应用程序中的会话机制漏洞，以获取受害者的会话令牌或密码。攻击者可能会使用会话劫持、会话固定攻击等技术手段，从而窃取用户的身份验证信息。</li></ol><p>以上是常见的几种逻辑漏洞，这些漏洞需要开发人员在设计和编写代码时注意到，并采取相应的防范措施，例如使用安全的会话管理、访问控制、输入验证等措施，从而保护应用程序的安全性。</p><h2 id="如何判断是否存在越权漏洞"><a href="#如何判断是否存在越权漏洞" class="headerlink" title="如何判断是否存在越权漏洞"></a>如何判断是否存在越权漏洞</h2><p>越权漏洞是指攻击者可以未经授权地访问或修改受限资源的漏洞。一些常见的越权漏洞包括：</p><ol><li>管理员账户欺骗：攻击者通过伪装成管理员或其他特权用户，以获取访问受限资源的权限。</li><li>直接对象引用：攻击者可以直接访问应用程序中的受保护对象或文件，而不需要通过身份验证或授权过程。</li><li>会话劫持：攻击者可以窃取正在进行的会话ID，以获得访问受限资源的权限。</li><li>暴力破解：攻击者可以使用暴力破解技术，如穷举法或字典攻击等，来尝试猜测受限资源的密码或凭证。</li></ol><p>要判断是否存在越权漏洞，可以考虑以下方法：</p><ol><li>分析应用程序的访问控制机制，查看哪些资源受到了访问限制。</li><li>测试应用程序的身份验证和授权机制，以了解是否存在身份验证缺陷、密码弱点等问题。</li><li>使用模拟攻击工具或手动测试来模拟攻击者的行为，并尝试访问受限资源，以确定是否存在越权漏洞。</li><li>针对常见的越权漏洞类型，如管理员账户欺骗、会话劫持等，采取相应的安全措施和加固策略。</li></ol><p>总之，要发现和修复越权漏洞，需要审查应用程序的访问控制机制、身份验证和授权流程，并通过模拟攻击和手动测试来判断是否存在越权漏洞。定期进行漏洞扫描和安全评估也是必要的，以确保应用程序始终保持安全状态。</p><h2 id="sql注入遇到waf，怎么绕过"><a href="#sql注入遇到waf，怎么绕过" class="headerlink" title="sql注入遇到waf，怎么绕过"></a>sql注入遇到waf，怎么绕过</h2><p>以下是几种常见的方法：</p><ol><li>使用编码：攻击者可以对注入负载进行编码，例如使用十六进制或Unicode编码等方式，以绕过WAF对字符集的检查。攻击者还可以使用字符串分割、大小写转换等技术手段，以使WAF无法识别恶意代码。</li><li>使用注入器：SQL注入攻击工具如Sqlmap、Havij、SQLi-hunter等，可以自动检测和利用各种SQL注入漏洞，并通过绕过WAF来获取敏感数据。</li><li>盲注：在盲注攻击中，攻击者不直接获取查询结果，而是根据应用程序的响应来判断是否存在漏洞。攻击者可以使用时间延迟或错误信息来判断是否存在漏洞，并以此来推断数据库中的数据。</li><li>变形注入：变形注入攻击是一种多次执行的注入攻击，使用变体的注入负载，使注入负载不同于以前的攻击负载，从而逃避WAF的检测。</li></ol><h2 id="了解过哪些安全设备"><a href="#了解过哪些安全设备" class="headerlink" title="了解过哪些安全设备"></a>了解过哪些安全设备</h2><ol><li>华为防火墙：华为防火墙是华为公司生产的安全产品之一，主要用于网络边界安全和数据中心安全。它提供了多种安全功能，例如流量管理、入侵检测、VPN接入等。</li><li>绿盟防火墙：绿盟防火墙是北京绿盟科技有限公司开发的一款网络安全产品，具有防御DDoS、DNS攻击、漏洞利用等攻击的能力，还支持大规模分布式部署。</li><li>启明星辰边界安全网关：启明星辰边界安全网关是启明信息技术股份有限公司推出的一款综合性安全产品，它能够提供网络访问控制、应用层协议识别、反病毒防护、VPN等多种安全功能。</li><li>360天擎安全产品：360天擎安全产品是由360集团推出的综合性安全产品，包括了防火墙、入侵检测、威胁情报、网络行为分析等多种安全功能，可支持大规模企业部署。</li><li>安恒安全产品：安恒信息安全技术有限公司是国内知名的网络安全服务提供商之一，其生产的安全产品包括了威胁情报、攻击检测、漏洞管理等多种安全功能，广泛应用于金融、电信、政府等行业。</li></ol><h2 id="了解过哪些安全产品"><a href="#了解过哪些安全产品" class="headerlink" title="了解过哪些安全产品"></a>了解过哪些安全产品</h2><ol><li>网络安全设备类：网络安全设备类产品主要包括防火墙、入侵检测系统、Web应用安全网关、DDoS防护等。例如华为防火墙、启明星辰边界安全网关、绿盟防火墙、360天擎等。</li><li>终端安全类：终端安全产品主要用于保护个人电脑、移动设备和服务器的安全，主要包括反病毒软件、安全加固、数据加密、身份认证等。例如360安全卫士、金山毒霸、腾讯电脑管家等。</li><li>数据安全类：数据安全产品主要用于保护企业敏感数据不被泄露或篡改，主要包括加密、备份恢复、数据控制等。例如深信服信息加密解决方案、启明星辰数据加密产品、山石网科数据泄漏防护等。</li><li>互联网安全类：互联网安全产品主要用于保护企业在互联网上的各种应用、网站、云服务等安全，主要包括云安全、移动安全、Web应用安全和容器安全等。例如弘善网络云安全解决方案、卫士通移动安全系统、腾讯安全云等。</li></ol><h2 id="冰蝎的流量特征是什么"><a href="#冰蝎的流量特征是什么" class="headerlink" title="冰蝎的流量特征是什么"></a>冰蝎的流量特征是什么</h2><p>冰蝎是一种常见的远控工具(RAT)，其流量特征如下：</p><ol><li>使用HTTP协议：冰蝎使用HTTP协议与C&amp;C服务器通信，从而绕过网络策略和防火墙的检测。</li><li>自定义加密：冰蝎使用自定义加密算法对数据进行加密，以避免被网络监测器和安全设备检测到。</li><li>动态命令: 通过inline和eval函数动态执行指令并返回结果，这使得冰蝎可以运行各种自定义代码，例如扫描目标、下载和安装其他恶意软件等。</li><li>内存驻留: 冰蝎不需要在受感染设备上安装文件或建立持久性，它只需要注入进程并在内存中驻留，从而难以被传统杀毒软件检测和清除。</li><li>支持多平台：冰蝎支持Windows, Linux, and Mac OS等操作系统，这使得攻击者可以在跨多个平台上远程控制受感染设备。</li></ol><p>总之，冰蝎的流量特征是使用HTTP协议、自定义加密、动态命令、内存驻留和支持多平台。网络管理员可以根据这些特征来识别和阻止冰蝎远控攻击。</p><h2 id="使用猕猴桃工具需要什么权限"><a href="#使用猕猴桃工具需要什么权限" class="headerlink" title="使用猕猴桃工具需要什么权限"></a>使用猕猴桃工具需要什么权限</h2><p>猕猴桃是一种常用的网络安全工具，使用该工具需要以下权限：</p><ol><li>对目标主机进行扫描：猕猴桃工具需要能够对目标主机或网络进行扫描，以收集有关目标系统和服务的信息。因此，使用者需要有足够的网络访问权限，以便对目标进行扫描和探测。</li><li>探测漏洞：猕猴桃工具通过对目标系统和服务进行扫描，并使用已知的漏洞进行测试，从而确定可能存在的安全漏洞。这需要使用者有足够的权限，以便在目标主机上执行相关的漏洞检测工作。</li><li>管理目标系统：有时候，为了修复发现的漏洞，需要对目标系统进行配置和管理。这需要使用者拥有足够的管理员权限，以便修改系统设置、安装补丁等。</li></ol><h2 id="sqlmap常用命令"><a href="#sqlmap常用命令" class="headerlink" title="sqlmap常用命令"></a>sqlmap常用命令</h2><p>SQLMap是一种常用的自动化SQL注入攻击工具，可以对目标网站进行全自动的SQL注入漏洞扫描和利用。以下是一些SQLMap的常用命令：</p><ol><li>基本扫描命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --dbs       # 获取所有可利用的数据库</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; -D dbname --tables  # 获取指定数据库中的所有表</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; -D dbname -T tablename --columns   # 获取指定表中的所有列</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; -D dbname -T tablename -C columnname --dump    # 获取指定列中的数据</span><br></pre></td></tr></table></figure><ol><li>POST请求和Cookie：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://target.com/login.php&quot; --data=&quot;username=admin&amp;password=1234&quot; --cookie=&quot;PHPSESSID=abcd1234&quot; --level=5 --risk=3   # 向登录页面发送POST请求和Cookie，并对网站进行深度扫描</span><br></pre></td></tr></table></figure><ol><li>手动指定注入点：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --dbms=mysql --technique=T --random-agent --level=5 --risk=3 --current-db --users --passwords --privileges --threads=10 --batch --skip-waf --tamper=randomcomments -p id   # 指定注入点为id参数，绕过WAF设置，使用随机HTTP头和注入负载进行扫描</span><br></pre></td></tr></table></figure><ol><li>高级命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --os-shell     # 获取操作系统Shell</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --os-pwn       # 获取操作系统级别的访问权限</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --file-read=&quot;/var/www/config.php&quot;  # 读取指定文件内容</span><br><span class="line">sqlmap -u &quot;http://target.com/page.php?id=1&quot; --file-write=&quot;/var/www/shell.php&quot; --file-dest=&quot;/var/www/html/&quot; --tamper=&quot;apostrophemask.py&quot; --batch   # 向目标服务器写入Web Shell</span><br></pre></td></tr></table></figure><h2 id="nmap存在什么漏洞"><a href="#nmap存在什么漏洞" class="headerlink" title="nmap存在什么漏洞"></a>nmap存在什么漏洞</h2><p>Nmap是一种用于网络探测和安全评估的常用工具，不过它本身也存在一些漏洞，以下是一些已公开的Nmap漏洞：</p><ol><li>CVE-2016-3714: ImageMagick命令注入漏洞</li></ol><p>Nmap使用ImageMagick库来处理图像，在旧版本的ImageMagick中存在命令注入漏洞。攻击者可以构造恶意图像文件，通过Nmap执行这些文件的时候触发该漏洞，导致执行任意命令。</p><ol><li>CVE-2017-11615：脚本引擎环境变量注入漏洞</li></ol><p>Nmap支持在其脚本引擎中执行Lua脚本，而在某些情况下，攻击者可以利用环境变量注入漏洞来执行恶意Lua脚本，从而危及系统安全。</p><ol><li>CVE-2018-15173: 路径遍历漏洞</li></ol><p>该漏洞存在于Nmap HTTP服务器中，攻击者可以利用此漏洞通过HTTP服务在目标系统上执行任意命令。</p><p>需要注意的是，这些漏洞大多数已经被修复，并且很少会对最新版本的Nmap构成威胁。建议用户始终使用最新版本的Nmap，并遵循最佳实践，如限制对Nmap的访问权限，避免使用默认帐户和密码，以及定期更新配置文件等。</p><h2 id="nmap常用口令"><a href="#nmap常用口令" class="headerlink" title="nmap常用口令"></a>nmap常用口令</h2><p>Nmap是一种常用的端口扫描和网络发现工具，可以使用各种方式来扫描目标主机和网络，并检测可用的服务和隐蔽的漏洞。以下是一些常用的Nmap口令：</p><ol><li>扫描单个主机：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">nmap &lt;target_ip&gt;                 # 扫描指定IP地址</span><br><span class="line">nmap &lt;target_hostname&gt;           # 扫描指定主机名</span><br><span class="line">nmap -p 1-65535 &lt;target&gt;          # 扫描所有端口</span><br><span class="line">nmap -sV &lt;target&gt;                # 扫描目标版本信息</span><br><span class="line">nmap -O &lt;target&gt;                 # 扫描目标操作系统信息</span><br></pre></td></tr></table></figure><ol><li>扫描多个主机：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">nmap &lt;subnet&gt;                    # 扫描子网中的所有主机</span><br><span class="line">nmap -iL &lt;targets.txt&gt;           # 扫描包含目标主机列表的文件</span><br><span class="line">nmap -sP &lt;subnet&gt;                # 扫描子网中的所有活动主机（ping扫描）</span><br></pre></td></tr></table></figure><ol><li>扫描特定协议：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">nmap -sT &lt;target&gt;                # 使用TCP进行扫描</span><br><span class="line">nmap -sU &lt;target&gt;                # 使用UDP进行扫描</span><br><span class="line">nmap -sS &lt;target&gt;                # 使用SYN进行扫描</span><br><span class="line">nmap -sA &lt;target&gt;                # 使用ACK进行扫描</span><br><span class="line">nmap -sF &lt;target&gt;                # 使用FIN进行扫描</span><br><span class="line">nmap -sX &lt;target&gt;                # 使用XMAS进行扫描</span><br></pre></td></tr></table></figure><ol><li>扫描选项和指令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">nmap -T&lt;level&gt; &lt;target&gt;          # 设置扫描速度（0-5，默认为3）</span><br><span class="line">nmap --top-ports=&lt;number&gt; &lt;target&gt;     # 指定前N个常用端口进行扫描</span><br><span class="line">nmap --script=&lt;name&gt; &lt;target&gt;    # 使用指定的脚本进行扫描</span><br><span class="line">nmap -oA &lt;basename&gt; &lt;target&gt;     # 生成三种格式的输出文件（文本、XML、gnmap）</span><br><span class="line">nmap -v &lt;target&gt;                 # 显示详细信息</span><br></pre></td></tr></table></figure><h2 id="给你一个ip，你如何溯源到真人"><a href="#给你一个ip，你如何溯源到真人" class="headerlink" title="给你一个ip，你如何溯源到真人"></a>给你一个ip，你如何溯源到真人</h2><ol><li>Whois查询：可以通过Whois工具或网站查询IP地址的拥有者和注册信息，包括公司名称、联系人和注册日期等。如果该IP地址属于一个企业或机构，还可以了解其业务性质和所处行业。</li><li>端口扫描：使用端口扫描工具（如Nmap）来探测目标主机上开放的服务和端口，从而推断出其所属行业、用途和技术特征等。</li><li>元数据分析：通过分析目标网站上的元数据，如网页标题、描述和关键字等，以及抓取页面内容和搜索引擎索引等，可以了解网站的业务性质、所处行业和活动范围等。</li><li>社交媒体监测：通过监测目标主机和公司的社交媒体账号，例如微博、LinkedIn和Facebook等，可以获取更多的信息和联系方式，并尝试建立人际关系网络。</li></ol><h2 id="正向shell和反向shell的区别是什么"><a href="#正向shell和反向shell的区别是什么" class="headerlink" title="正向shell和反向shell的区别是什么"></a>正向shell和反向shell的区别是什么</h2><p>正向shell和反向shell都是与远程主机建立命令行连接的工具，可以允许用户执行命令或者进行文件传输等操作。它们的区别在于连接的方向和建立方式：</p><ol><li>正向shell</li></ol><p>正向shell通常是在目标主机上启动一个服务端程序，等待用户连接并进行身份验证后，允许用户在该主机上执行命令。因此，正向shell需要用户能够直接连接到目标主机，并且需要提供一些身份验证方式来保障安全性。</p><ol><li>反向shell</li></ol><p>反向shell则是在攻击者主机上启动一个客户端程序，通过网络连接到目标主机并执行指定的命令或脚本。这种方式通常需要绕过防火墙和其他安全措施，利用漏洞或社会工程学技巧获取目标主机的网络访问权限，因此往往会被视为一种黑客攻击技术。</p><h2 id="连接不了MySQL数据库站点的原因是什么？"><a href="#连接不了MySQL数据库站点的原因是什么？" class="headerlink" title="连接不了MySQL数据库站点的原因是什么？"></a>连接不了MySQL数据库站点的原因是什么？</h2><p>连接不上MySQL数据库站点的原因可能有很多，以下是一些可能的原因：</p><ol><li>数据库服务未启动或已停止：如果MySQL服务器未正确启动或已停止，就无法连接到该服务。</li><li>网络连接问题：如果网络连接不稳定或存在障碍，就可能导致连接失败。例如，防火墙可能会阻止对MySQL端口的访问，或者路由器可能会限制对外部主机的访问。</li><li>认证失败：如果提供的用户名和密码无效，则连接将被拒绝。用户必须确保使用正确的凭据进行身份验证。</li><li>权限问题：如果用户没有足够的权限来连接到MySQL服务器，就可能会出现连接错误。管理员需要检查和修改授权策略以允许合适的用户访问数据库。</li><li>MySQL配置问题：MySQL安装和配置过程中可能存在问题，例如MySQL服务监听错误的网络接口、未正确设置字符集等，这些都可能导致连接失败。</li></ol><p>解决连接不上MySQL数据库站点的问题，需要仔细排除以上可能的原因，并逐步调整相关配置或修复故障。同时，建议用户采取相应的安全措施，如加密通信、限制访问权限和实施备份等来保护数据安全。</p><h2 id="文件上传的检测点有哪些"><a href="#文件上传的检测点有哪些" class="headerlink" title="文件上传的检测点有哪些"></a>文件上传的检测点有哪些</h2><p>文件上传是一种常见的Web攻击方式，攻击者可以通过上传恶意文件来获取目标系统的控制权或执行其他恶意行为。以下是一些可能用到的文件上传检测点：</p><ol><li>文件类型和扩展名：在上传文件时，应该限制允许上传的文件类型和扩展名，并禁止上传可执行文件和脚本等危险文件，例如.exe、.php、.asp等。</li><li>文件大小：应该限制上传文件的大小，以避免恶意用户上传大型文件导致系统资源耗尽，或者上传超过限制大小的文件绕过其他安全措施。</li><li>文件内容检查：对于允许上传的文件，应该进行内容检查，确保其中不包含任何恶意代码、无效数据或其他潜在的安全风险。</li><li>文件重命名：对于上传的文件，应该使用随机的文件名来避免攻击者对其进行识别和攻击。</li><li>路径遍历检查：应该检查上传文件的路径，并防止攻击者利用路径遍历漏洞来上传文件到非预期目录。</li><li>权限和访问控制：应该根据用户身份和角色来控制文件上传的权限和访问控制，防止未经授权的用户上传文件并访问到应用程序中的敏感数据。</li><li>文件处理和存储：应该将上传的文件存储在安全的位置，并对其进行适当的处理和过滤，例如加密、压缩、解压等操作。同时，应该监测并记录所有的文件上传操作，以便后续的审核和追踪。</li></ol><h2 id="常用的外围打点工具有哪些"><a href="#常用的外围打点工具有哪些" class="headerlink" title="常用的外围打点工具有哪些"></a>常用的外围打点工具有哪些</h2><p>外围打点是一种通过对目标系统进行浅层次的探测，获取其基本信息和漏洞情况等方法。以下是一些常用的外围打点工具：</p><ol><li>Nmap：Nmap是一款开源的网络探测工具，可以扫描远程主机和端口，并提供许多高级功能，如操作系统检测、服务版本识别和漏洞扫描等。</li><li>Masscan：Masscan是一款超快的端口扫描器，可以在短时间内对大量目标主机进行快速扫描，并支持TCP和UDP协议。</li><li>Hping：Hping是一款命令行的网络工具，可用于发送自定义数据包和探测目标主机的端口和服务状态。</li><li>Netcat：Netcat是一款多功能的网络工具，可用于创建TCP&#x2F;UDP连接、传输文件、执行shell命令等。</li><li>Metasploit：Metasploit是一款渗透测试框架，其中包含了许多漏洞利用模块和扫描功能，可用于快速发现目标系统的弱点并进行攻击。</li><li>Nessus：Nessus是一款商业化的漏洞扫描器，可用于检测目标主机和应用程序中的安全漏洞和风险，以及提供修复建议和报告。</li></ol><h2 id="描述一下外围打点的基本流程"><a href="#描述一下外围打点的基本流程" class="headerlink" title="描述一下外围打点的基本流程"></a>描述一下外围打点的基本流程</h2><p>外围打点是一种对目标系统进行浅层次探测的方法，可以帮助安全人员了解目标系统的基本情况和漏洞状况。下面是外围打点的基本流程：</p><ol><li><p>信息收集：在进行外围打点之前，需要先收集相关的信息，包括目标系统的IP地址、域名、开放端口和服务等。可以使用一些工具和技术来收集这些信息，如Whois查询、DNS解析、端口扫描、网络枚举等。</p></li><li><p>网络探测：在收集到目标系统的基本信息后，可以使用网络探测工具进行扫描，以获取更详细的信息和漏洞情况。常用的网络探测工具包括Nmap、Hping、Netcat等，可以进行端口扫描、协议检测、操作系统识别等。</p></li><li><p>漏洞扫描：在探测到目标系统的开放端口和服务后，可以使用漏洞扫描工具来检测其中的安全漏洞和风险。常用的漏洞扫描工具包括Nessus、OpenVAS等，可以通过自动化的方式对目标系统进行安全评估和检测，并生成相应的报告和建议。</p></li><li><p>漏洞利用：在发现目标系统的安全漏洞后，可以使用一些漏洞利用工具进行攻击和渗透测试。常用的漏洞利用工具包括Metasploit、Exploit-db等，可以通过自动化或手动的方式对目标系统进行攻击，并获取相应的权限和访问权。</p></li><li><p>安全评估：最后，需要对外围打点的结果进行分析和总结，评估目标系统的安全性和风险情况，并提出相应的建议和措施来改善安全状况。</p><h2 id="在Windows靶标站点如何建立隐藏用户？"><a href="#在Windows靶标站点如何建立隐藏用户？" class="headerlink" title="在Windows靶标站点如何建立隐藏用户？"></a>在Windows靶标站点如何建立隐藏用户？</h2></li></ol><p>在Windows靶标站点上，可以通过以下步骤建立隐藏用户：</p><ol><li><p>打开计算机管理器：在Windows菜单中搜索“计算机管理器”，或者在“控制面板”中找到“管理工具”并选择“计算机管理器”。</p></li><li><p>创建新用户：在计算机管理器中，展开“本地用户和组”，右键单击“用户”文件夹，并选择“新建用户”。在弹出的对话框中输入用户名和密码等信息，然后单击“创建”。</p></li><li><p>修改注册表：在Windows注册表中添加一个名为“SpecialAccounts”的子项。依次展开“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts”。如果该子项不存在，则需要手动创建。</p></li><li><p>添加用户：在“SpecialAccounts”下创建一个名为“UserList”的新项，然后右键选择“DWORD值”并将其命名为新创建的用户账户名称。接着将此项的数值设为0，以使该用户不会被列出在登录界面上。</p></li><li><p>保存更改：保存所有修改后，注销当前用户或重新启动计算机，隐藏用户将随之生效。</p><h2 id="文件包含漏洞的原理和防护？"><a href="#文件包含漏洞的原理和防护？" class="headerlink" title="文件包含漏洞的原理和防护？"></a>文件包含漏洞的原理和防护？</h2></li></ol><p>文件包含漏洞（File Inclusion Vulnerability）是一种常见的Web应用程序漏洞，攻击者可以利用该漏洞向服务器传递恶意数据或代码，从而获取敏感信息或控制服务器。其原理主要涉及到以下内容：</p><ol><li>文件包含方式：Web应用程序通常会使用动态脚本语言（如PHP、ASP等）来动态地生成网页内容。其中，文件包含函数（如include、require等）允许将一个文件的内容嵌入到另一个文件中，以实现模块化和重用性。</li><li>用户输入信任：当Web应用程序采用用户输入作为文件路径参数时，如果未对这些参数进行足够的过滤和验证，就可能导致恶意数据或代码被动态地加载到页面中。</li><li>恶意代码注入：攻击者可以通过向文件路径参数中注入恶意代码或文件名来触发文件包含漏洞，并在服务器上执行恶意操作。例如，攻击者可以上传一个包含恶意代码的文件，并将其作为文件路径参数传递给目标服务器，从而执行恶意操作。</li></ol><p>为了防止文件包含漏洞，需要采取一些安全措施，如下所示：</p><ol><li>过滤和验证用户输入：在接收用户输入作为文件路径参数时，必须对其进行过滤和验证，确保其中不包含任何恶意数据或代码。</li><li>使用绝对路径而非相对路径：在使用文件包含函数时，应该使用绝对路径而非相对路径，以避免攻击者通过注入如“..&#x2F;”等文件路径跳出当前目录并访问其他文件。</li><li>限制访问范围：为了防止攻击者利用文件包含漏洞攻击服务器上的敏感文件，可以通过配置文件访问权限和文件夹安全策略等方式来限制访问范围。</li><li>升级和更新软件：Web应用程序中经常会存在许多漏洞和安全风险，因此需要及时升级和更新相关软件和组件，以确保最新的补丁和安全措施已经被采纳。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 护网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 护网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++迭代器常用的辅助函数</title>
      <link href="/post/8c139f3f.html"/>
      <url>/post/8c139f3f.html</url>
      
        <content type="html"><![CDATA[<h3 id="迭代器的辅助函数"><a href="#迭代器的辅助函数" class="headerlink" title="迭代器的辅助函数"></a>迭代器的辅助函数</h3><p>STL 中有用于操作迭代器的三个函数模板，它们是：</p><ul><li><p>advance(p, n)：使迭代器 p 向前或向后移动 n 个元素</p></li><li><p>distance(p, q)：计算两个迭代器之间的距离，即迭代器 p 经过多少次 + + 操作后和迭代器 q 相等。如果调用时 p 已经指向 q 的后面，则这个函数会陷入死循环</p></li><li><p>iter_swap(p, q)：交换容器中两个迭代器指向的位置的值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    list &lt;<span class="type">int</span>&gt; <span class="built_in">lst</span>(a, a + <span class="number">5</span>);</span><br><span class="line">    list &lt;<span class="type">int</span>&gt;::iterator p = lst.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="built_in">advance</span>(p, <span class="number">2</span>);  <span class="comment">//p向后移动两个元素，指向3</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1)&quot;</span> &lt;&lt; *p &lt;&lt; endl;  <span class="comment">//输出 1)3</span></span><br><span class="line">    <span class="built_in">advance</span>(p, <span class="number">-1</span>);  <span class="comment">//p向前移动一个元素，指向2</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;2)&quot;</span> &lt;&lt; *p &lt;&lt; endl;  <span class="comment">//输出 2)2</span></span><br><span class="line">    list&lt;<span class="type">int</span>&gt;::iterator q = lst.<span class="built_in">end</span>();  <span class="comment">// end指向的是最后一个元素的下一个位置</span></span><br><span class="line">    q--;  <span class="comment">// q 指向 5</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;3)&quot;</span> &lt;&lt; <span class="built_in">distance</span>(p, q) &lt;&lt; endl;  <span class="comment">//输出 3)3</span></span><br><span class="line">    <span class="built_in">iter_swap</span>(p, q); <span class="comment">// 交换容器中两个位置的值</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;4)&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (p = lst.<span class="built_in">begin</span>(); p != lst.<span class="built_in">end</span>(); ++p)</span><br><span class="line">        cout &lt;&lt; *p &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/12/p9yhLTg.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 实用函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++迭代器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++字符串分割的常用方法</title>
      <link href="/post/54c3fa40.html"/>
      <url>/post/54c3fa40.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://www.jianshu.com/p/e9924ba9b18c">strtok_s 函数说明</a></p><p>C++没有python那样的split分割函数，但string.h和string类提供了下列函数方便我们处理字符串</p><h2 id="函数与用例"><a href="#函数与用例" class="headerlink" title="函数与用例"></a>函数与用例</h2><h3 id="1-strtok-s"><a href="#1-strtok-s" class="headerlink" title="1. strtok_s"></a>1. strtok_s</h3><p><strong>应用</strong>：将字符串按照给定字符进行分割</p><p><strong>参数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">char</span>* <span class="title">strtok_s</span><span class="params">(<span class="type">char</span>* str, <span class="type">const</span> <span class="type">char</span>* delimiters, <span class="type">char</span>** next_token)</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个参数是待分割的字符串</span></span><br><span class="line"><span class="comment">第二个参数是指定作为分界线的字符</span></span><br><span class="line"><span class="comment">第三个参数是分割剩余的子字符串的存储位置</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：分割成功返回得到的第一个子字符串，无法再分割返回NULL</p><p><strong>注意</strong>：第二个参数是const char<em>类型，不要忘记加<strong>const</strong>；第三个参数是二级指针，不要忘记对一级指针*<em>取地址</em></em>&amp;</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> str[] = <span class="string">&quot;https-dqywy-top&quot;</span>;<span class="comment">// 待分割的字符串</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> delim[] = <span class="string">&quot;-&quot;</span>;<span class="comment">// 分割符</span></span><br><span class="line">    <span class="type">char</span>* token;<span class="comment">// 存储返回的子字符串</span></span><br><span class="line"><span class="type">char</span> *next_token = <span class="literal">NULL</span>;<span class="comment">// 存储未处理的子字符串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取第一个子字符串</span></span><br><span class="line">token = <span class="built_in">strtok_s</span>(str, delim, &amp;next_token);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取其余子字符串</span></span><br><span class="line"><span class="keyword">while</span> (token != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; token &lt;&lt; endl;<span class="comment">// 注意打印应该传token而不是*token，*token是字符，token是字符串的首地址</span></span><br><span class="line">token = <span class="built_in">strtok_s</span>(next_token, delim, &amp;next_token);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-find"><a href="#2-find" class="headerlink" title="2. find"></a>2. find</h3><p><strong>应用</strong>：查找指定子字符串的是否存在及具体位置</p><p><strong>参数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">size_t</span> <span class="title">find</span><span class="params">(<span class="type">const</span> string&amp; str, <span class="type">size_t</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个参数是待查找的子字符串</span></span><br><span class="line"><span class="comment">第二个参数是开始匹配的位置</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：匹配成功返回子字符串的第一个字符在整个字符串的下标；匹配失败返回string::npos (即-1)</p><p><strong>注意</strong>：匹配失败返回的string::npos实质上就是-1</p><p><strong>实例</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str = <span class="string">&quot;https-dqywy-top&quot;</span>;</span><br><span class="line"><span class="type">int</span> pos = <span class="number">0</span>;<span class="comment">// 起始查找位置</span></span><br><span class="line">    string goal = <span class="string">&quot;dqywy&quot;</span>;<span class="comment">// 目标字符串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((pos = str.<span class="built_in">find</span>(goal, <span class="number">0</span>)) != string::npos)<span class="comment">// 即子字符串存在</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串&#x27;dqywy&#x27;第一次出现的位置为：&quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    pos = <span class="number">0</span>;<span class="comment">// 重置起始查找位置</span></span><br><span class="line">    goal = <span class="string">&quot;ljywz&quot;</span>;<span class="comment">// </span></span><br><span class="line">    <span class="keyword">if</span> ((pos = str.<span class="built_in">find</span>(goal, <span class="number">0</span>)) != string::npos)<span class="comment">// 即子字符串存在</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符串&#x27;ljywz&#x27;第一次出现的位置为：&quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符串不存在！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-substr"><a href="#3-substr" class="headerlink" title="3. substr"></a>3. substr</h3><p><strong>应用</strong>：获取从指定的起始位置开始，长度为n的子字符串</p><p><strong>参数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">substr</span><span class="params">(<span class="type">size_t</span> pos = <span class="number">0</span>, <span class="type">size_t</span> n = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个参数是起始位置</span></span><br><span class="line"><span class="comment">第二个参数是截取的子字符串的长度</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>返回值</strong>：子字符串</p><p><strong>注意</strong>：起始位置从0开始计算</p><p><strong>实例</strong>: </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str = <span class="string">&quot;https-dqywy-top&quot;</span>;</span><br><span class="line">string sub_str;<span class="comment">// 截取字符串</span></span><br><span class="line">sub_str = str.<span class="built_in">substr</span>(<span class="number">6</span>, <span class="number">5</span>);</span><br><span class="line">cout &lt;&lt; sub_str &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 实用函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++容器种类及常用函数</title>
      <link href="/post/19b597f8.html"/>
      <url>/post/19b597f8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://blog.csdn.net/tju_fengbo/article/details/81978595"> C++中的容器类详解</a></p><h2 id="容器种类"><a href="#容器种类" class="headerlink" title="容器种类"></a>容器种类</h2><table><thead><tr><th>标准容器类</th><th>说明</th></tr></thead><tbody><tr><td>顺序性容器</td><td></td></tr><tr><td>vector</td><td>从后面快速的插入与删除，直接访问任何元素</td></tr><tr><td>deque</td><td>从前面或后面快速的插入与删除，直接访问任何元素</td></tr><tr><td>list</td><td>双链表，从任何地方快速插入与删除</td></tr><tr><td></td><td></td></tr><tr><td>关联容器</td><td></td></tr><tr><td>set</td><td>快速查找，不允许重复值</td></tr><tr><td>multiset</td><td>快速查找，允许重复值</td></tr><tr><td>map</td><td>一对多映射，基于关键字快速查找，不允许重复值</td></tr><tr><td>multimap</td><td>一对多映射，基于关键字快速查找，允许重复值</td></tr><tr><td></td><td></td></tr><tr><td>容器适配器</td><td>虽然stack和queue中也可以存放元素，但在STL中并没有将其划分在容器的行列，而是将其称为容器适配器，这是因为stack和queue只是对其他容器的接口进行了包装，STL中stack和queue默认使用<a href="https://so.csdn.net/so/search?q=deque&spm=1001.2101.3001.7020">deque</a>（双端队列）</td></tr><tr><td>stack</td><td>后进先出</td></tr><tr><td>queue</td><td>先进先出</td></tr><tr><td>priority_queue</td><td>最高优先级元素总是第一个出列，优先级队列默认使用vector作为其底层存储数据的容器，在vector上又使用了堆算法将vector中元素构造成堆的结构，因此priority_queue就是堆</td></tr></tbody></table><h2 id="标准库共有函数"><a href="#标准库共有函数" class="headerlink" title="标准库共有函数"></a>标准库共有函数</h2><table><thead><tr><th>默认构造函数</th><th>提供容器默认初始化的构造函数。</th></tr></thead><tbody><tr><td>复制构造函数</td><td>将容器初始化为现有同类容器副本的构造函数</td></tr><tr><td>析构函数</td><td>不再需要容器时进行内存整理的析构函数</td></tr><tr><td>empty</td><td>容器中没有元素时返回true,否则返回false</td></tr><tr><td>max_size</td><td>返回容器中最大元素个数</td></tr><tr><td>size</td><td>返回容器中当前元素个数</td></tr><tr><td>&#x3D;</td><td>将一个容器赋给另一个容器</td></tr><tr><td>&lt;</td><td>如果第一个容器小于第二个容器，返回true，否则返回false，</td></tr><tr><td>&lt;&#x3D;</td><td>如果第一个容器小于或等于第二个容器，返回true，否则返回false</td></tr><tr><td>&gt;</td><td>如果第一个容器大于第二个容器，返回true，否则返回false</td></tr><tr><td>&gt;&#x3D;</td><td>如果第一个容器大于或等于第二个容器，返回true，否则返回false</td></tr><tr><td>&#x3D;&#x3D;</td><td>如果第一个容器等于第二个容器，返回true，否则返回false</td></tr><tr><td>!&#x3D;</td><td>如果第一个容器不等于第二个容器，返回true，否则返回false</td></tr><tr><td>swap</td><td>交换两个容器的元素</td></tr></tbody></table><p>其中&gt;，&gt;&#x3D;，&lt;，&lt;&#x3D;，&#x3D;&#x3D;，!&#x3D;均不适用于priority_queue</p><h2 id="顺序容器和关联容器共有函数"><a href="#顺序容器和关联容器共有函数" class="headerlink" title="顺序容器和关联容器共有函数"></a>顺序容器和关联容器共有函数</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>begin</td><td>该函数两个版本返回iterator或const_iterator，引用容器第一个元素</td></tr><tr><td>end</td><td>该函数两个版本返回iterator或const_iterator,引用容器<strong>最后一个元素后面一位</strong></td></tr><tr><td>rbegin</td><td>该函数两个版本返回reverse_iterator或const_reverse_iterator，引用容器最后一个元素</td></tr><tr><td>rend</td><td>该函数两个版本返回reverse_iterator或const_reverse_iterator，引用容器<strong>第一个元素前面一位</strong></td></tr><tr><td>erase</td><td>从容器中清除一个或几个元素</td></tr><tr><td>clear</td><td>清除容器中<strong>所有元素</strong></td></tr></tbody></table><h2 id="序列类容器使用区别"><a href="#序列类容器使用区别" class="headerlink" title="序列类容器使用区别"></a>序列类容器使用区别</h2><p>   1）如果你需要高效的随存随取，而不在乎插入和删除的效率，使用vector</p><p>   2）如果你需要<strong>大量</strong>的插入和删除，而不关心随机存取，则应使用list</p><p>   3）如果你需要随机存取，而且关心<strong>两端</strong>数据的插入和删除，则应使用deque</p>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 实用函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++迭代器基础用法</title>
      <link href="/post/6e85eca8.html"/>
      <url>/post/6e85eca8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="http://c.biancheng.net/view/338.html">C++迭代器（STL迭代器）iterator详解 (biancheng.net)</a></p><h2 id="迭代器种类"><a href="#迭代器种类" class="headerlink" title="迭代器种类"></a>迭代器种类</h2><ol><li><p>正向迭代器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器类名::iterator  迭代器名;</span><br></pre></td></tr></table></figure></li><li><p>常量正向迭代器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器类名::const_iterator 迭代器名;</span><br></pre></td></tr></table></figure></li><li><p>反向迭代器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器类名::reverse_iterator 迭代器名;</span><br></pre></td></tr></table></figure></li><li><p>常量反向迭代器</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器类名::const_reverse_iterator 迭代器名;</span><br></pre></td></tr></table></figure></li></ol><h2 id="迭代器使用"><a href="#迭代器使用" class="headerlink" title="迭代器使用"></a>迭代器使用</h2><p>迭代器类似于指针，可以指向容器中的不同元素并进行修改(常量迭代器无法修改)，<code>*迭代器</code>就代表元素本身</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;string&gt; flowers = &#123;<span class="string">&quot;LJY&quot;</span>, <span class="string">&quot;WY&quot;</span>, <span class="string">&quot;WZ&quot;</span>, <span class="string">&quot;DQY&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义正向迭代器</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正向迭代器: &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改前: &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;string&gt;::iterator iter = flowers.<span class="built_in">begin</span>(); iter != flowers.<span class="built_in">end</span>(); ++iter)<span class="comment">// 使用前置++效率更高</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *iter &lt;&lt; endl;</span><br><span class="line"><span class="built_in">transform</span>((*iter).<span class="built_in">begin</span>(), (*iter).<span class="built_in">end</span>(), (*iter).<span class="built_in">begin</span>(), tolower);<span class="comment">// 利用迭代器修改元素</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改后: &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;string&gt;::iterator iter = flowers.<span class="built_in">begin</span>(); iter != flowers.<span class="built_in">end</span>(); ++iter)<span class="comment">// 使用前置++效率更高</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *iter &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义反向迭代器</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n反向迭代器: &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;string&gt;::reverse_iterator iter = flowers.<span class="built_in">rbegin</span>(); iter != flowers.<span class="built_in">rend</span>(); iter++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *iter &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/12/p9yf4MV.png"></p><h3 id="功能分类"><a href="#功能分类" class="headerlink" title="功能分类"></a>功能分类</h3><ol><li><p>正向迭代器，支持以下操作：++p，p++，*p。此外，两个正向迭代器可以互相赋值，还可以用<code>==</code>和<code>!=</code>运算符进行比较。</p></li><li><p>双向迭代器，具有正向迭代器的全部功能。除此之外，若 p 是一个双向迭代器，则<code>--p</code>和<code>p--</code>都是使得 p 朝和<code>++p</code>相反的方向移动。</p></li><li><p>随机访问迭代器。具有双向迭代器的全部功能。若 p 是一个随机访问迭代器，i 是一个整型变量或常量，则 p 还支持以下操作：</p></li></ol><ul><li>p+&#x3D;i：使得 p 往后移动 i 个元素。</li><li>p-&#x3D;i：使得 p 往前移动 i 个元素。</li><li>p+i：返回 p 后面第 i 个元素的迭代器。</li><li>p-i：返回 p 前面第 i 个元素的迭代器。</li><li><strong>p[i]：返回 p 后面第 i 个元素的引用。</strong></li></ul><p>此外，两个随机访问迭代器 p1、p2 还可以用 &lt;、&gt;、&lt;&#x3D;、&gt;&#x3D; 运算符进行比较。<code>p1&lt;p2</code>的含义是：p1 经过若干次（至少一次）<code>++</code>操作后，就会等于 p2。其他比较方式的含义与此类似</p><p>对于两个随机访问迭代器 p1、p2，表达式<code>p2-p1</code>也是有定义的，其返回值是 p2 所指向元素和 p1 所指向元素的序号之差（也可以说是 p2 和 p1 之间的元素个数<strong>加一</strong>）</p><h3 id="不同容器的迭代器的功能"><a href="#不同容器的迭代器的功能" class="headerlink" title="不同容器的迭代器的功能"></a>不同容器的迭代器的功能</h3><table><thead><tr><th>容器或容器适配器</th><th>迭代器功能</th></tr></thead><tbody><tr><td>vector</td><td>随机访问</td></tr><tr><td>deque</td><td>随机访问</td></tr><tr><td>list</td><td>双向</td></tr><tr><td>set &#x2F; multiset</td><td>双向</td></tr><tr><td>map &#x2F; multimap</td><td>双向</td></tr><tr><td>stack</td><td>不支持迭代器</td></tr><tr><td>queue</td><td>不支持迭代器</td></tr><tr><td>priority_queue</td><td>不支持迭代器</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++迭代器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公告栏3D小人</title>
      <link href="/post/850eec50.html"/>
      <url>/post/850eec50.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自</p><p>在 <code>Blog/themes/Butterfly/layout/includes/widget/card_announcement.pug</code> 下添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> .xpand(style=&#x27;height:200px;&#x27;)</span><br><span class="line">  canvas.illo(width=&#x27;800&#x27; height=&#x27;800&#x27; style=&#x27;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople1.js&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/zdog.dist.js&#x27;)</span><br><span class="line">script#rendered-js(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople.js&#x27;)</span><br><span class="line">style.</span><br><span class="line">  .card-widget.card-announcement &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">  canvas &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  cursor: move;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>缩进参考：</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mvr9J.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚函数实例分析</title>
      <link href="/post/f61f36df.html"/>
      <url>/post/f61f36df.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天c++实验让我们分析下列程序的输出</p><h2 id="代码与运行结果"><a href="#代码与运行结果" class="headerlink" title="代码与运行结果"></a>代码与运行结果</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span>   <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span>   <span class="string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>   std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Base</span>() &#123; cout &lt;&lt; <span class="string">&quot;Base-ctor&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    ~<span class="built_in">Base</span>() &#123; cout &lt;&lt; <span class="string">&quot;Base-dtor&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span>)</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;Base::f(int)&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">double</span>)</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;Base::f(double)&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">g</span><span class="params">(<span class="type">int</span> i = <span class="number">10</span>)</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;Base::g()&quot;</span> &lt;&lt; i &lt;&lt; endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Derived</span>() &#123; cout &lt;&lt; <span class="string">&quot;Derived-ctor&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    ~<span class="built_in">Derived</span>() &#123; cout &lt;&lt; <span class="string">&quot;Derived-dtor&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(complex&lt;<span class="type">double</span>&gt;)</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Derived::f(complex)&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">g</span><span class="params">(<span class="type">int</span> i = <span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Derived::g()&quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(Base) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(Derived) &lt;&lt; endl;</span><br><span class="line">    Base b; <span class="comment">// Base-ctor</span></span><br><span class="line">    Derived d;  <span class="comment">// Base-ctor  Derived-ctor</span></span><br><span class="line">    Base *pb = <span class="keyword">new</span> Derived; <span class="comment">// Base-ctor  Derived-ctor 就是构造一个派生类，先调用基类构造函数再调用派生类构造函数</span></span><br><span class="line">    b.<span class="built_in">f</span>(<span class="number">1.0</span>);   <span class="comment">// Base::f(double)</span></span><br><span class="line">    d.<span class="built_in">f</span>(<span class="number">1.0</span>);   <span class="comment">// Derived::f(complex)</span></span><br><span class="line">    pb-&gt;<span class="built_in">f</span>(<span class="number">1.0</span>); <span class="comment">// Base::f(double)  1.0-&gt;double，派生类中没有(double比complex优先匹配)，直接调用基类的double</span></span><br><span class="line">    b.<span class="built_in">g</span>();      <span class="comment">// Base::g()10</span></span><br><span class="line">    d.<span class="built_in">g</span>();      <span class="comment">// Derived::g()20</span></span><br><span class="line">    pb-&gt;<span class="built_in">g</span>();    <span class="comment">// Derived::g()10</span></span><br><span class="line">    <span class="keyword">delete</span> pb;  <span class="comment">// Base-dtor !!!删除只看指针类型进行析构！！！</span></span><br><span class="line">    <span class="comment">// Derived-dtor</span></span><br><span class="line">    <span class="comment">// Base-dtor</span></span><br><span class="line">    <span class="comment">// Base-dtor</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/11/p9rBE2d.png" alt="运行结果"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>内存大小我也不是很清楚是如何计算的，但是后续输出大概搞懂了</p><ol><li><p>定义基类对象b：调用基类构造函数</p></li><li><p>定义派生类对象d：先调用基类构造函数，再调用派生类构造函数</p></li><li><p>定义基类指针指向派生类对象：实际上就是创建了一个派生类对象，同样是先调用基类构造函数，再调用派生类构造函数</p></li><li><p>b.f(1.0)：调用基类的f(double)</p></li><li><p>d.f(1.0)：优先匹配派生类对象的函数，符合complex类型(复数类，如果只输入一个值，默认作为实部)，调用派生类的f(complex)</p></li><li><p>pb-&gt;f(1.0)：pb为基类指针，f为虚函数但是1.0优先匹配double-&gt;调用基类的f(double)，如果删除基类的f(double)就会调用派生类的f(complex)</p></li><li><p>b.g()：调用基类的g(int)，未指定值默认输出10</p></li><li><p>d.g()：调用派生类的g(int)，未指定值默认输出20</p></li><li><p>pb-&gt;g()：这个我只是勉强可以理解，但是具体原理我也不太明白，pb为基类指针，g()为虚函数，如果派生类的该同名函数与基类的该函数在参数(个数与数据类型)上完全一致的话，程序会选择执行派生类的该函数并将基类的该函数的形参值赋给派生类的相应形参；如果派生类的该同名函数与基类的该函数在参数(个数与数据类型)上并非完全一致，则直接执行基类的该函数</p></li><li><p><strong>delete pb</strong>：这个很容易判断出错，注意看这个程序对基类析构函数的定义：不是虚析构函数！！！因此虽然定义了一个派生类指针但是却只会执行基类析构函数 </p><p><em>如果是使用系统默认析构函数的话，会一并析构基类与派生类，因为<strong>系统定义的析构函数是虚析构函数</strong>，因此可以执行到派生类的析构函数，所以我们如果自己要定义析构函数，推荐都定义为虚析构函数，即<code>virtual ~Base() &#123;&#125;</code></em></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 程序分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客自定义页脚</title>
      <link href="/post/a4906bff.html"/>
      <url>/post/a4906bff.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自唐志远大佬的文章：<a href="https://tzy1997.com/articles/hexo1617/">https://tzy1997.com/articles/hexo1617/</a></p><p>实现效果：</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DbSw8.png"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>直接将BlogRoot&#x2F;themes&#x2F;butterfly&#x2F;layout&#x2F;includes&#x2F;footer.pug中的所有代码替换为如下代码并自行修改内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#footer-wrap</span><br><span class="line">  #ft</span><br><span class="line">    .ft-item-1</span><br><span class="line">      .t-top</span><br><span class="line">        .t-t-l</span><br><span class="line">          p.ft-t.t-l-t Welcome</span><br><span class="line">          .bg-ad</span><br><span class="line">            div</span><br><span class="line">              | --- DQY ❤ WY ---</span><br><span class="line">            .btn-xz-box</span><br><span class="line">              a.btn-xz(href=&#x27;https://www.dqywy.top/about/&#x27;) 关于站长</span><br><span class="line">        .t-t-r</span><br><span class="line">          p.ft-t.t-l-t 博客导航</span><br><span class="line">          ul.ft-links</span><br><span class="line">            li</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/categories/博客/&#x27;) 建站指南</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/ToDoList/&#x27;) 待做清单</span><br><span class="line">            li</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/categories/&#x27;) 文章分类</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/tags/&#x27;) 文章标签</span><br><span class="line">            li</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/archives/&#x27;) 时间轴</span><br><span class="line">              a(href=&#x27;https://www.dqywy.top/about/&#x27;) 关于博主</span><br><span class="line"></span><br><span class="line">    .ft-item-2</span><br><span class="line">      p.ft-t 推荐友链</span><br><span class="line">      .ft-img-group</span><br><span class="line">        .img-group-item</span><br><span class="line">          a(href=&#x27;http://47.109.96.67:4000/&#x27;)</span><br><span class="line">            img(src=&#x27;https://s1.ax1x.com/2023/05/07/p9wAPit.jpg&#x27; alt=&#x27;狗墙&#x27;)</span><br><span class="line"></span><br><span class="line">  if theme.footer.owner.enable</span><br><span class="line">    - var now = new Date()</span><br><span class="line">    - var nowYear = now.getFullYear()</span><br><span class="line">    if theme.footer.owner.since &amp;&amp; theme.footer.owner.since != nowYear</span><br><span class="line">      .copyright!= `&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear + &#x27; &#x27;&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; $&#123;config.author&#125;`</span><br><span class="line">    else</span><br><span class="line">      .copyright!= `&amp;copy;$&#123;nowYear + &#x27; &#x27;&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; $&#123;config.author&#125;`</span><br><span class="line">  if theme.footer.copyright</span><br><span class="line">    .framework-info</span><br><span class="line">      span= _p(&#x27;footer.framework&#x27;) + &#x27; &#x27;</span><br><span class="line">      a(href=&#x27;https://hexo.io&#x27;)= &#x27;Hexo&#x27;</span><br><span class="line">      span.footer-separator |</span><br><span class="line">      span= _p(&#x27;footer.theme&#x27;) + &#x27; &#x27;</span><br><span class="line">      a(href=&#x27;https://github.com/jerryc127/hexo-theme-butterfly&#x27;)= &#x27;Butterfly&#x27;</span><br><span class="line">  if theme.footer.custom_text</span><br><span class="line">    .footer_custom_text!=`$&#123;theme.footer.custom_text&#125;`</span><br></pre></td></tr></table></figure></li><li><p>打开Blog\source\css\custom.css，缺少的文件夹或文件直接创建即可，添加下列代码</p><p>注意：下列代码的第7行，注释掉-&gt;白天模式文字为黑色，黑夜模式文字为白色；不注释掉-&gt;白天黑夜均为你自定义的颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 自定义底部  start */</span></span><br><span class="line"><span class="selector-id">#ft</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">/*color: rgb(255 255 255 / 80%) !important;*/</span></span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-1</span>,</span><br><span class="line"><span class="selector-class">.ft-item-2</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-1</span> &#123;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-2</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.t-top</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.t-top</span> <span class="selector-class">.t-t-l</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1.4</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.t-top</span> <span class="selector-class">.t-t-l</span> <span class="selector-class">.bg-ad</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-xz-box</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-xz</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--btn-bg);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--btn-color);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2.4</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-xz</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-xz-box</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-xz</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#6f42c1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.t-top</span> <span class="selector-class">.t-t-r</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-links</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-links</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-links</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#6f42c1</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-2</span> <span class="selector-class">.ft-img-group</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-t</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.t-l-t</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-2</span> <span class="selector-class">.ft-img-group</span> <span class="selector-class">.img-group-item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18.4%</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-2</span> <span class="selector-class">.ft-img-group</span> <span class="selector-class">.img-group-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ft-item-2</span> <span class="selector-class">.ft-img-group</span> <span class="selector-class">.img-group-item</span> <span class="selector-tag">a</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.ft-item-1</span> &#123;</span><br><span class="line">        <span class="attribute">flex-basis</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.ft-item-2</span> &#123;</span><br><span class="line">        <span class="attribute">flex-basis</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.t-top</span> <span class="selector-class">.t-t-l</span> <span class="selector-class">.bg-ad</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">576px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.t-top</span> &#123;</span><br><span class="line">        <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.t-top</span> <span class="selector-class">.t-t-l</span> &#123;</span><br><span class="line">        <span class="attribute">flex-basis</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.t-top</span> <span class="selector-class">.t-t-r</span> &#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">16px</span>;</span><br><span class="line">        <span class="attribute">flex-basis</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 自定义底部  End */</span></span><br></pre></td></tr></table></figure></li><li><p>将上述代码中的#6f42c1换成你的主题色，引入custom.css: 打开主题配置文件_config.butterfly.yml搜索inject找到head头部：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/10/p9Dq1US.png"></p></li><li><p>hexo三连查看效果即可</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加白天黑夜模式转换动画</title>
      <link href="/post/aa5bf2dc.html"/>
      <url>/post/aa5bf2dc.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://akilar.top/posts/d9550c81/">https://akilar.top/posts/d9550c81/</a></p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>参考教程非常详细，只是提一点可能需要注意的地方：+表示新增内容，-表示需要删除的内容，+在添加代码后不要忘记删掉并且删除后代码缩进需要保持不变</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DAigP.png"></p><p><img src="https://s1.ax1x.com/2023/05/10/p9DAeEQ.png" alt="修改后"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加顶部加载进度条</title>
      <link href="/post/277d5d10.html"/>
      <url>/post/277d5d10.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://blog.xlenco.top/posts/769f.html">https://blog.xlenco.top/posts/769f.html</a></p><p>实现效果：</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DFlin.png"></p><h2 id="查看butterfly版本"><a href="#查看butterfly版本" class="headerlink" title="查看butterfly版本"></a>查看butterfly版本</h2><p><img src="https://s1.ax1x.com/2023/05/10/p9DkimF.png"></p><p>4.5.0及以上版本主题已内置 pace.js 无需再次引入，打开主题配置文件_config.butterfly.yml搜索preloader并按下列格式修改，修改完直接hexo三连即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span> <span class="string">https://fastly.jsdelivr.net/gh/xlenco/JS-X@main/pace.js/pace.css</span></span><br></pre></td></tr></table></figure><p>4.5.0版本以下需要引入css</p><p>新建Blog\source\css\custom.css，缺少的文件夹或文件直接创建即可，添加下列代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pace</span> &#123;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">6rem</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eaecf2</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span><span class="selector-class">.pace-inactive</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">18</span>, <span class="number">194</span>, <span class="number">233</span>),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">196</span>, <span class="number">113</span>, <span class="number">237</span>),</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">246</span>, <span class="number">79</span>, <span class="number">89</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">animation</span>: gradient <span class="number">2s</span> ease infinite;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引入CSS与JS</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/10/p9DkhBF.png"></p><p>hexo三连查看效果即可</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作待做清单页面</title>
      <link href="/post/c9b8a393.html"/>
      <url>/post/c9b8a393.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://www.qcqx.cn/article/9875347c.html">博客添加待办清单页 | 轻笑Chuckle (qcqx.cn)</a></p><p>实现效果：</p><p><img src="https://s1.ax1x.com/2023/05/09/p9BcUsA.png"></p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>新建Blog\themes\butterfly\layout\includes\page\todolist.pug并添加下列代码</p><p><strong>注意：请将下列代码第二行中的&#x2F;img&#x2F;todo.webp替换为你想要展现的图片路径</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#todolist-box</span><br><span class="line">    .page-top-card(style=&#x27;background-image: url(/img/todo.png);&#x27;)</span><br><span class="line">        .content-item-tips 想做清单</span><br><span class="line">        span.content-item-title ToDoList</span><br><span class="line">        .content-bottom</span><br><span class="line">            .tips 要做的事还有很多，想做的事源源不断</span><br><span class="line">    #todolist-main</span><br><span class="line">        #todolist-left</span><br><span class="line">            each i in site.data.todolist</span><br><span class="line">                if i.seat == &#x27;left&#x27;</span><br><span class="line">                    .todolist-item</span><br><span class="line">                        h3.todolist-title=i.class_name</span><br><span class="line">                        ul.todolist-ul</span><br><span class="line">                            each item in i.todo_list</span><br><span class="line">                                li.todolist-li</span><br><span class="line">                                    if item.completed</span><br><span class="line">                                        i.fa-regular.fa-circle-check</span><br><span class="line">                                    else </span><br><span class="line">                                        i.fa-regular.fa-circle</span><br><span class="line">                                    span=item.content</span><br><span class="line">        #todolist-right</span><br><span class="line">            each i in site.data.todolist</span><br><span class="line">                if i.seat == &#x27;right&#x27;</span><br><span class="line">                    .todolist-item</span><br><span class="line">                        h3.todolist-title=i.class_name</span><br><span class="line">                        ul.todolist-ul</span><br><span class="line">                            each item in i.todo_list</span><br><span class="line">                                li.todolist-li</span><br><span class="line">                                    if item.completed</span><br><span class="line">                                        i.fa-regular.fa-circle-check</span><br><span class="line">                                    else </span><br><span class="line">                                        i.fa-regular.fa-circle</span><br><span class="line">                                    span=item.content</span><br></pre></td></tr></table></figure><p>修改Blog\themes\butterfly\layout\page.pug，将下列代码添加到如图所示的位置，注意缩进</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;todolist&#x27;</span><br><span class="line">include includes/page/todolist.pug</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/09/p9BgVTP.png"></p><p>新建Blog\source \ _data\todolist.yml，清单内容请自行修改，completed为true代表已完成</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想做的项目</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">个人主页</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">公众号</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想看的书</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">《毛泽东选集》</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">《86不存在的战区》</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想买的东西</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">小米平板5pro</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">致态固态硬盘</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想学的技术</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">Vue2/Vue3</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">Electron</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想去的地方</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">桂林</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">杭州</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>打开Blog\source\css\custom.css并在末尾添加下列代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#todolist-box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">16px</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>:none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-right</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.todolist-item</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fae4df</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">1rem</span> <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f7a796</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line"><span class="selector-class">.todolist-item</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#242424</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#51908b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.todolist-li</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-class">.todolist-title</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.todolist-li</span>&#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.todolist-li</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">700px</span>)&#123;</span><br><span class="line">    <span class="selector-id">#todolist-left</span>,<span class="selector-id">#todolist-right</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span>&#123;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20.5rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">2.7rem</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span> <span class="selector-tag">span</span><span class="selector-class">.content-item-title</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2.3em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: STZhongsong,<span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span> <span class="selector-class">.content-bottom</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">5.4rem</span>);</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span> <span class="selector-class">.page-top-card</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: .<span class="number">92</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建页面：在Blog根目录打开Git Bash，输入下列代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;ToDoList&quot;</span></span><br></pre></td></tr></table></figure><p>修改front-matter</p><p><img src="https://s1.ax1x.com/2023/05/09/p9Bgbh8.png"></p><p>添加到导航菜单</p><p>打开主题配置文件_config.butterfly.yml，图标我用的是标签的图标，因为我的标签页没有启用，你可以更换成自己想要的</p><p><img src="https://s1.ax1x.com/2023/05/09/p9BRYzF.png"></p><h2 id="hexo三连"><a href="#hexo三连" class="headerlink" title="hexo三连"></a>hexo三连</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现文章点赞</title>
      <link href="/post/8b08ba9.html"/>
      <url>/post/8b08ba9.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参考自：<a href="https://www.qcqx.cn/article/5de26c08.html">网站添加点赞、踩功能 | 轻笑Chuckle (qcqx.cn)</a></p><p>今天按照上述教程操作了一遍实现了博客文章点赞功能，最终效果：</p><p><img src="https://s1.ax1x.com/2023/05/09/p9BdV81.png"></p><h2 id="部署OrLike"><a href="#部署OrLike" class="headerlink" title="部署OrLike"></a>部署OrLike</h2><p>注册登录<a href="https://leancloud.app/">LeanCloud</a>并创建应用-&gt;回到首页点击应用设置</p><p><img src="https://s1.ax1x.com/2023/05/09/p9BdbM6.png"></p><p>点击应用凭证并保存AppID和AppKey的值</p><p><img src="https://s1.ax1x.com/2023/05/09/p9Bd7xx.png"></p><p>点击数据存储-&gt;结构化数据-&gt;创建Class，名称设置为OrLike，不用改其余配置</p><p><img src="https://s1.ax1x.com/2023/05/09/p9BwGo4.png"></p><h4 id="点击-一键部署-New-Project-–-Vercel-，将应用部署到Vercel，未注册Vercel请参考添加Twikoo实现博客在线评论"><a href="#点击-一键部署-New-Project-–-Vercel-，将应用部署到Vercel，未注册Vercel请参考添加Twikoo实现博客在线评论" class="headerlink" title="点击[一键部署](New Project – Vercel)，将应用部署到Vercel，未注册Vercel请参考添加Twikoo实现博客在线评论"></a>点击[一键部署](<a href="https://vercel.com/new/clone?repository-url=https://github.com/caibingcheng/orlike-vercel">New Project – Vercel</a>)，将应用部署到Vercel，未注册Vercel请参考<a href="https://www.dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a></h4><h4 id="由于Vercel域名被墙，需要修改Vercel域名，请参考添加Twikoo实现博客在线评论"><a href="#由于Vercel域名被墙，需要修改Vercel域名，请参考添加Twikoo实现博客在线评论" class="headerlink" title="由于Vercel域名被墙，需要修改Vercel域名，请参考添加Twikoo实现博客在线评论"></a>由于Vercel域名被墙，需要修改Vercel域名，请参考<a href="https://www.dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a></h4><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><p><em>今天完全搞忘了这一步导致云函数一直报错500，蠢哭了<del>_</del></em></p><p>打开刚刚部署的项目点击settings</p><p><img src="https://s1.ax1x.com/2023/05/09/p9B0aNQ.png"></p><p>点击Environment Variables并填入Key和Value，这里注意：Key填”APPID”和”APPKEY”</p><p><img src="https://s1.ax1x.com/2023/05/09/p9B011I.png"></p><h2 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h2><p>以Hexo-butterfly主题框架为例：</p><p>  修改themes\butterfly\layout\includes\post\reward.pug，在末尾添加以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#orlike-box.<span class="property">orlike</span>-box</span><br><span class="line">  script.</span><br><span class="line">    (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">loadOrLike</span> () &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">OrLike</span>(&#123;</span><br><span class="line">          <span class="attr">serverUrl</span>: <span class="string">&quot;你的api&quot;</span>,</span><br><span class="line">          <span class="attr">el</span>: <span class="string">&quot;.orlike-box&quot;</span>,</span><br><span class="line">          <span class="attr">days</span>: <span class="number">30</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">pjax</span> ? <span class="title function_">loadOrLike</span>() : <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, loadOrLike)</span><br><span class="line">    &#125;)()</span><br></pre></td></tr></table></figure><p>修改themes\butterfly\layout\includes\header\post-info.pug，在末尾添加以下代码，注意缩进在.meta-firstline内，与上方if保持一致即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">span.post-meta-orlike</span><br><span class="line">    i.iconfont.icon-aixin.fa-fw.post-meta-icon</span><br><span class="line">    span.post-meta-label= &#x27;点赞数:&#x27;</span><br><span class="line">    a(href=url_for(page.path) + &#x27;#orlike-box&#x27;)</span><br><span class="line">        span.orlike-count</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/09/p9B6PhD.png"></p><p>新建Blog\source\js\orlike.js，路径中缺少的文件夹或文件直接创建即可，添加下列代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> version = <span class="string">&quot;V0.1.33&quot;</span>; <span class="keyword">function</span> <span class="title function_">setCookie</span>(<span class="params">cname, cvalue, exdays</span>) &#123; <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(); d.<span class="title function_">setTime</span>(d.<span class="title function_">getTime</span>() + (exdays * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>)); <span class="keyword">var</span> expires = <span class="string">&quot;expires=&quot;</span> + d.<span class="title function_">toGMTString</span>(); <span class="variable language_">document</span>.<span class="property">cookie</span> = cname + <span class="string">&quot;=&quot;</span> + cvalue + <span class="string">&quot;; &quot;</span> + expires; &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params">cname</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> name = cname + <span class="string">&quot;=&quot;</span>; <span class="keyword">var</span> ca = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>); <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ca.<span class="property">length</span>; i++) &#123; <span class="keyword">var</span> c = ca[i].<span class="title function_">trim</span>(); <span class="keyword">if</span> (c.<span class="title function_">indexOf</span>(name) == <span class="number">0</span>) &#123; <span class="keyword">return</span> c.<span class="title function_">substring</span>(name.<span class="property">length</span>, c.<span class="property">length</span>); &#125; &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createLink</span>(<span class="params">url</span>) &#123; <span class="keyword">let</span> link = $(<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>)); link.<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, url); link.<span class="title function_">attr</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;stylesheet&#x27;</span>); link.<span class="title function_">attr</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>); $(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">after</span>(link); &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">OrLike</span>(<span class="params">&#123; serverUrl = <span class="string">&quot;&quot;</span>, el = <span class="string">&quot;&quot;</span>, days = <span class="number">30</span>, style = <span class="string">&quot;&quot;</span>, ifont = <span class="string">&quot;&quot;</span>, icon = &#123; like: <span class="string">&quot;fa fa-thumbs-up&quot;</span>, dislike: <span class="string">&quot;fa fa-thumbs-down&quot;</span> &#125;, &#125; = &#123;&#125;</span>) &#123; <span class="variable language_">this</span>.<span class="property">serverUrl</span> = serverUrl; <span class="variable language_">this</span>.<span class="property">el</span> = el; <span class="variable language_">this</span>.<span class="property">style</span> = style; <span class="variable language_">this</span>.<span class="property">ifont</span> = ifont; <span class="variable language_">this</span>.<span class="property">days</span> = days; <span class="variable language_">this</span>.<span class="property">icon</span> = icon; <span class="variable language_">this</span>.<span class="property">ckid</span> = <span class="string">&quot;&quot;</span>; <span class="variable language_">this</span>.<span class="title function_">prepare</span>(); <span class="variable language_">this</span>.<span class="title function_">init</span>(); &#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">prepare</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="variable language_">this</span>.<span class="property">el</span>).<span class="title function_">addClass</span>(<span class="string">&quot;orlike-loading&quot;</span>); <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">style</span> != <span class="string">&quot;&quot;</span>) &#123; <span class="title function_">createLink</span>(<span class="variable language_">this</span>.<span class="property">style</span>); &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ifont</span> != <span class="string">&quot;&quot;</span>) &#123; <span class="title function_">createLink</span>(<span class="variable language_">this</span>.<span class="property">ifont</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">init</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    server_url = <span class="variable language_">this</span>.<span class="property">serverUrl</span>; obj = <span class="variable language_">this</span>; $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="attr">url</span>: server_url + <span class="string">&#x27;/tmp&#x27;</span>, <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>, <span class="attr">jsonp</span>: <span class="string">&quot;callback&quot;</span>, <span class="attr">jsonpCallback</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">xhrFields</span>: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;, <span class="attr">async</span>: <span class="literal">true</span>, <span class="attr">crossDomain</span>: <span class="literal">true</span>, <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> template = $(data.<span class="property">template</span>); <span class="keyword">let</span> icon_like = template.<span class="title function_">siblings</span>(<span class="string">&quot;a.likeit.orlike&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;i&quot;</span>); <span class="keyword">let</span> icon_dislike = template.<span class="title function_">siblings</span>(<span class="string">&quot;a.dislikeit.orlike&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;i&quot;</span>); icon_like.<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>, obj.<span class="property">icon</span>.<span class="property">like</span>); icon_dislike.<span class="title function_">attr</span>(<span class="string">&#x27;class&#x27;</span>, obj.<span class="property">icon</span>.<span class="property">dislike</span>); <span class="keyword">if</span> (obj.<span class="property">icon</span>.<span class="property">like</span> == <span class="literal">false</span>)</span><br><span class="line">                icon_like.<span class="title function_">remove</span>(); <span class="keyword">if</span> (obj.<span class="property">icon</span>.<span class="property">dislike</span> == <span class="literal">false</span>)</span><br><span class="line">                icon_dislike.<span class="title function_">remove</span>(); $(obj.<span class="property">el</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;orlike-loading&quot;</span>); $(obj.<span class="property">el</span>).<span class="title function_">html</span>(template); obj.<span class="title function_">ckusr</span>(obj); $(<span class="string">&#x27;a.likeit.orlike&#x27;</span>).<span class="title function_">click</span>(&#123; <span class="attr">obj</span>: obj &#125;, obj.<span class="property">like</span>); $(<span class="string">&#x27;a.dislikeit.orlike&#x27;</span>).<span class="title function_">click</span>(&#123; <span class="attr">obj</span>: obj &#125;, obj.<span class="property">dislike</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">ckusr</span> = <span class="keyword">function</span> (<span class="params">obj</span>) &#123;</span><br><span class="line">    server_url = <span class="variable language_">this</span>.<span class="property">serverUrl</span>; $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="attr">url</span>: server_url + <span class="string">&#x27;/ckusr&#x27;</span>, <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>, <span class="attr">jsonp</span>: <span class="string">&quot;callback&quot;</span>, <span class="attr">jsonpCallback</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">xhrFields</span>: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;, <span class="attr">async</span>: <span class="literal">false</span>, <span class="attr">crossDomain</span>: <span class="literal">true</span>, <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">stat</span> == <span class="string">&#x27;ok&#x27;</span> &amp;&amp; data.<span class="property">uid</span> != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                obj.<span class="property">ckid</span> = data.<span class="property">ckid</span>; <span class="keyword">if</span> (!<span class="title function_">getCookie</span>(data.<span class="property">ckid</span>)) &#123; <span class="title function_">setCookie</span>(data.<span class="property">ckid</span>, data.<span class="property">uid</span>, obj.<span class="property">days</span>); &#125;</span><br><span class="line">                obj.<span class="title function_">query</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;connect orlike failed!!!&#x27;</span>); &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">query</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    server_url = <span class="variable language_">this</span>.<span class="property">serverUrl</span>; $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="attr">url</span>: server_url + <span class="string">&#x27;/qry?link=&#x27;</span> + <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>, <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>, <span class="attr">jsonp</span>: <span class="string">&quot;callback&quot;</span>, <span class="attr">jsonpCallback</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">xhrFields</span>: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;, <span class="attr">crossDomain</span>: <span class="literal">true</span>, <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">stat</span> == <span class="string">&#x27;ok&#x27;</span>) &#123; </span><br><span class="line">                $(<span class="string">&#x27;a.likeit.orlike i span&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;like&#x27;</span>]);</span><br><span class="line">                $(<span class="string">&#x27;span.post-meta-orlike a span&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;like&#x27;</span>]);</span><br><span class="line">                $(<span class="string">&#x27;a.dislikeit.orlike i span&#x27;</span>).<span class="title function_">text</span>(data[<span class="string">&#x27;dislike&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;query orlike failed!!!&#x27;</span>); &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">orl</span> = <span class="keyword">function</span> (<span class="params">obj, method</span>) &#123; server_url = obj.<span class="property">serverUrl</span>; req_url = server_url + <span class="string">&#x27;/orl?method=&#x27;</span> + method + <span class="string">&#x27;&amp;link=&#x27;</span> + <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span> + <span class="string">&#x27;&amp;&#x27;</span> + obj.<span class="property">ckid</span> + <span class="string">&#x27;=&#x27;</span> + <span class="title function_">getCookie</span>(obj.<span class="property">ckid</span>); $.<span class="title function_">ajax</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="attr">url</span>: req_url, <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>, <span class="attr">jsonp</span>: <span class="string">&quot;callback&quot;</span>, <span class="attr">jsonpCallback</span>: <span class="string">&quot;success&quot;</span>, <span class="attr">xhrFields</span>: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;, <span class="attr">crossDomain</span>: <span class="literal">true</span>, <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123; obj.<span class="title function_">query</span>(); &#125;, &#125;); &#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">like</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123; obj = event.<span class="property">data</span>.<span class="property">obj</span>; obj.<span class="title function_">orl</span>(obj, <span class="string">&#x27;like&#x27;</span>); &#125;</span><br><span class="line"><span class="title class_">OrLike</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">dislike</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123; obj = event.<span class="property">data</span>.<span class="property">obj</span>; obj.<span class="title function_">orl</span>(obj, <span class="string">&#x27;dislike&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件_config.butterfly.yml，搜索inject引入orlike.js和JQ</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer=&quot;true&quot;</span> <span class="string">src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer=&quot;true&quot;</span> <span class="string">src=&quot;/js/orlike.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/09/p9B6cHx.png"></p><p>打开Blog\source\css\custom.css，缺少的文件夹或文件直接创建即可，在末尾写入下列代码并在主题配置文件_config.butterfly.yml引入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.orlike</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26px</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#2ed0d9fc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line"><span class="selector-class">.orlike</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.85</span>);</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">#23a8af99</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orlike</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">36px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orlike</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0.3rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orlike-box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">52px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orlike</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f07e7e</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line"><span class="selector-class">.orlike</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e87373e8</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.orlike-loading</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">39px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#acacac</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: transparent;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: orlike-loadingRotate <span class="number">0.75s</span> linear infinite;</span><br><span class="line">    <span class="attribute">animation</span>: orlike-loadingRotate <span class="number">0.75s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> orlike-loadingRotate &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> orlike-loadingRotate &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/09/p9Bck5T.png"></p><h2 id="hexo三连"><a href="#hexo三连" class="headerlink" title="hexo三连"></a>hexo三连</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>for循环的新型遍历</title>
      <link href="/post/c87cbb52.html"/>
      <url>/post/c87cbb52.html</url>
      
        <content type="html"><![CDATA[<h4 id="c-遍历容器一般是这样的"><a href="#c-遍历容器一般是这样的" class="headerlink" title="c++遍历容器一般是这样的"></a>c++遍历容器一般是这样的</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; name = &#123;<span class="string">&quot;ljy&quot;</span>, <span class="string">&quot;wy&quot;</span>, <span class="string">&quot;wz&quot;</span>, <span class="string">&quot;dqy&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = name.<span class="built_in">begin</span>(); i != name.<span class="built_in">end</span>(); i++)<span class="comment">// 这里auto替换了std::vector&lt;std::string&gt;::iterator</span></span><br><span class="line">    std::cout &lt;&lt; *i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h4 id="在c-11中我们可以简化成这样"><a href="#在c-11中我们可以简化成这样" class="headerlink" title="在c++11中我们可以简化成这样"></a>在c++11中我们可以简化成这样</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; name = &#123;<span class="string">&quot;ljy&quot;</span>, <span class="string">&quot;wy&quot;</span>, <span class="string">&quot;wz&quot;</span>, <span class="string">&quot;dqy&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : name)<span class="comment">// 注意，这里auto替换的是std::string，即直接将容器中的每个元素赋给了i进行遍历</span></span><br><span class="line">    std::cout &lt;&lt; i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><p>不懂auto用法的小伙伴可以参考：<a href="https://www.dqywy.top/post/77858f66.html">auto用法</a></p><h4 id="另外，也可以使用std-for-each实现相同功能，注意要添加头文件"><a href="#另外，也可以使用std-for-each实现相同功能，注意要添加头文件" class="headerlink" title="另外，也可以使用std::for_each实现相同功能，注意要添加头文件"></a>另外，也可以使用std::for_each实现相同功能，注意要添加<algorithm>头文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义操作，挨个传入容器元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(std::string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::cout &lt;&lt; s &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;std::string&gt; name = &#123; <span class="string">&quot;ljy&quot;</span>, <span class="string">&quot;wy&quot;</span>, <span class="string">&quot;wz&quot;</span>, <span class="string">&quot;dqy&quot;</span> &#125;;</span><br><span class="line">std::for_each(name.<span class="built_in">begin</span>(), name.<span class="built_in">end</span>(), output);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>auto用法</title>
      <link href="/post/77858f66.html"/>
      <url>/post/77858f66.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>auto会根据赋给变量的初值自动填充变量类型，当变量类型很长的时候尤其好用</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>（1）使用auto必须要赋初值，且初值不能是模板或函数等不确定类型，因为需要根据初值判断变量类型</p><p>（2）使用auto同时定义几个变量要求这几个变量的初值类型相同</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> a = <span class="number">3</span>, b = <span class="string">&#x27;3&#x27;</span>, c = <span class="string">&quot;3&quot;</span>;<span class="comment">// 这样不行，初值类型不同只能分开写</span></span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; name = &#123;<span class="string">&quot;ljy&quot;</span>, <span class="string">&quot;wy&quot;</span>, <span class="string">&quot;wz&quot;</span>, <span class="string">&quot;dqy&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = name.<span class="built_in">begin</span>(); i != name.<span class="built_in">end</span>(); i++)<span class="comment">// 这里auto替换了std::vector&lt;std::string&gt;::iterator</span></span><br><span class="line">    std::cout &lt;&lt; *i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="上述循环根据c-11标准也可以这样写"><a href="#上述循环根据c-11标准也可以这样写" class="headerlink" title="上述循环根据c++11标准也可以这样写"></a>上述循环根据c++11标准也可以这样写</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; name = &#123;<span class="string">&quot;ljy&quot;</span>, <span class="string">&quot;wy&quot;</span>, <span class="string">&quot;wz&quot;</span>, <span class="string">&quot;dqy&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : name)<span class="comment">// 注意，这里auto替换的是std::string，即直接将容器中的每个元素赋给了i进行遍历</span></span><br><span class="line">    std::cout &lt;&lt; i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><p>今天第一次看到这样的用法，觉得非常方便^_^</p>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么推荐用++i</title>
      <link href="/post/415de4d5.html"/>
      <url>/post/415de4d5.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br></pre></td></tr></table></figure><p>以前看别人这么写都不太在意，今天偶然瞥到有说<code>i++</code>比<code>++i</code>效率更高</p><h2 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h2><p>于是我去找了一下两种运算重载方法：</p><h3 id="（1）i"><a href="#（1）i" class="headerlink" title="（1）i++"></a>（1）i++</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后置++运算符重载</span></span><br><span class="line">Num&amp; <span class="keyword">operator</span> ++(<span class="type">int</span> n)<span class="comment">// int n是为了与重载前置++区分开</span></span><br><span class="line">&#123;</span><br><span class="line">        Num temp = *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;num++;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-i"><a href="#2-i" class="headerlink" title="(2) ++i"></a>(2) ++i</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前置++运算符重载</span></span><br><span class="line">test&amp; <span class="keyword">operator</span> ++()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;num++;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对比可以发现，<code>++i</code>比<code>i++</code>省略了一步储存原变量的过程</p>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ sort函数</title>
      <link href="/post/3216d44c.html"/>
      <url>/post/3216d44c.html</url>
      
        <content type="html"><![CDATA[<p>今天get到了一点sort自定义排序函数的用法 </p><h2 id="sort函数的优势"><a href="#sort函数的优势" class="headerlink" title="sort函数的优势"></a>sort函数的优势</h2><p>STL中的sort()并非只是普通的快速排序，除了对普通的快速排序进行优化，它还结合了插入排序和堆排序。根据不同的数量级别以及不同情况，能自动选用合适的排序方法。当数据量较大时采用快速排序，分段递归。一旦分段后的数据量小于某个阀值，为避免递归调用带来过大的额外负荷，便会改用插入排序。而如果递归层次过深，有出现最坏情况的倾向，还会改用堆排序，是一个非常灵活方便的函数~</p><h2 id="sort函数的使用"><a href="#sort函数的使用" class="headerlink" title="sort函数的使用"></a>sort函数的使用</h2><h3 id="（1）头文件："><a href="#（1）头文件：" class="headerlink" title="（1）头文件："></a>（1）头文件：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="（2）参数："><a href="#（2）参数：" class="headerlink" title="（2）参数："></a>（2）参数：</h3><p>sort函数一共有三个参数：sort(begin, end, cmp)</p><p>​&lt;1&gt; begin为指向待排序的结构的第一个元素的指针</p><p>​&lt;2&gt; end为指向待排序的结构的最后一个元素的<strong>下一个位置</strong>的指针</p><p>​&lt;3&gt; cmp参数为排序准则，cmp参数可以不写，如果不写的话，默认从小到大进行排序</p><h3 id="（3）自定义排序准则"><a href="#（3）自定义排序准则" class="headerlink" title="（3）自定义排序准则"></a>（3）自定义排序准则</h3><p>​&lt;1&gt; 对类排序:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Pair</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;<span class="comment">// 学生姓名</span></span><br><span class="line"><span class="type">int</span> grade;<span class="comment">// 学生成绩</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将你希望情况作为返回</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp_grade</span><span class="params">(Pair x, Pair y)</span><span class="comment">// x为前一项数据，y为后一项数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.grade &gt; y.grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(pair, pair + n, cmp_grade);<span class="comment">// n为学生人数</span></span><br></pre></td></tr></table></figure><p>​&lt;2&gt; 对一般数据类型从大到小排序</p><p>注意：这里的greater是函数，要加()</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num1[<span class="number">3</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>&#125;;</span><br><span class="line"><span class="built_in">sort</span>(num1, num1 + <span class="number">3</span>, <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> num2[<span class="number">3</span>] = &#123;<span class="number">3.1</span>, <span class="number">1.2</span>, <span class="number">2.3</span>&#125;;</span><br><span class="line"><span class="built_in">sort</span>(num2, num2 + <span class="number">3</span>, <span class="built_in">greater</span>&lt;<span class="type">float</span>&gt;());</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> num3[<span class="number">3</span>] = &#123;<span class="number">3.1125</span>, <span class="number">1.2332</span>, <span class="number">2.3556</span>&#125;;</span><br><span class="line"><span class="built_in">sort</span>(num3, num3 + <span class="number">3</span>, <span class="built_in">greater</span>&lt;<span class="type">double</span>&gt;());</span><br></pre></td></tr></table></figure><h3 id="还有别的用法欢迎在评论区补充"><a href="#还有别的用法欢迎在评论区补充" class="headerlink" title="还有别的用法欢迎在评论区补充~"></a>还有别的用法欢迎在评论区补充~</h3>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 实用函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++实用函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字排序</title>
      <link href="/post/84cbdd88.html"/>
      <url>/post/84cbdd88.html</url>
      
        <content type="html"><![CDATA[<p>【问题描述】</p><p>　　给定n个整数，请统计出每个整数出现的次数，按出现次数从多到少的顺序输出。 </p><p>【输入形式】</p><p>　　输入的第一行包含一个整数n，表示给定数字的个数。<br>　　第二行包含n个整数，相邻的整数之间用一个空格分隔，表示所给定的整数。 </p><p>【输出形式】</p><p>　　输出多行，每行包含两个整数，分别表示一个给定的整数和它出现的次数。按出现次数递减的顺序输出。如果两个整数出现的次数一样多，则先输出值较小的，然后输出值较大的。</p><p>【样例输入】</p><p>　　12<br>　　5 2 3 3 1 3 4 2 5 2 3 5 </p><p>【样例输出】</p><p>　　3 4<br>　　2 3<br>　　5 3<br>　　1 1<br>　　4 1 </p><p>【评分标准】</p><p>　　<strong>评测用例规模与约定</strong><br>　　1 ≤ n ≤ 1000，给出的数都是不超过1000的非负整数。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><h3 id="（1）将每个数字与其出现频率绑定定义为Pair类，定义Pair类数组"><a href="#（1）将每个数字与其出现频率绑定定义为Pair类，定义Pair类数组" class="headerlink" title="（1）将每个数字与其出现频率绑定定义为Pair类，定义Pair类数组;"></a>（1）将每个数字与其出现频率绑定定义为Pair类，定义Pair类数组;</h3><h3 id="（2）接收输入，判断输入数字是否存在，存在则对应数字频率加一，不存在则写入数字并频率加一"><a href="#（2）接收输入，判断输入数字是否存在，存在则对应数字频率加一，不存在则写入数字并频率加一" class="headerlink" title="（2）接收输入，判断输入数字是否存在，存在则对应数字频率加一，不存在则写入数字并频率加一;"></a>（2）接收输入，判断输入数字是否存在，存在则对应数字频率加一，不存在则写入数字并频率加一;</h3><h3 id="（3）sort函数自定义排序"><a href="#（3）sort函数自定义排序" class="headerlink" title="（3）sort函数自定义排序"></a>（3）sort函数自定义排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1000<span class="comment">// 测试请将N改小</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span>  std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pair</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;<span class="comment">// 数字</span></span><br><span class="line"><span class="type">int</span> fre = <span class="number">0</span>;<span class="comment">// 频率</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inArray</span><span class="params">(<span class="type">int</span> n, Pair *p, <span class="type">int</span> &amp;pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pos; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[i].num == n)</span><br><span class="line">&#123;</span><br><span class="line">p[i].fre++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;<span class="comment">// 该数字已存在</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p[pos].num = n;</span><br><span class="line">p[pos].fre++;</span><br><span class="line">pos++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 该数字不存在</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp_fre</span><span class="params">(Pair x, Pair y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x.fre == y.fre)</span><br><span class="line"><span class="keyword">return</span> x.num &lt; y.num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> x.fre &gt; y.fre;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">out</span><span class="params">(Pair *p, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p[i].num &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; p[i].fre &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initial</span><span class="params">(Pair *p, <span class="type">int</span> n, <span class="type">int</span> &amp;pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; temp;</span><br><span class="line"><span class="built_in">inArray</span>(temp, p, pos);<span class="comment">// 判断读取的数字是否已经存在，pos表示当前pair数组中存放的结果总数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, pos = <span class="number">0</span>;<span class="comment">// pos对应下一个数字存放的下标</span></span><br><span class="line">Pair pair[N];</span><br><span class="line">cin &gt;&gt; n;<span class="comment">// 数字个数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">initial</span>(pair, n, pos);</span><br><span class="line"><span class="built_in">sort</span>(pair, pair + pos, cmp_fre);</span><br><span class="line"><span class="built_in">out</span>(pair, pos);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果有更好的写法欢迎在评论区给出噢"><a href="#如果有更好的写法欢迎在评论区给出噢" class="headerlink" title="如果有更好的写法欢迎在评论区给出噢^_^"></a>如果有更好的写法欢迎在评论区给出噢^_^</h3>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑夜模式文字霓虹灯特效</title>
      <link href="/post/c22ddd92.html"/>
      <url>/post/c22ddd92.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客开启黑夜模式以后为大标题和个人卡片添加霓虹灯特效</p><h2 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h2><p>打开Blog根目录&#x2F;source&#x2F;css&#x2F;custom.css，路径中缺少的文件夹或文件直接创建即可，写入下列代码</p><p>可以把‘–theme-color’修改为你喜欢的颜色，例如墨绿色：rgb(91,165,133)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 夜间模式菜单栏发光字 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#nav</span> <span class="selector-class">.site-page</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#nav</span> <span class="selector-class">.menus_items</span> <span class="selector-class">.menus_item</span> <span class="selector-class">.menus_item_child</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="built_in">var</span>(--theme-color) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 手机端适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#sidebar</span> <span class="selector-id">#sidebar-menus</span> <span class="selector-class">.menus_items</span> <span class="selector-class">.site-page</span> &#123;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="built_in">var</span>(--theme-color) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新建脚本文件"><a href="#新建脚本文件" class="headerlink" title="新建脚本文件"></a>新建脚本文件</h2><p>打开Blog根目录\source\js\light.js，路径中缺少的文件夹或文件直接创建即可，写入下列代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 霓虹灯效果</span></span><br><span class="line"><span class="comment">// 颜色数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&quot;#39c5bb&quot;</span>, <span class="string">&quot;#f14747&quot;</span>, <span class="string">&quot;#f1a247&quot;</span>, <span class="string">&quot;#f1ee47&quot;</span>, <span class="string">&quot;#b347f1&quot;</span>, <span class="string">&quot;#1edbff&quot;</span>, <span class="string">&quot;#ed709b&quot;</span>, <span class="string">&quot;#5636ed&quot;</span>];</span><br><span class="line"><span class="comment">// 颜色索引</span></span><br><span class="line"><span class="keyword">var</span> idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换颜色</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 仅夜间模式才启用</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>) == <span class="string">&#x27;dark&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-name&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-name&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 15px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-title&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-title&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 15px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-subtitle&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-subtitle&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 10px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;post-info&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;post-info&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 5px&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;author-info__name&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 12px&quot;</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;author-info__description&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">textShadow</span> = arr[idx] + <span class="string">&quot; 0 0 12px&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        idx++;</span><br><span class="line">        <span class="keyword">if</span> (idx == <span class="number">8</span>) &#123;</span><br><span class="line">            idx = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 白天模式恢复默认</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-name&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-name&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;#1e1e1ee0 1px 1px 1px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-title&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-title&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;#1e1e1ee0 1px 1px 1px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-subtitle&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;site-subtitle&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;#1e1e1ee0 1px 1px 1px&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;post-info&quot;</span>))</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;post-info&quot;</span>).<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;#1e1e1ee0 1px 1px 1px&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;author-info__name&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;author-info__description&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">textShadow</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启计时器</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="built_in">setInterval</span>(changeColor, <span class="number">1200</span>);</span><br></pre></td></tr></table></figure><h2 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h2><p>打开主题配置文件_config.butterfly.yml，搜索inject并按下列格式补充完整</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/light.js&quot;&gt;&lt;/script&gt;</span> <span class="comment"># 霓虹灯(必须defer否则有时候会不生效)</span></span><br></pre></td></tr></table></figure><h2 id="hexo三连查看效果"><a href="#hexo三连查看效果" class="headerlink" title="hexo三连查看效果"></a>hexo三连查看效果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试加密</title>
      <link href="/post/d1ee6067.html"/>
      <url>/post/d1ee6067.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7319a553f4fa42142145abc01e6ed113c640c9e29d0aa23aed20bd1c45e8c238"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vercel加速博客</title>
      <link href="/post/f6bf5d88.html"/>
      <url>/post/f6bf5d88.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vercel在全球都分布有CDN节点，比Github自带的Github Page更加稳定且访问速度更快，并且部署简单而且不用花钱</p><h2 id="Vercel注册"><a href="#Vercel注册" class="headerlink" title="Vercel注册"></a>Vercel注册</h2><p>如果你看过之前的文章：<a href="https://www.dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a>的话，你应该已经注册好了自己的Vercel账号</p><p>若未注册请参考<a href="https://www.dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a></p><p>或者自行注册：<a href="https://vercel.com/signup">https://vercel.com/signup</a></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>点击头像来到首页并点击添加project</p><p><img src="https://s1.ax1x.com/2023/04/30/p98K6Sg.png"></p><p>如果有你的仓库地址就可以直接import，没有的话就点击下方的Import Third-Party Git Respository并输入你的Github仓库网址(例如我的是：hellodqy.github.io)</p><p><img src="https://s1.ax1x.com/2023/04/30/p98KclQ.png"></p><p>保持默认选项点击Deploy即可</p><h2 id="修改域名"><a href="#修改域名" class="headerlink" title="修改域名"></a>修改域名</h2><p>由于Vercel的域名被墙了，所以我们需要将其修改为我们的个人域名(个人域名购买请参考<a href="https://www.dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a>中的申请个人域名章节)</p><p>再次回到首页，点击你新建的项目</p><p><img src="https://s1.ax1x.com/2023/04/30/p98KofU.png"></p><p>点击settings</p><p><img src="https://s1.ax1x.com/2023/05/01/p98MC1e.png"></p><p>点击Domains</p><p><img src="https://s1.ax1x.com/2023/05/01/p98MSfO.png"></p><p>在Domains填入你的个人域名</p><p><img src="https://s1.ax1x.com/2023/05/01/p98M9pD.png"></p><h2 id="DNS解析-以阿里云为例"><a href="#DNS解析-以阿里云为例" class="headerlink" title="DNS解析(以阿里云为例)"></a>DNS解析(以阿里云为例)</h2><p>Vercel一般会给出两行记录要你添加到你的DNS供应商</p><p>首页打开控制台</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Ka81O.png"></p><p>点击图片中的云解析</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KanB9.png"></p><p>点击你购买的域名</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KamnJ.png"></p><p>点击添加记录</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>按照Vercel给的格式填：</p><ol><li>Type：A</li></ol><p>​  主机记录：@</p><p>​  解析：保持默认</p><p>​  记录值：xx.xx.xx.xx</p><p>​  TTL：10分钟</p><ol start="2"><li>Type：CNAME</li></ol><p>​  主机记录：www</p><p>​  解析：保持默认</p><p>​  记录值：xxx-dns.com</p><p>​  TTL：10分钟</p><h2 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h2><p>修改完以后回到Vercel首页，打开项目</p><p><img src="https://s1.ax1x.com/2023/04/30/p98KofU.png"></p><p>点击Deployments选项</p><p><img src="https://s1.ax1x.com/2023/05/01/p98Qk2F.png"></p><p>点击带有current标识的版本最右边的三个点，点击Redeploy</p><p><img src="https://s1.ax1x.com/2023/05/01/p98QF8U.png"></p><p><img src="https://s1.ax1x.com/2023/05/01/p98QiCT.png"></p><p>部署完成耐心等待即可~</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Page绑定个人域名</title>
      <link href="/post/fa674e5f.html"/>
      <url>/post/fa674e5f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在之前的<a href="https://dqywy.top/post/d0d1b7a9.html">配置Twikoo评论</a>一文中我们购买了自己的域名，当时只用了二级域名解决Vercel域名被墙的问题，现在我们把Github Page的域名修改为我们自己的域名</p><h2 id="DNS解析-以阿里云为例"><a href="#DNS解析-以阿里云为例" class="headerlink" title="DNS解析(以阿里云为例)"></a>DNS解析(以阿里云为例)</h2><p>阿里云首页打开控制台</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Ka81O.png"></p><p>点击图片中的云解析</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KanB9.png"></p><p>点击你购买的域名</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KamnJ.png"></p><p>点击添加记录</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>我们需要添加两条记录：</p><ol><li><p>记录类型：CNAME</p><p>主机记录：@</p><p>解析请求来源：保持默认</p><p>记录值：网站域名，例如我的是：hellodqy.github.io</p><p>TTL：10分钟</p></li><li><p>记录类型：CNAME</p><p>主机记录：www</p><p>解析请求来源：保持默认</p><p>记录值：网站域名</p><p>TTL：10分钟</p></li></ol><p><img src="https://s1.ax1x.com/2023/04/26/p9KaVcF.png"></p><h2 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h2><p>打开Blog根目录&#x2F;source，新建一个文件名为CNAME的无后缀文件，填入你购买的个人域名，不需要添加https:&#x2F;&#x2F;前缀，例如我的是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dqywy.top</span><br></pre></td></tr></table></figure><h2 id="Github-Page添加个人域名"><a href="#Github-Page添加个人域名" class="headerlink" title="Github Page添加个人域名"></a>Github Page添加个人域名</h2><p>进入.github.io仓库，打开settings</p><p><img src="https://s1.ax1x.com/2023/04/30/p98A87F.png"></p><p>打开Pages选项</p><p><img src="https://s1.ax1x.com/2023/04/30/p98A30U.png"></p><p>下拉页面，找到Custom domain并填入你购买的个人域名，勾选Enforce HTTPS</p><h4 id="注意：这里需要等待一段加载时间才能勾选Enforce-HTTPS"><a href="#注意：这里需要等待一段加载时间才能勾选Enforce-HTTPS" class="headerlink" title="注意：这里需要等待一段加载时间才能勾选Enforce HTTPS"></a>注意：这里需要等待一段加载时间才能勾选Enforce HTTPS</h4><p><img src="https://s1.ax1x.com/2023/04/30/p98AJk4.png"></p><p>完成以后即可通过你购买的个人域名访问你的网站了</p><h2 id="解决部署后需要重新在Github绑定域名的问题"><a href="#解决部署后需要重新在Github绑定域名的问题" class="headerlink" title="解决部署后需要重新在Github绑定域名的问题"></a>解决部署后需要重新在Github绑定域名的问题</h2><p>打开Blog根目录的站点配置文件_config.yml，搜索skip_render并填写CNAME使每次部署的时候CNAME不被渲染</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">CNAME</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现网站动态标题</title>
      <link href="/post/15286781.html"/>
      <url>/post/15286781.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加脚本文件"><a href="#添加脚本文件" class="headerlink" title="添加脚本文件"></a>添加脚本文件</h2><p>打开Blog根目录&#x2F;source&#x2F;js&#x2F;title.js，路径中缺失的文件夹或文件直接新建即可</p><p>写入下列代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;不要走嘛(´•̥̥̥ω•̥̥̥`)&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;欢迎回来(✪ω✪)&#x27;</span>;</span><br><span class="line">        <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="引用脚本文件"><a href="#引用脚本文件" class="headerlink" title="引用脚本文件"></a>引用脚本文件</h2><p>打开主题配置文件_config.butterfly.yml并按下列格式补充完整</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span> </span><br><span class="line">  <span class="attr">bottom:</span> </span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;/js/title.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="hexo三连查看效果"><a href="#hexo三连查看效果" class="headerlink" title="hexo三连查看效果"></a>hexo三连查看效果</h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人卡片实现渐变色</title>
      <link href="/post/25226bb5.html"/>
      <url>/post/25226bb5.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h2><p>打开Blog根目录&#x2F;source&#x2F;css&#x2F;custom.css，路径中的css文件夹或custom.css文件没有的话就新建，写入如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧边栏个人信息卡片动态渐变色 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    -<span class="number">45deg</span>,</span><br><span class="line">    <span class="number">#e8d8b9</span>,</span><br><span class="line">    <span class="number">#eccec5</span>,</span><br><span class="line">    <span class="number">#a3e9eb</span>,</span><br><span class="line">    <span class="number">#bdbdf0</span>,</span><br><span class="line">    <span class="number">#eec1ea</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgb</span>(<span class="number">66</span>, <span class="number">68</span>, <span class="number">68</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑夜模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#191919ee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人信息Follow me按钮 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &gt; <span class="selector-id">#card-info-btn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3eb8be</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引入代码"><a href="#引入代码" class="headerlink" title="引入代码"></a>引入代码</h2><p>打开主题配置文件_config.butterfly.yml，搜索inject并按下列格式补充完整即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="hexo三连查看效果"><a href="#hexo三连查看效果" class="headerlink" title="hexo三连查看效果"></a>hexo三连查看效果</h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加看板娘</title>
      <link href="/post/2fd28ec8.html"/>
      <url>/post/2fd28ec8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>谁不想拥有一只萌萌的看板娘呢~</p><p>我安装的是博客自带的看板娘，比较推荐这个，消耗资源比较少，虽然不会说话也不能换装，但是会乖乖地盯着你的鼠标~</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开Blog根目录cmd并输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>我输入命令以后下载进度一直卡着，多重试几次就好了，然后报了一些看不懂的错，我按照它的建议输入了两条命令</p><p><img src="https://s1.ax1x.com/2023/04/29/p91fose.png"></p><p><img src="https://s1.ax1x.com/2023/04/29/p91fIMD.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audit fix</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audit fix --force</span><br></pre></td></tr></table></figure><p>这两条命令之后报的错就不用管啦</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开Blog根目录下的站点配置文件_config.yml搜索live2d，没有的话就将下列内容复制到最底部</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure><h2 id="更换形象"><a href="#更换形象" class="headerlink" title="更换形象"></a>更换形象</h2><p>预览并挑选一个喜欢的看板娘形象，我选择的是一个白帽子小孩：live2d-widget-model-koharu</p><p>看板娘模型预览：<a href="https://blog.csdn.net/wang_123_zy/article/details/87181892">(4条消息) Hexo添加Live2D看板娘+模型预览</a></p><h4 id="打开Blog根目录cmd，复制你选择的看板娘编码并执行命令，注意替换编码"><a href="#打开Blog根目录cmd，复制你选择的看板娘编码并执行命令，注意替换编码" class="headerlink" title="打开Blog根目录cmd，复制你选择的看板娘编码并执行命令，注意替换编码"></a>打开Blog根目录cmd，复制你选择的看板娘编码并执行命令，注意替换编码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>打开Blog根目录下的站点配置文件_config.yml搜索model，将其修改为你的看板娘编码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span></span><br><span class="line">  <span class="comment"># 默认为live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure><p>hexo三连即可在本地预览效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="卸载看板娘"><a href="#卸载看板娘" class="headerlink" title="卸载看板娘"></a>卸载看板娘</h2><p>打开Blog根目录cmd并输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d <span class="comment">#卸载看板娘插件</span></span><br><span class="line">npm uninstall live2d-widget-model-modelname <span class="comment">#卸载看板娘模型。记得替换modelname为看板娘名称</span></span><br></pre></td></tr></table></figure><p>打开Blog根目录下的站点配置文件_config.yml搜索live2d，将该配置项注释掉即可</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小岛面积</title>
      <link href="/post/1ee68337.html"/>
      <url>/post/1ee68337.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）"><a href="#题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）" class="headerlink" title="题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）"></a>题目：用一个二维方阵（最小为3X3，最大为9X9）表示一片海域。方阵中的元素只由0和1组成。1表示海岸线。计算由海岸线围起来的小岛面积（即：由1围起来的区域中0的个数）</h4><p> <strong><strong>上述方阵表示的海域满足下面两个要求：</strong><br> <strong>1、小岛只有一个</strong><br> 2、用1表示的海岸线肯定可以封闭成一个小岛，但有可能是凸的，也有可能是凹的，所以在判断时：对于方阵中的任意一个元素0，如果其位于同一行上的两个1之间，并且位于同一列上的两个1之间，则该元素肯定在1围起来的区域中。不符合该规定的其它情况不考虑。</strong><br> 样例：<br> 输入：<br> 6<br> 0 0 0 1 0 0<br> 0 0 1 0 1 0<br> 0 1 0 0 0 1<br> 1 0 0 0 1 0<br> 1 0 1 0 1 0<br> 1 1 0 1 1 1<br> 输出：<br> 9</p><p> <strong>思路：边界上的0一定不被1包围，将其值改为2，与2有接触的0被感染成2，不断感染，最后幸存的0是被1包围的</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sea[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; sea[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)     <span class="comment">// 矩阵最大为9x9, 最多的情况是中间的0不被包含，则需要侵蚀5次</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (sea[i][j] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span> || i == n - <span class="number">1</span> || j == <span class="number">0</span> || j == n - <span class="number">1</span>)</span><br><span class="line">                        sea[i][j] = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (sea[i][j - <span class="number">1</span>] == <span class="number">2</span> || sea[i - <span class="number">1</span>][j] == <span class="number">2</span> || sea[i][j + <span class="number">1</span>] == <span class="number">2</span> || sea[i + <span class="number">1</span>][j] == <span class="number">2</span>)</span><br><span class="line">                        sea[i][j] = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!sea[i][j])</span><br><span class="line">                sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果有更好的写法欢迎在评论区给出噢"><a href="#如果有更好的写法欢迎在评论区给出噢" class="headerlink" title="如果有更好的写法欢迎在评论区给出噢^_^"></a>如果有更好的写法欢迎在评论区给出噢^_^</h3>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yura&#39;s Smile</title>
      <link href="/post/c020e7d8.html"/>
      <url>/post/c020e7d8.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>After holding one team contest, boy Yura got very tired and wanted to change his life and move to Japan. In honor of such a change, Yura changed his name to something nice.</p><p>Fascinated by this idea he already thought up a name s consisting only of characters “_” and “^”. But there’s a problem — Yura likes smiley faces “^_^” and “^^”. Therefore any character of the name must be a part of at least one such smiley. Note that only the <strong>consecutive</strong> characters of the name can be a smiley face.</p><p>More formally, consider all occurrences of the strings “^_^” and “^^” in the string s. Then all such occurrences must cover the whole string s, possibly with intersections. For example, in the string “^^__^_^^__^” the characters at positions 3,4,9,10 and 11 are not contained inside any smileys, and the other characters at positions 1,2,5,6,7 and 8 are contained inside smileys.</p><p>In one operation Jura can insert one of the characters “_” and “^” into his name s (you can insert it at any position in the string). He asks you to tell him the minimum number of operations you need to do to make the name fit Yura’s criteria.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Each test consists of multiple test cases. The first line contains a single integer t(1≤t≤100) —the number of test cases. The description of test cases follows.</p><p>The first and only line of each test case contains a single string s (1≤|s|≤100), consisting of characters “_” and “^”,  — the name to change.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output a single integer — the minimum number of characters you need to add to the name to make it fit for Yura. If you don’t need to change anything in the name, print 0.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><img src="https://s1.ax1x.com/2023/04/29/p91g10I.png"></p><p>第一次做英文编程题，看得有点懵，大概是在说，输入多行字符串，每个字符串由^或下划线组成，要求每个字符串的每个字符都能和相邻的字符组成^^或^_^，问需要添加的 ^ 和下划线的最小数目是多少</p><p>我的思路是，遍历字符串，搜索下划线，找到就观察其相邻两边是否有 ^ ，两边都有就直接删除掉这个下划线；只有一个就计数加一，并删除这个下划线；一个都没有就计数加二，删除该下划线并在该位置插入一个 ^；只有一个字符的字符串单独处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span>  <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> n, pos, res[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">getline</span>(cin, str);<span class="comment">// 把前面cin遗留的结束符处理掉</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">getline</span>(cin, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str == <span class="string">&quot;^&quot;</span>)</span><br><span class="line">res[i]++;</span><br><span class="line"><span class="keyword">while</span> ((pos = str.<span class="built_in">find</span>(<span class="string">&#x27;_&#x27;</span>)) != string::npos)<span class="comment">// 字符串中没有&#x27;_&#x27;时停止</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == pos)<span class="comment">// &#x27;_&#x27;在第一个位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str.<span class="built_in">size</span>() - <span class="number">1</span> == pos)<span class="comment">// &#x27;_&#x27;在最后一个位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);<span class="comment">// 删除&#x27;_&#x27;</span></span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">// &#x27;_&#x27;在中间</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">res[i]++;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> != str[pos - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;^&#x27;</span> == str[pos + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">res[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">res[i] += <span class="number">2</span>;</span><br><span class="line">str.<span class="built_in">erase</span>(pos, <span class="number">1</span>);</span><br><span class="line">str.<span class="built_in">insert</span>(pos, <span class="number">1</span>, <span class="string">&#x27;^&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">cout &lt;&lt; res[i] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果有更好的写法欢迎在评论区给出噢"><a href="#如果有更好的写法欢迎在评论区给出噢" class="headerlink" title="如果有更好的写法欢迎在评论区给出噢^_^"></a>如果有更好的写法欢迎在评论区给出噢^_^</h3>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twikoo评论通用配置</title>
      <link href="/post/e988d7ce.html"/>
      <url>/post/e988d7ce.html</url>
      
        <content type="html"><![CDATA[<p>添加Twikoo请查看文章<a href="https://dqywy.top/post/d0d1b7a9.html">添加Twikoo实现博客在线评论</a></p><p>安装完成后可以对Twikoo进行以下配置：</p><h2 id="评论区美化"><a href="#评论区美化" class="headerlink" title="评论区美化"></a>评论区美化</h2><p>参考自：<a href="https://blog.leonus.cn/2022/inputAlert.html">Leonus的博客</a>与<a href="https://www.cxl2020mc.top/post/Hexo-Butterfly-Twikoo%E8%AF%84%E8%AE%BA%E5%8C%BA%E7%BE%8E%E5%8C%96/#css%E4%BB%A3%E7%A0%81">陈鑫磊的博客</a></p><p>实现效果：</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DTc0U.png"></p><ol><li><p>新建Blog\source\css\custom.css，缺少的文件夹或文件直接创建即可，在末尾添加下列代码</p><p>​这段代码的主要作用就是增加边框的立体感和圆润度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 声名部分变量 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-radius</span>: <span class="number">7px</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border-width</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式颜色 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-border-color</span>: <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-bg</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border</span>: <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attr">--style-border-always</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">  <span class="attr">--cxl2020mc-blue</span>: <span class="number">#425AEF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 深色模式颜色 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> &#123;</span><br><span class="line">  <span class="attr">--cxl2020mc-border-color</span>: <span class="number">#42444a</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-bg</span>: <span class="number">#1d1b26</span>;</span><br><span class="line">  <span class="attr">--cxl2020mc-card-border</span>: <span class="number">#42444a</span>;</span><br><span class="line">  <span class="attr">--style-border-always</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">  <span class="attr">--cxl2020mc-blue</span>: <span class="number">#0084FF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论区评论大框 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 内边距 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--cxl2020mc-card-bg);</span><br><span class="line">  <span class="comment">/* 变动动画时长 */</span></span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式评论区评论大框 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式评论区评论大框阴影悬浮加深 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影（浅色模式突出层次感） */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式评论区评论大框 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设备信息 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--cxl2020mc-card-bg);</span><br><span class="line">  <span class="comment">/* 内边距 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.4rem</span>;</span><br><span class="line">  <span class="comment">/* 底边距 */</span></span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="comment">/* 变动动画时长 */</span></span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式设备信息 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式设备信息阴影悬浮加深 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式设备信息 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-extra</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 加载更多按钮 */</span></span><br><span class="line"><span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 圆角 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--cxl2020mc-radius);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式加载更多按钮 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-box-shadow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 浅色模式加载更多按钮（鼠标悬浮时） */</span></span><br><span class="line"><span class="selector-attr">[data-theme=light]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 阴影 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--card-hover-box-shadow);</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--btn-bg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式加载更多按钮（鼠标悬浮时） */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 背景颜色 */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--cxl2020mc-blue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑暗模式加载更多按钮 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.twikoo</span> <span class="selector-class">.tk-expand</span> &#123;</span><br><span class="line">  <span class="comment">/* 边框样式 */</span></span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="comment">/* 边框宽度 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="built_in">var</span>(--cxl2020mc-card-border-width);</span><br><span class="line">  <span class="comment">/* 边框颜色 */</span></span><br><span class="line">  <span class="attribute">border-color</span>: <span class="built_in">var</span>(--cxl2020mc-card-border);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在custom.css末尾添加下列代码nth-child(1)(2)(3)分别是你鼠标点击昵称、邮箱、网址框时悬浮显示的内容</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置文字内容 :nth-child(1)的作用是选择第几个 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;输入QQ号会自动获取昵称和头像🐧&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;收到回复将会发送到您的邮箱📧&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;可以通过昵称访问您的网站🔗&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 当用户点击输入框时显示 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:focus</span>-within<span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">:focus</span>-within<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 主内容区 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="comment">/* 先隐藏起来 */</span></span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="comment">/* 绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 向上移动60像素 */</span></span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">60px</span>;</span><br><span class="line">    <span class="comment">/* 文字强制不换行，防止left:50%导致的文字换行 */</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="comment">/* 圆角 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 距离左边50% */</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="comment">/* 然后再向左边挪动自身的一半，即可实现居中 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="comment">/* 填充 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#444</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 小角标 */</span></span><br><span class="line"><span class="selector-class">.el-input</span><span class="selector-class">.el-input--small</span><span class="selector-class">.el-input-group</span><span class="selector-class">.el-input-group--prepend</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。</span></span><br><span class="line"><span class="comment">    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">12px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="number">#444</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">48px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>引入custom.css: 打开主题配置文件_config.butterfly.yml搜索inject找到head头部：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/05/10/p9Dq1US.png"></p></li><li><p>随便打开一篇文章，拉到底部，登录Twikoo管理面板，选择配置管理，点开通用选项</p><p>（1）COMMENT_PLACEHOLDER设置评论框默认显示的内容，表情可以直接在网上搜emoji复制粘贴进去</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DXFEV.png"></p><p>（2）设置评论区背景，最好选用纯色的，或者就是选择一个很小的图片作为脚标(可以在<a href="https://www.iconfont.cn/">阿里巴巴图标库</a>选择一个喜欢的图标并下载，图片大小设置为14左右)</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DXuuR.png"></p><p>（3）其余配置可以自己翻一翻，每项都有中文注释</p></li></ol><h2 id="设置邮箱提醒"><a href="#设置邮箱提醒" class="headerlink" title="设置邮箱提醒"></a>设置邮箱提醒</h2><p>设置邮箱提醒可以在有小伙伴给你的文章评论时向你发送邮件让你及时知道</p><ol><li><p>开通POP3&#x2F;SMTP服务(以QQ邮箱为例，其他邮箱类比)</p><p>在电脑端打开QQ邮箱并点击最上方的设置</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqS3t.png"></p><p>点击帐户</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mb4hR.png"></p><p>下拉找到POP3&#x2F;SMTP服务并点击开启服务，按指示验证即可</p><h3 id="注意：验证完毕以后会出现授权码，记得保存一会要用"><a href="#注意：验证完毕以后会出现授权码，记得保存一会要用" class="headerlink" title="注意：验证完毕以后会出现授权码，记得保存一会要用"></a>注意：验证完毕以后会出现授权码，记得保存一会要用</h3><p><img src="https://s1.ax1x.com/2023/04/27/p9MbhN9.png"></p></li></ol><p>​如果不小心忘记保存授权码可以重新生成并保存</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqQDU.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqMuT.png"></p><h2 id="配置邮件通知服务"><a href="#配置邮件通知服务" class="headerlink" title="配置邮件通知服务"></a>配置邮件通知服务</h2><p>随便打开一篇文章，拉到底部，登录Twikoo管理面板</p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mq5Vg.png"></p><p>下拉找到邮件通知选项</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqIaQ.png"></p><h3 id="可以参考我的配置，没填的就是用的默认"><a href="#可以参考我的配置，没填的就是用的默认" class="headerlink" title="可以参考我的配置，没填的就是用的默认"></a>可以参考我的配置，没填的就是用的默认</h3><h4 id="SMTP-PASS填刚刚生成的授权码"><a href="#SMTP-PASS填刚刚生成的授权码" class="headerlink" title="SMTP_PASS填刚刚生成的授权码"></a>SMTP_PASS填刚刚生成的授权码</h4><p><img src="https://s1.ax1x.com/2023/04/27/p9MqhqS.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9Mqfr8.png"></p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqWKf.png"></p><p>填写完成以后点击邮件通知测试，收到来自Twikoo的邮件就说明配置正确</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MqIaQ.png"></p><p>到评论区发送一条评论就可以在邮箱收到提醒啦</p><p><img src="https://s1.ax1x.com/2023/04/27/p9MbfAJ.png"></p><h2 id="配置图床"><a href="#配置图床" class="headerlink" title="配置图床"></a>配置图床</h2><p>我使用的是smms图床，配置简单：(SMMS)[<a href="https://smms.app/]">https://smms.app/]</a></p><p>注册好以后点击上方的user-&gt;Dashboard</p><p><img src="https://s1.ax1x.com/2023/05/21/p9IE2B8.png"></p><p>点击左侧栏目中的API Token并生成自己的API key后复制</p><p><img src="https://s1.ax1x.com/2023/05/21/p9IEgnf.png"></p><p>打开自己的评论设置-&gt;配置管理-&gt;插件-&gt;在IAMGE_CDN中填入smms(或其他图床名称)，在IMAGE_CDN_TOKEN填入刚刚生成的API key-&gt;保存并刷新</p><p><img src="https://s1.ax1x.com/2023/05/21/p9IETcq.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加Twikoo实现博客在线评论——2023最新版</title>
      <link href="/post/d0d1b7a9.html"/>
      <url>/post/d0d1b7a9.html</url>
      
        <content type="html"><![CDATA[<h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><h3 id="注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程"><a href="#注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程" class="headerlink" title="注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程"></a>注意：按照视频教程中执行到云函数运行成功的步骤时请返回本教程</h3><p><img src="https://s1.ax1x.com/2023/04/25/p9uLFRP.png" alt="云函数运行成功"></p><p>部署方式：<a href="https://www.bilibili.com/video/BV1Fh411e7ZH">https://www.bilibili.com/video/BV1Fh411e7ZH</a></p><p>参考Twikoo文档：<a href="https://twikoo.js.org/">https://twikoo.js.org/</a></p><p>视频中下一步要求我们点击DOMAINS链接，但是这个链接已经被墙了，无法访问到，我们需要更改DOMAINS</p><h2 id="申请个人域名"><a href="#申请个人域名" class="headerlink" title="申请个人域名"></a>申请个人域名</h2><p>阿里云、腾讯云、华为云都可以，我在阿里云申请的</p><ol><li>主页搜索域名注册，在搜索记录里点击域名注册</li></ol><p><img src="https://s1.ax1x.com/2023/04/26/p9KUQSS.png"></p><ol start="2"><li>自定义想要的域名</li></ol><p><img src="https://s1.ax1x.com/2023/04/26/p9KUVeA.png"></p><ol start="3"><li><p>购买域名</p><h3 id="域名不需要备案，因为我们只是需要一个二级域名"><a href="#域名不需要备案，因为我们只是需要一个二级域名" class="headerlink" title="域名不需要备案，因为我们只是需要一个二级域名"></a><img src="https://s1.ax1x.com/2023/04/26/p9KU9JK.png">域名不需要备案，因为我们只是需要一个二级域名</h3></li></ol><h2 id="生成二级域名"><a href="#生成二级域名" class="headerlink" title="生成二级域名"></a>生成二级域名</h2><ol><li><h3 id="在阿里云控制台添加子域名解析记录"><a href="#在阿里云控制台添加子域名解析记录" class="headerlink" title="在阿里云控制台添加子域名解析记录"></a>在阿里云控制台添加子域名解析记录</h3><p>首页打开控制台</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Ka81O.png"></p><p>点击图片中的云解析</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KanB9.png"></p><p>点击你购买的域名</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KamnJ.png"></p><p>点击添加记录</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>记录类型选择CNAME</p><p>主机记录随便写，我填的是blog</p><p>记录值设置为你的网站域名，例如我的是：hellodqy.github.io</p><p>点击确认</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaVcF.png"></p><p>现在已经生成了一个二级域名，但是这个域名并不能打开任何网页，因为它没有与Github Page绑定，本教程不需要绑定！想绑定的话直接去Github的仓库找到CNAME文件，没有的话就自己创建一个，将自己的二级域名添加到文件第一行（内容必须为一行）,此时在地址栏输入自己的子域名就可以跳转到 Github Page 页面了</p></li></ol><h2 id="更改DOMAINS"><a href="#更改DOMAINS" class="headerlink" title="更改DOMAINS"></a>更改DOMAINS</h2><p>打开Vercel</p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLyLD.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLgdH.png"></p><p>将刚刚申请的二级域名填进去，点击Save</p><p><img src="https://s1.ax1x.com/2023/04/25/p9uLcee.png"></p><p>然后会出现报错：要求我们到DNS Provider去添加记录</p><p>回到这个界面，先删除记录值为你的网站域名的那条记录，再次添加记录</p><h3 id="注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件"><a href="#注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件" class="headerlink" title="注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件"></a>注意：如果你按照我前面给的Github绑定二级域名教程到Github生成了CNAME文件的话，得去删掉CNAME文件</h3><p><img src="https://s1.ax1x.com/2023/04/26/p9KaZX4.png"></p><p>按照报错提示填：类型：CNAME；主机记录：刚刚填的是什么，现在就填什么，比如刚刚申请二级域名我填的是blog，现在就填blog</p><p>主要是记录值要改，填报错提示中的value值，点击确认</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KaVcF.png"></p><p>回到Vercel的这个界面，点击上方的Deployments选项</p><p><img src="https://img.gejiba.com/images/873afe2505fe5c550618ee4e2d1cfb66.png"></p><p>找到current记录，点击三个点，点击Redeploy</p><p><img src="https://img.gejiba.com/images/45749a7cc312c2bac96e66ff25d95fe5.png"></p><p><img src="https://img.gejiba.com/images/a5da36952e4d76027bfa9e0896b66c1f.png"></p><p>看到DOMAINS是你设置的二级域名就修改正确了</p><p><img src="https://img.gejiba.com/images/723d9c021a5fa74ccea440f4e068b8fc.png"></p><p>过几分钟，点击查看新的DOMAINS网页中出现云函数运行成功即可，如图：</p><p><img src="https://s1.ax1x.com/2023/04/26/p9Kd1Vs.png"></p><h2 id="获取Vercel的环境ID-enVId"><a href="#获取Vercel的环境ID-enVId" class="headerlink" title="获取Vercel的环境ID(enVId)"></a>获取Vercel的环境ID(enVId)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:// + DOMAINS(就是你设置的二级域名)</span><br></pre></td></tr></table></figure><h2 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h2><p>修改主题配置文件_config.butterfly.yml，搜索twikoo，你只需要把获取到Vercel的环境 ID (envId) 填写到配置上去就行，其他不改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">  envId:</span><br><span class="line">  region:</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br></pre></td></tr></table></figure><p>然后搜索comments，设置评论应用为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comments:</span><br><span class="line">  use: twikoo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：最新评论只会在刷新时才会去读取，并不会实时变化</span><br><span class="line">由于 API 有 访问次数限制，为了避免调用太多，主题默认存取期限为 10 分鐘。也就是説，调用后资料会存在 localStorage 里，10 分鐘内刷新网站只会去 localStorage 读取资料。 10 分鐘期限一过，刷新页面时才会去调取 API 读取新的数据。（ 3.6.0 新增了 storage 配置，可自行配置缓存时间）</span><br></pre></td></tr></table></figure><p>在侧边栏显示最新评论板块</p><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Aside widget - Newest Comments</span><br><span class="line">newest_comments:</span><br><span class="line">  enable: true</span><br><span class="line">  sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  limit: 6</span><br><span class="line">  storage: 10 # unit: mins, save data to localStorage</span><br><span class="line">  avatar: true</span><br></pre></td></tr></table></figure><h2 id="登录Twikoo管理面板："><a href="#登录Twikoo管理面板：" class="headerlink" title="登录Twikoo管理面板："></a>登录Twikoo管理面板：</h2><p>先把刚刚的所有修改保存并部署到本地</p><p>打开网站随便一篇文章翻到页面底部，点击设置并注册管理员密码</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KUksH.png"></p><p>评论设置完毕，测试一下吧~</p><p><img src="https://s1.ax1x.com/2023/04/26/p9KUCRO.png" alt="测试成功"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo集成Algolia实现网站搜索引擎</title>
      <link href="/post/fe591630.html"/>
      <url>/post/fe591630.html</url>
      
        <content type="html"><![CDATA[<h2 id="创建-Alogolia-Index"><a href="#创建-Alogolia-Index" class="headerlink" title="创建 Alogolia Index"></a>创建 Alogolia Index</h2><p>首先登陆进入 <a href="https://www.algolia.com/users/sign_in">Algolia 官网</a>，我们可以使用 GitHub 或 Google 帐号登录。</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5A4U.png"></p><p>创建一个Index，随便取一个名字</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5CBq.png"></p><p>配置API Key</p><p>接下来我们需要配置 Algolia——API Keys 到我们自己的 hexo 站点中，关联两者，使得 Algolia 能够搜集我们 hexo 站点的数据通过 API 发送给 Aloglia</p><p>回到首页打开API Keys，其中的 <code>Application ID</code> 、<code>Search-Only API Key</code>、<code>Admin API KEY</code>信息将会被用到</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5FEV.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5PH0.png"></p><p>首先我们需要修改Blog根目录下的 _config.yml：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: &#x27;你的Applicaiton ID&#x27;</span><br><span class="line">  apiKey: &#x27;你的Search-Only API Key&#x27;</span><br><span class="line">  indexName: &#x27;创建的索引名称&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5kNT.png" alt="只用写上面给的三行即可"></p><p>然后我们需要配置一个名称为 <code>HEXO_ALGOLIA_INDEXING_KEY</code>，内容为 Alogolia 网页中 <code>Admin API KEY</code> 的环境变量，在Blog根目录下进行Git Bash并输入下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY=你的Admin API KEY</span><br></pre></td></tr></table></figure><h2 id="通过-Hexo-Aloglia-获取站点数据"><a href="#通过-Hexo-Aloglia-获取站点数据" class="headerlink" title="通过 Hexo Aloglia 获取站点数据"></a>通过 Hexo Aloglia 获取站点数据</h2><p>前面我们创建了 Index，但是此时为空，不包含任何数据。我们需要安装 <code>Hexo Aloglia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Aloglia</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>安装完成后，在 hexo 站点根目录下执行下列命令来搜集数据更新到我们刚创建的 Index 中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5VCF.png"></p><p>如上图所示则代表成功将 hexo 站点中的数据发送到了 Alogolia 的 Index 中，我们可以在网页中看到所有的数据</p><h2 id="主题集成Algolia："><a href="#主题集成Algolia：" class="headerlink" title="主题集成Algolia："></a>主题集成Algolia：</h2><p>更改<strong>主题配置文件</strong>的_config.yml(注意是主题配置文件的_config.yml，我的是Blog&#x2F;themes&#x2F;butterfly目录下的，不是Blog根目录的_config.yml)，找到 Algolia Search 配置部分(文件当中有，直接搜索)，将<code>enable</code> 改为<code>true</code> 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Algolia search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n555T.png"></p><h2 id="修改搜索目录"><a href="#修改搜索目录" class="headerlink" title="修改搜索目录"></a>修改搜索目录</h2><p>之前一直没改站点URL，昨晚折腾到一点过也没搞好，今早遇到大佬指点才解决</p><p>如果你能搜索到对应文章但是点击搜索记录却是这样的页面</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nvoid.png"></p><p>那应该是你的站点URL没有修改，打开Blog根目录下的_config.yml，将Url里面的网址修改为你的域名</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nxCzq.png"></p><h2 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="注意：每次对网站内容修改以后都需要更新Algolia"><a href="#注意：每次对网站内容修改以后都需要更新Algolia" class="headerlink" title="注意：每次对网站内容修改以后都需要更新Algolia"></a>注意：每次对网站内容修改以后都需要更新Algolia</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搜索引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客安装butterfly主题</title>
      <link href="/post/8f1335fc.html"/>
      <url>/post/8f1335fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="Butterfly-主题安装"><a href="#Butterfly-主题安装" class="headerlink" title="Butterfly 主题安装"></a>Butterfly 主题安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>这里面如果报错，如下图所示</p><p><img src="https://static001.geekbang.org/infoq/4b/4bd9fe08801a3332cf5552216b631149.png"></p><p>执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy </span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>Blog根目录下找到_config.yml文件</p><p>搜索找到theme，将landscape改为butterfly</p><p><img src="https://static001.geekbang.org/infoq/b0/b08a6de31ecdfcc74ccb0037f23094b3.png"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客撰写与发布</title>
      <link href="/post/c2ec21ed.html"/>
      <url>/post/c2ec21ed.html</url>
      
        <content type="html"><![CDATA[<h2 id="Typora下载与配置"><a href="#Typora下载与配置" class="headerlink" title="Typora下载与配置"></a>Typora下载与配置</h2><p>下载与破解教程：<a href="https://www.cnblogs.com/guoxuanhan/p/16841068.html">Typora 1.4.8 – 2022最新Typora破解激活教程！你的Markdown编辑器！ - 郭炫韩Coding - 博客园 (cnblogs.com)</a></p><h2 id="文件夹介绍"><a href="#文件夹介绍" class="headerlink" title="文件夹介绍"></a>文件夹介绍</h2><ul><li><code>_config.yml</code>：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</li><li><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</li><li><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</li><li><code>source</code>：非常重要。所有的个人文件都在里面！</li><li><code>themes</code>：主题文件夹，可以从<a href="https://hexo.io/themes/">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</li></ul><p><img src="https://static001.geekbang.org/infoq/3f/3f7b8b410726691082019f2ab603976b.png"></p><h2 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;新建博客文章名&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="文章标题与封面"><a href="#文章标题与封面" class="headerlink" title="文章标题与封面"></a>文章标题与封面</h2><p><img src="https://s1.ax1x.com/2023/04/25/p9uidUK.png"></p><h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><ol><li>清理静态缓存</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><ol start="2"><li>生成</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="3"><li>本地部署</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>​部署以后打开一个浏览器，在网址栏输入localhost:4000&#x2F;即可看到网站更新</p><ol start="4"><li>部署到Github</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题的基础通用配置</title>
      <link href="/post/227e574e.html"/>
      <url>/post/227e574e.html</url>
      
        <content type="html"><![CDATA[<h2 id="循环动态显示文字"><a href="#循环动态显示文字" class="headerlink" title="循环动态显示文字"></a>循环动态显示文字</h2><p>可设置主页中展示的网站副标题或者自己喜欢的座右铭</p><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source 調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一句網（簡體） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="comment"># source: 3</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">我双手合十的愿望里永远有你。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">穿越人海，只为与你相拥。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">手握日月摘</span> <span class="string">♥</span> <span class="string">悦。</span></span><br></pre></td></tr></table></figure><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><p>修改主题配置文件_config.butterfly.yml，搜索aside</p><p>带有card_前缀的是显示在网页右边的那一竖列的内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aside (側邊欄)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># left or right</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">category:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">Follow</span> <span class="string">Me</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/hellodqy</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">DQY</span> <span class="string">&amp;</span> <span class="string">WY</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span> <span class="comment"># date or updated</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span> <span class="comment"># none/true/false</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">orderby:</span> <span class="string">random</span> <span class="comment"># Order of tags, random/name/length</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span> <span class="comment"># yearly or monthly</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span> <span class="comment"># eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br></pre></td></tr></table></figure><h2 id="首页文章数目"><a href="#首页文章数目" class="headerlink" title="首页文章数目"></a>首页文章数目</h2><p>首页显示的文章数目在Blog根目录下的系统配置文件修改，打开_config.yml搜索index_generator</p><p>per_page可以修改显示的文章数目</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><h2 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a>访问人数</h2><p>修改主题配置文件_config.butterfly.yml，搜索busuanzi</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h2><p>修改主题配置文件_config.butterfly.yml，搜索runtimeshow</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">publish_date:</span> <span class="number">6</span><span class="string">/7/2018</span> <span class="number">00</span><span class="string">:00:00</span>  </span><br><span class="line">  <span class="comment">##网页开通时间</span></span><br><span class="line">  <span class="comment">#格式: 月/日/年 时间</span></span><br><span class="line">  <span class="comment">#也可以写成 年/月/日 时间</span></span><br></pre></td></tr></table></figure><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><p>进入Blog根目录并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount —save or yarn add hexo-wordcount</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.butterfly.yml，搜索wordcount</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://haiyong.site/img/butterfly/22041102.png"></p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><p>修改主题配置文件_config.butterfly.yml，去掉前面的井号就是启用该选项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">摸鱼||fas</span> <span class="attr">fa-fish:</span></span><br><span class="line">    <span class="string">游戏:</span> <span class="string">/moyu/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-gamepad</span></span><br><span class="line">    <span class="string">工具:</span> <span class="string">/tools/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tools</span></span><br><span class="line">  <span class="string">蓝桥:</span> <span class="string">/lanqiao/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="comment"># 分类: /categories/ ||</span></span><br><span class="line">  <span class="comment"># List||fas fa-list:</span></span><br><span class="line">  <span class="comment">#   Music: /music/ || fas fa-music</span></span><br><span class="line">  <span class="comment">#   Movie: /movies/ || fas fa-video</span></span><br><span class="line">  <span class="string">友人帐:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于我:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><h2 id="关键页面生成"><a href="#关键页面生成" class="headerlink" title="关键页面生成"></a>关键页面生成</h2><p>博客有一些关键页面需要手动生成。</p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>进入Blog根目录cmd执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>打开 <code>source/tags/index.md</code> 文件，修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-03-11 12:53:45</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p>进入Blog根目录cmd执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>打开source&#x2F;categories&#x2F;index.md文件，修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2022-03-11 12:56:06</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="背景图片参考"><a href="#背景图片参考" class="headerlink" title="背景图片参考"></a>背景图片参考</h2><ol><li><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li><a href="https://wall.alphacoders.com/">https://wall.alphacoders.com/</a></li><li><a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a></li></ol><p>网站美化：<a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><h2 id="背景图设置"><a href="#背景图设置" class="headerlink" title="背景图设置"></a>背景图设置</h2><h3 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h3><table><thead><tr><th>配置</th><th>含义</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子页面 的 默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面 的 默认 top_img</td></tr><tr><td>category_per_img</td><td>category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>修改主题配置文件_config.butterfly.yml</p><p>ctrl+f直接搜索index_img</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_img:</span> <span class="string">图片链接(例如:</span> <span class="string">https://s1.ax1x.com/2023/04/25/p9uqhKU.jpg)</span></span><br></pre></td></tr></table></figure><p><code>tag_per_img</code> 和 <code>category_per_img</code> 是 3.2.0 新增的内容，可对 tag 和 category 进行单独的配置</p><p>并不推荐为每个 tag 和每个 category 都配置不同的顶部图，因为配置太多会拖慢生成速度</p><h3 id="footer背景"><a href="#footer背景" class="headerlink" title="footer背景"></a>footer背景</h3><p>修改主题配置文件_config.butterfly.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># footer是否显示图片背景(与 top_img一致)</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>打开<strong>主题配置文件</strong>的_config.yml搜索background，修改background后面的链接即可</p><h3 id="注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’"><a href="#注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’" class="headerlink" title="注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’"></a>注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’</h3><p><img src="https://s1.ax1x.com/2023/04/25/p9uSCrV.png"></p><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><p>修改主题配置文件_config.butterfly.yml，搜索activate-power-mode</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line"><span class="comment"># https://github.com/disjukr/activate-power-mode</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>修改主题配置文件_config.butterfly.yml</p><ol><li><p>烟花，搜索fireworks</p><p>zIndex：-1表示烟火效果在底部；9999表示效果在前面</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span> <span class="comment"># -1 or 9999</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>爱心，搜索click_heart</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击出現爱心</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>搜索ClickShowText</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击出现文字，文字可自行修改</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">I</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">LOVE</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">YOU</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">random:</span> <span class="literal">false</span> <span class="comment"># 文字随机显示</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h2><p>修改主题配置文件_config.butterfly.yml，搜索reward，注意将照片修改为自己的收款码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sponsor/reward</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">       <span class="attr">link:</span></span><br><span class="line">       <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">       <span class="attr">link:</span></span><br><span class="line">       <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h2 id="修改代码高度"><a href="#修改代码高度" class="headerlink" title="修改代码高度"></a>修改代码高度</h2><p>代码过长默认全部显示影响美观，需要设置高度限制</p><p>打开主题配置文件_config.butterfly.yml，搜索highlight，将false改为300(大概就是显示12行代码，超过12行会被折叠起来)</p><p><img src="https://s1.ax1x.com/2023/05/10/p9DAGbF.png"></p><h4 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h4><p><img src="https://s1.ax1x.com/2023/05/10/p9DAN59.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/post/405e7e90.html"/>
      <url>/post/405e7e90.html</url>
      
        <content type="html"><![CDATA[<p>啊~磕磕绊绊终于搭好了，分享一下我的搭建过程和遇到的问题与解决方案：</p><h3 id="安装并配置Node-js"><a href="#安装并配置Node-js" class="headerlink" title="安装并配置Node.js"></a>安装并配置Node.js</h3><p>注意：</p><ol><li>没有需求千万不要安装cnpm！(参考文章第五步有一个按需安装cnpm)</li><li>cmd全程使用管理员模式打开</li></ol><p>参考文章：<a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">https://blog.csdn.net/weixin_52799373/article/details/123840137</a></p><p>cmd管理员模式下执行下述命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="安装并配置Git"><a href="#安装并配置Git" class="headerlink" title="安装并配置Git"></a>安装并配置Git</h3><p>这个没什么坑，照着教程做就好</p><p>Git教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p><img src="https://pic1.zhimg.com/80/v2-010e684d021680e94f0142adc3e014b8_720w.webp"></p><p>呐，这里一定要注意，仓库名称一定得是你的Github用户名.github.io</p><p>例如：你的Github用户名叫做helloworld，那么仓库名称就应该设置为helloworld.github.io</p><p>另外，访问权限得设置成Public，设成Private不得行！</p><p><img src="https://pic2.zhimg.com/80/v2-d6fa95cce4e455153187135c8ee12359_720w.webp"></p><h3 id="生成Github-SSH-Token"><a href="#生成Github-SSH-Token" class="headerlink" title="生成Github  SSH  Token"></a>生成Github  SSH  Token</h3><p>注意：生成的Token记得复制并保存下来</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113125nl1vidmmpo01dmf5.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113129xg4oz4bezohzub97.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113132ift2tkwxfyedt0y7.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113134q8838l6vv776lyv7.png"></p><p>Expiration是这个Token的使用期限，我偷懒就爱选择No expiration(永不过期)</p><p>权限全勾上就好</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113136honfjanazvs9ji1y.png"></p><h3 id="使用SSH-Token"><a href="#使用SSH-Token" class="headerlink" title="使用SSH  Token"></a>使用SSH  Token</h3><ol><li><p>删除远程仓库地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove origin</span><br></pre></td></tr></table></figure></li><li><p>检查是否删除成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>没有输出证明删除成功</p></li><li><p>链接远程仓库</p><p>注意：不要直接复制，SSH密钥粘贴刚刚保存的Token，用户名和仓库名记得替换成你自己的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://SSH密钥@github.com/用户名/仓库名.git</span><br></pre></td></tr></table></figure><p>完成后再次输入第二步的命令，看到fetch和pull的网址里面出现有生成SSH Token就设置成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li></ol><h3 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH  Keys"></a>生成SSH  Keys</h3><p>执行下述命令，提示选择y&#x2F;n就输入y，没有就一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><p>找到密钥位置并复制</p><p><img src="https://static001.geekbang.org/infoq/a2/a29aec8d949a8152bad17e1649316bbc.png"></p><p>测试ssh是否绑定成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果问你yes&#x2F;no直接yes</p><p><img src="https://static001.geekbang.org/infoq/82/827db6ee904638d62a4f5249fe110bdf.png" alt="img"></p><h3 id="本地访问博客"><a href="#本地访问博客" class="headerlink" title="本地访问博客"></a>本地访问博客</h3><ol><li><p>创建一个Blog文件夹并启用Git Bash Here</p><p><img src="https://static001.geekbang.org/infoq/b0/b06a27bee58606277ea46f413b34ed14.png"></p></li><li><p>初始化hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这里折腾了好久，一直显示command not found，重装了好几次node.jx，分析应该是前面安装了cnpm导致hexo的存储位置被改掉了</p><p>解决：前面加一个npx就好了，还是不行的话就自行百度谷歌吧</p><p>这里使用npx hexo … 的话，以后所有hexo命令都需要加上npx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/dd/ddf2ca2f77a32aaff0c8f17b44bbe99b.png"></p></li><li><p>生成本地的hexo页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/25/259acb6b590338700c8f61ffcc531593.png"></p></li><li><p>访问</p><p>浏览器输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/5f/5fde531819308103720a5c098f342092.png"></p></li></ol><p>​ctrl+c关闭服务器</p><h3 id="上传Blog到Github"><a href="#上传Blog到Github" class="headerlink" title="上传Blog到Github"></a>上传Blog到Github</h3><p>修改-config.yml文件</p><p><img src="https://static001.geekbang.org/infoq/76/76aa4fb226389c10209b17cd97f1b7d8.png"></p><p>打开该文件并修改内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你的github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/eb/eb043db3b67fa17c51096553f05cc055.png"></p><h3 id="安装hexo-deployer-git-自动部署发布工具"><a href="#安装hexo-deployer-git-自动部署发布工具" class="headerlink" title="安装hexo-deployer-git 自动部署发布工具"></a>安装hexo-deployer-git 自动部署发布工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/a9/a94aa787c8627d7bc2d95fc3aabe211d.png"></p><p>生成页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/ec/ec4dc5e76906c62036e61f4d083ebaad.png"></p><p>本地文件上传到Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>注意：中间会出现登录界面，复制前面生成的SSH Token粘贴进去就好</p><p><img src="https://static001.geekbang.org/infoq/1b/1ba83adbf958f9ed0ad0129bd843f785.png" alt="上传成功"></p><p>注意：网络报错多次尝试就好</p><p><img src="https://static001.geekbang.org/infoq/5e/5e33beb4a80df251722f550b7ca0de88.png"></p><h3 id="访问Github博客"><a href="#访问Github博客" class="headerlink" title="访问Github博客"></a>访问Github博客</h3><p>浏览器网址输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://用户名.github.io/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/aa/aa2f760148fbcbf6c3ce0b43cbe3433c.png"></p><p>这一步折腾最久，做好的html网页传到Github后，用户名.github.io打不开，报错404，如图</p><p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Vbx2WxHa_5pDuXsBgAqjPgHaEC?w=319&h=143&c=7&r=0&o=5&dpr=1.3&pid=1.7"></p><p>解决：一开始试了很多网上的办法，比如点击页面中间的read the full documention然后跟着里面的步骤操作，没有效果，但是检查了很多遍仓库配置都没有问题，后来发现只是workflow一直没有启动，刷新一下仓库配置就可以了</p><ol><li>打开.github.io仓库并点击Setiings</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171456ke8m5i5wjjhw5qmd.png"></p><ol start="2"><li>点击右侧菜单的Pages并重新选择Source和Branch，我当时配置是对的就没有改，但是保持原来的配置只是重新选择并保存一下可以刷新配置，邮箱就收到workflow启用的邮件了~</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171450vvfwzk3i3233vssw.png"></p><h3 id="博客搭建完毕"><a href="#博客搭建完毕" class="headerlink" title="博客搭建完毕~"></a>博客搭建完毕~</h3><p><img src="https://static001.geekbang.org/infoq/0a/0a397f64a129a210ccbebdff832de7af.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
