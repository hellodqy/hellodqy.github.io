<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo集成Algolia实现网站搜索引擎</title>
      <link href="/post/fe591630.html"/>
      <url>/post/fe591630.html</url>
      
        <content type="html"><![CDATA[<p>尝试一晚终于找到一个可行的办法</p><h2 id="创建-Alogolia-Index"><a href="#创建-Alogolia-Index" class="headerlink" title="创建 Alogolia Index"></a>创建 Alogolia Index</h2><p>首先登陆进入 <a href="https://www.algolia.com/users/sign_in">Algolia 官网</a>，我们可以使用 GitHub 或 Google 帐号登录。</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5A4U.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5CBq.png"></p><p>配置API Key</p><p>接下来我们需要配置 Algolia——API Keys 到我们自己的 hexo 站点中，关联两者，使得 Algolia 能够搜集我们 hexo 站点的数据通过 API 发送给 Aloglia</p><p>回到首页打开API Keys，其中的 <code>Application ID</code> 、<code>Search-Only API Key</code>、<code>Admin API KEY</code>信息将会被用到</p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5FEV.png"></p><p><img src="https://s1.ax1x.com/2023/04/25/p9n5PH0.png"></p><p>首先我们需要修改Blog根目录下的 _config.yml：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: &#x27;你的Applicaiton ID&#x27;</span><br><span class="line">  apiKey: &#x27;你的Search-Only API Key&#x27;</span><br><span class="line">  indexName: &#x27;创建的索引名称&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5kNT.png" alt="只用写上面给的三行即可"></p><p>然后我们需要配置一个名称为 <code>HEXO_ALGOLIA_INDEXING_KEY</code>，内容为 Alogolia 网页中 <code>Admin API KEY</code> 的环境变量，在Blog根目录下进行Git Bash并输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=你的Admin API KEY</span><br></pre></td></tr></table></figure><h2 id="通过-Hexo-Aloglia-获取站点数据"><a href="#通过-Hexo-Aloglia-获取站点数据" class="headerlink" title="通过 Hexo Aloglia 获取站点数据"></a>通过 Hexo Aloglia 获取站点数据</h2><p>前面我们创建了 Index，但是此时为空，不包含任何数据。我们需要安装 <code>Hexo Aloglia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Aloglia</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><p>安装完成后，在 hexo 站点根目录下执行下列命令来搜集数据更新到我们刚创建的 Index 中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n5VCF.png"></p><p>如上图所示则代表成功将 hexo 站点中的数据发送到了 Alogolia 的 Index 中，我们可以在网页中看到所有的数据</p><h2 id="主题集成Algolia："><a href="#主题集成Algolia：" class="headerlink" title="主题集成Algolia："></a>主题集成Algolia：</h2><p>更改<strong>主题配置文件</strong>的_config.yml(注意是主题配置文件的_config.yml，我的是Blog&#x2F;themes&#x2F;butterfly目录下的，不是Blog根目录的_config.yml)，找到 Algolia Search 配置部分(文件当中有，直接搜索)，将<code>enable</code> 改为<code>true</code> 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Algolia search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2023/04/25/p9n555T.png"></p><h2 id="修改搜索目录"><a href="#修改搜索目录" class="headerlink" title="修改搜索目录"></a>修改搜索目录</h2><p>之前一直没改站点URL，昨晚折腾到一点过也没搞好，今早遇到大佬指点才解决</p><p>如果你能搜索到对应文章但是点击搜索记录却是这样的页面</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nvoid.png"></p><p>那应该是你的站点URL没有修改，打开Blog根目录下的_config.yml，将Url里面的网址修改为你的域名</p><p><img src="https://s1.ax1x.com/2023/04/25/p9nxCzq.png"></p><h2 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="注意：每次对网站内容修改以后都需要更新Algolia"><a href="#注意：每次对网站内容修改以后都需要更新Algolia" class="headerlink" title="注意：每次对网站内容修改以后都需要更新Algolia"></a>注意：每次对网站内容修改以后都需要更新Algolia</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客美化与文章发布</title>
      <link href="/post/8f1335fc.html"/>
      <url>/post/8f1335fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="Typora下载与配置"><a href="#Typora下载与配置" class="headerlink" title="Typora下载与配置"></a>Typora下载与配置</h2><p>下载与破解教程：<a href="https://www.cnblogs.com/guoxuanhan/p/16841068.html">Typora 1.4.8 – 2022最新Typora破解激活教程！你的Markdown编辑器！ - 郭炫韩Coding - 博客园 (cnblogs.com)</a></p><h2 id="Butterfly-主题安装"><a href="#Butterfly-主题安装" class="headerlink" title="Butterfly 主题安装"></a>Butterfly 主题安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>这里面如果报错，如下图所示</p><p><img src="https://static001.geekbang.org/infoq/4b/4bd9fe08801a3332cf5552216b631149.png"></p><p>执行下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>Blog根目录下找到_config.yml文件</p><p>搜索找到theme，将landscape改为butterfly</p><p><img src="https://static001.geekbang.org/infoq/b0/b08a6de31ecdfcc74ccb0037f23094b3.png"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="文件夹介绍"><a href="#文件夹介绍" class="headerlink" title="文件夹介绍"></a>文件夹介绍</h2><ul><li><code>_config.yml</code>：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</li><li><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</li><li><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</li><li><code>source</code>：非常重要。所有的个人文件都在里面！</li><li><code>themes</code>：主题文件夹，可以从<a href="https://hexo.io/themes/">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</li></ul><p><img src="https://static001.geekbang.org/infoq/3f/3f7b8b410726691082019f2ab603976b.png"></p><h2 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;新建博客文章名&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><ol><li>清理静态缓存</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><ol start="2"><li>生成</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="3"><li>本地部署</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>​部署以后打开一个浏览器，在网址栏输入localhost:4000&#x2F;即可看到网站更新</p><ol start="4"><li>部署到Github</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><p>背景图片参考网址：</p><ol><li><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li><a href="https://wall.alphacoders.com/">https://wall.alphacoders.com/</a></li><li><a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a></li></ol><p>关键页面生成：<a href="http://haiyong.site/post/cda958f2.html">http://haiyong.site/post/cda958f2.html</a></p><p>网站美化：<a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><p>网站设置在线评论：<a href="http://haiyong.site/post/17c68aa7.html#post-comment">http://haiyong.site/post/17c68aa7.html#post-comment</a></p><h2 id="文章标题与封面"><a href="#文章标题与封面" class="headerlink" title="文章标题与封面"></a>文章标题与封面</h2><p><img src="https://s1.ax1x.com/2023/04/25/p9uidUK.png"></p><h2 id="背景图设置"><a href="#背景图设置" class="headerlink" title="背景图设置"></a>背景图设置</h2><p>上面网站美化的教程里有教顶部图和Footer背景图设置，但是整体背景没太说清楚</p><p>打开<strong>主题配置文件</strong>的_config.yml搜索background，修改background后面的链接即可</p><h3 id="注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’"><a href="#注意：链接一定要用url-括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’-add2c2’" class="headerlink" title="注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’"></a>注意：链接一定要用url()括起来！！！如果用纯色的话，色号要用单引号括起来，例如：’#add2c2’</h3><p><img src="https://s1.ax1x.com/2023/04/25/p9uSCrV.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/post/405e7e90.html"/>
      <url>/post/405e7e90.html</url>
      
        <content type="html"><![CDATA[<p>啊~磕磕绊绊终于搭好了，分享一下我的搭建过程和遇到的问题与解决方案：</p><h3 id="安装并配置Node-js"><a href="#安装并配置Node-js" class="headerlink" title="安装并配置Node.js"></a>安装并配置Node.js</h3><p>注意：</p><ol><li>没有需求千万不要安装cnpm！(参考文章第五步有一个按需安装cnpm)</li><li>cmd全程使用管理员模式打开</li></ol><p>参考文章：<a href="https://blog.csdn.net/weixin_52799373/article/details/123840137">https://blog.csdn.net/weixin_52799373/article/details/123840137</a></p><p>cmd管理员模式下执行下述命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="安装并配置Git"><a href="#安装并配置Git" class="headerlink" title="安装并配置Git"></a>安装并配置Git</h3><p>这个没什么坑，照着教程做就好</p><p>Git教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p><img src="https://pic1.zhimg.com/80/v2-010e684d021680e94f0142adc3e014b8_720w.webp"></p><p>呐，这里一定要注意，仓库名称一定得是你的Github用户名.github.io</p><p>例如：你的Github用户名叫做helloworld，那么仓库名称就应该设置为helloworld.github.io</p><p>另外，访问权限得设置成Public，设成Private不得行！</p><p><img src="https://pic2.zhimg.com/80/v2-d6fa95cce4e455153187135c8ee12359_720w.webp"></p><h3 id="生成Github-SSH-Token"><a href="#生成Github-SSH-Token" class="headerlink" title="生成Github  SSH  Token"></a>生成Github  SSH  Token</h3><p>注意：生成的Token记得复制并保存下来</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113125nl1vidmmpo01dmf5.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113129xg4oz4bezohzub97.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113132ift2tkwxfyedt0y7.png"></p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113134q8838l6vv776lyv7.png"></p><p>Expiration是这个Token的使用期限，我偷懒就爱选择No expiration(永不过期)</p><p>权限全勾上就好</p><p><img src="https://xxx.ilovefishc.com/album/202304/22/113136honfjanazvs9ji1y.png"></p><h3 id="使用SSH-Token"><a href="#使用SSH-Token" class="headerlink" title="使用SSH  Token"></a>使用SSH  Token</h3><ol><li><p>删除远程仓库地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove origin</span><br></pre></td></tr></table></figure></li><li><p>检查是否删除成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>没有输出证明删除成功</p></li><li><p>链接远程仓库</p><p>注意：不要直接复制，SSH密钥粘贴刚刚保存的Token，用户名和仓库名记得替换成你自己的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://SSH密钥@github.com/用户名/仓库名.git</span><br></pre></td></tr></table></figure><p>完成后再次输入第二步的命令，看到fetch和pull的网址里面出现有生成SSH Token就设置成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li></ol><h3 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH  Keys"></a>生成SSH  Keys</h3><p>执行下述命令，提示选择y&#x2F;n就输入y，没有就一路回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>找到密钥位置并复制</p><p><img src="https://static001.geekbang.org/infoq/a2/a29aec8d949a8152bad17e1649316bbc.png"></p><p>测试ssh是否绑定成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果问你yes&#x2F;no直接yes</p><p><img src="https://static001.geekbang.org/infoq/82/827db6ee904638d62a4f5249fe110bdf.png" alt="img"></p><h3 id="本地访问博客"><a href="#本地访问博客" class="headerlink" title="本地访问博客"></a>本地访问博客</h3><ol><li><p>创建一个Blog文件夹并启用Git Bash Here</p><p><img src="https://static001.geekbang.org/infoq/b0/b06a27bee58606277ea46f413b34ed14.png"></p></li><li><p>初始化hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这里折腾了好久，一直显示command not found，重装了好几次node.jx，分析应该是前面安装了cnpm导致hexo的存储位置被改掉了</p><p>解决：前面加一个npx就好了，还是不行的话就自行百度谷歌吧</p><p>这里使用npx hexo … 的话，以后所有hexo命令都需要加上npx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/dd/ddf2ca2f77a32aaff0c8f17b44bbe99b.png"></p></li><li><p>生成本地的hexo页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/25/259acb6b590338700c8f61ffcc531593.png"></p></li><li><p>访问</p><p>浏览器输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/5f/5fde531819308103720a5c098f342092.png"></p></li></ol><p>​ctrl+c关闭服务器</p><h3 id="上传Blog到Github"><a href="#上传Blog到Github" class="headerlink" title="上传Blog到Github"></a>上传Blog到Github</h3><p>修改-config.yml文件</p><p><img src="https://static001.geekbang.org/infoq/76/76aa4fb226389c10209b17cd97f1b7d8.png"></p><p>打开该文件并修改内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你的github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/eb/eb043db3b67fa17c51096553f05cc055.png"></p><h3 id="安装hexo-deployer-git-自动部署发布工具"><a href="#安装hexo-deployer-git-自动部署发布工具" class="headerlink" title="安装hexo-deployer-git 自动部署发布工具"></a>安装hexo-deployer-git 自动部署发布工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/a9/a94aa787c8627d7bc2d95fc3aabe211d.png"></p><p>生成页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/ec/ec4dc5e76906c62036e61f4d083ebaad.png"></p><p>本地文件上传到Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>注意：中间会出现登录界面，复制前面生成的SSH Token粘贴进去就好</p><p><img src="https://static001.geekbang.org/infoq/1b/1ba83adbf958f9ed0ad0129bd843f785.png" alt="上传成功"></p><p>注意：网络报错多次尝试就好</p><p><img src="https://static001.geekbang.org/infoq/5e/5e33beb4a80df251722f550b7ca0de88.png"></p><h3 id="访问Github博客"><a href="#访问Github博客" class="headerlink" title="访问Github博客"></a>访问Github博客</h3><p>浏览器网址输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://用户名.github.io/</span><br></pre></td></tr></table></figure><p><img src="https://static001.geekbang.org/infoq/aa/aa2f760148fbcbf6c3ce0b43cbe3433c.png"></p><p>这一步折腾最久，做好的html网页传到Github后，用户名.github.io打不开，报错404，如图</p><p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Vbx2WxHa_5pDuXsBgAqjPgHaEC?w=319&h=143&c=7&r=0&o=5&dpr=1.3&pid=1.7"></p><p>解决：一开始试了很多网上的办法，比如点击页面中间的read the full documention然后跟着里面的步骤操作，没有效果，但是检查了很多遍仓库配置都没有问题，后来发现只是workflow一直没有启动，刷新一下仓库配置就可以了</p><ol><li>打开.github.io仓库并点击Setiings</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171456ke8m5i5wjjhw5qmd.png"></p><ol start="2"><li>点击右侧菜单的Pages并重新选择Source和Branch，我当时配置是对的就没有改，但是保持原来的配置只是重新选择并保存一下可以刷新配置，邮箱就收到workflow启用的邮件了~</li></ol><p><img src="https://xxx.ilovefishc.com/album/202304/22/171450vvfwzk3i3233vssw.png"></p><h3 id="博客搭建完毕"><a href="#博客搭建完毕" class="headerlink" title="博客搭建完毕~"></a>博客搭建完毕~</h3><p><img src="https://static001.geekbang.org/infoq/0a/0a397f64a129a210ccbebdff832de7af.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
